[
  {
    "path": "Dash/Dash/AppDelegate.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  AppDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Firebase"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "@UIApplicationMain"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class AppDelegate: UIResponder, UIApplicationDelegate {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var window: UIWindow?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func application(_ application: UIApplication,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u003e Bool {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Override point for customization after application launch."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        // FirebaseApp.configure()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func applicationWillResignActive(_ application: UIApplication) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Sent when the application is about to move from active to inactive state."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // or when the user quits the application and it begins the transition to the background state."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Use this method to pause ongoing tasks, disable timers, and invalidate graphics rendering callbacks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Games should use this method to pause the game."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func applicationDidEnterBackground(_ application: UIApplication) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Use this method to release shared resources, save user data, invalidate timers, and store enough"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // application state information to restore your application to its current state in case"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // it is terminated later. If your application supports background execution, this method is called instead of"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // applicationWillTerminate: when the user quits."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func applicationWillEnterForeground(_ application: UIApplication) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Called as part of the transition from the background to the active state;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // here you can undo many of the changes made on entering the background."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func applicationDidBecomeActive(_ application: UIApplication) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Restart any tasks that were paused (or not yet started) while the application was inactive."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // If the application was previously in the background, optionally refresh the user interface."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func applicationWillTerminate(_ application: UIApplication) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Called when the application is about to terminate. Save data if appropriate."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // See also applicationDidEnterBackground:."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 51,
      "Ang YC": 2
    }
  },
  {
    "path": "Dash/Dash/Configuration/Constants.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Constants.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class Constants {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let yVelocity \u003d 600"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let upwardVelocity \u003d CGVector(dx: 0, dy: yVelocity)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let downwardVelocity \u003d CGVector(dx: 0, dy: -yVelocity)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let zeroVelocity \u003d CGVector(dx: 0, dy: 0)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let fps: Double \u003d 1/60"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let gravity \u003d -10.0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let maxVelocity \u003d 500"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let glideVelocity \u003d 12"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let arrowVelocity \u003d 13"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let flappyVelocity \u003d 10"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let gameWidth \u003d 1112"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let gameHeight \u003d 834"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let stageWidth \u003d 1560"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let powerUpSize \u003d 50"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let playerOriginX \u003d 150"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let playerOriginalSize \u003d CGSize(width: 55, height: 55)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let playerShrinkSize \u003d CGSize(width: 30, height: 30)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let topWallOrigin \u003d CGPoint(x: 0, y: 600)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let bottomWallOrigin \u003d CGPoint(x: 0, y: 200)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Path Generation"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let pathTopCap \u003d gameHeight - 75"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let pathBotCap \u003d 75"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let pathTopSmoothCap \u003d gameHeight - 200"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let pathBotSmoothCap \u003d 200"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let pathInterval \u003d 50"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let pathMinInterval \u003d 100"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let pathMaxInterval \u003d 450"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    // Notifications"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let notificationStateChange \u003d \"stateChange\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let notificationShrink \u003d \"shrink\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let notificationGhost \u003d \"ghost\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let notificationDash \u003d \"dash\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let notificationNormal \u003d \"normal\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let notificationCoolDown \u003d \"cooldown\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let notificationDistance \u003d \"distance\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let notificationPowerUpCount \u003d \"powerUpCount\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let notificationCoinCount \u003d \"coinCount\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let notificationMissionMessage \u003d \"missionMessage\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let arrowGravity \u003d CGVector(dx: 0, dy: 0)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let flappyGravity \u003d CGVector(dx: 0, dy: -20)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let glideGravity \u003d CGVector(dx: 0, dy: -10.5)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Power Up"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let powerUps \u003d [PowerUpType.ghost, .dash, .shrink]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let ghostAlpha: CGFloat \u003d 0.5"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    static let roomIdLength \u003d 4"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    static let highScoreLimit \u003d 10"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    // Font"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let defaultFont \u003d \"HelveticaNeue-Light\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let highlightedFont \u003d \"HelveticaNeue-Bold\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 58,
      "Ang YC": 3,
      "jo-lyn": 13
    }
  },
  {
    "path": "Dash/Dash/Configuration/GameTexture.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  GameTexture.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 23/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class GameTexture {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let arrowUp \u003d SKTexture(imageNamed: \"arrow1.png\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let arrowDown \u003d SKTexture(imageNamed: \"arrow2.png\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let arrow \u003d SKTexture(imageNamed: \"arrow3.png\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let sampleBackground \u003d SKTexture(imageNamed: \"background.png\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let yellowGradientBG \u003d SKTexture(imageNamed: \"YellowGradient\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let redGradientBG \u003d SKTexture(imageNamed: \"RedGradient\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let greenGradientBG \u003d SKTexture(imageNamed: \"GreenGradient\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let blueGradientBG \u003d SKTexture(imageNamed: \"BlueGradient\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let topUpperCave \u003d SKTexture(imageNamed: \"TopUpperCave\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let topLowerCave \u003d SKTexture(imageNamed: \"TopLowerCave\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let bottomUpperCave \u003d SKTexture(imageNamed: \"BottomUpperCave\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let bottomLowerCave \u003d SKTexture(imageNamed: \"BottomLowerCave\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let caveWithLight \u003d SKTexture(imageNamed: \"CaveWithLight\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let obstacle1 \u003d SKTexture(imageNamed: \"Obstacle1\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let obstacle2 \u003d SKTexture(imageNamed: \"Obstacle2\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let obstacle3 \u003d SKTexture(imageNamed: \"Obstacle3\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let obstacle4 \u003d SKTexture(imageNamed: \"Obstacle4\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let obstacle5 \u003d SKTexture(imageNamed: \"Obstacle5\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let obstacles \u003d [obstacle1, obstacle2, obstacle3, obstacle4, obstacle5]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let movingObstacle \u003d SKTexture(imageNamed: \"MovingObstacle\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static func getObstacleTexture() -\u003e SKTexture {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let index \u003d Int(arc4random_uniform(UInt32(obstacles.count)))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return obstacles[index]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let greenGem \u003d SKTexture(imageNamed: \"GreenGemSmall\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let yellowGem \u003d SKTexture(imageNamed: \"YellowGemSmall\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let purpleGem \u003d SKTexture(imageNamed: \"PurpleGemSmall\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static let pinkGem \u003d SKTexture(imageNamed: \"PinkGemSmall\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 46
    }
  },
  {
    "path": "Dash/Dash/Configuration/MenuTexture.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MenuTexture.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 17/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class MenuTexture {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let leftArrow \u003d SKTexture(imageNamed: \"ArrowLeft\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let rightArrow \u003d SKTexture(imageNamed: \"ArrowRight\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let returnToMenu \u003d SKTexture(imageNamed: \"ReturnToMenu\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let pause \u003d SKTexture(imageNamed: \"Pause\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let cross \u003d SKTexture(imageNamed: \"Cross\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let missions \u003d SKTexture(imageNamed: \"Missions\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let multiplayer \u003d SKTexture(imageNamed: \"Multiplayer\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let highScore \u003d SKTexture(imageNamed: \"Highscore\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let back \u003d SKTexture(imageNamed: \"Back\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 21
    }
  },
  {
    "path": "Dash/Dash/Configuration/MissionConfig.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MissionConfig.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class MissionConfig {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let initialDistanceCheckpoint \u003d 500"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let initialPowerUpCheckpoint \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let initialCoinCheckpoint \u003d 10"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let distanceOffset \u003d 500"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let powerUpOffset \u003d 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static let coinOffset \u003d 10"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static func message(for value: Int, missionType: MissionType) -\u003e String {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch missionType {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .distance:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return \"Reach \\(value)m in one run\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .powerUp:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return \"Consume \\(value) power ups\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .coin:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return \"Collect \\(value) coins\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 30
    }
  },
  {
    "path": "Dash/Dash/Controller/GameViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  GameViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import GameplayKit"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class GameViewController: UIViewController {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var room: Room?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var gameMode: GameMode \u003d .single"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var networkManager \u003d NetworkManager.shared"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.networkable.syncTime { [weak self] in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.networkManager.networkable.syncTime(onDone: nil)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let view \u003d self.view as? SKView else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Load the SKScene from \u0027GameScene.sks\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        if let room \u003d room, gameMode \u003d\u003d .multi,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let gameScene \u003d SKScene(fileNamed: \"GameScene\") as? GameScene {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                gameScene.characterType \u003d room.characterType"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                gameScene.room \u003d room"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                gameScene.gameMode \u003d gameMode"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                view.presentScene(gameScene)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        } else if let scene \u003d SKScene(fileNamed: \"StartScene\") {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Set the scale mode to scale to fit the window"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            scene.scaleMode \u003d .resizeFill"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Present the scene"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            view.presentScene(scene)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        view.ignoresSiblingOrder \u003d true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        view.showsFPS \u003d true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        view.showsNodeCount \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override var shouldAutorotate: Bool {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 42,
      "Ang YC": 13,
      "jo-lyn": 1
    }
  },
  {
    "path": "Dash/Dash/Controller/PlayerControllers/ArrowController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  ArrowController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 5/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class ArrowController: PlayerController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    let arrowUpTexture \u003d GameTexture.arrowUp"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    let arrowDownTexture \u003d GameTexture.arrowDown"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    weak var playerNode: PlayerNode?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var direction \u003d Direction.goUp"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var isHolding \u003d false"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var wasHolding \u003d false"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    init(playerNode: PlayerNode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let texture \u003d SKTexture(imageNamed: \"arrow3.png\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let playerSize \u003d CGSize(width: 55, height: 55)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let physicsBody \u003d SKPhysicsBody(texture: texture, size: playerSize)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.affectedByGravity \u003d false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.allowsRotation \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.mass \u003d 30"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.velocity \u003d CGVector(dx: 0, dy: 100)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.categoryBitMask \u003d ColliderType.player.rawValue"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.contactTestBitMask \u003d ColliderType.wall.rawValue | ColliderType.obstacle.rawValue |"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            ColliderType.powerup.rawValue | ColliderType.coin.rawValue | ColliderType.boundary.rawValue"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.collisionBitMask \u003d 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playerNode.physicsBody \u003d physicsBody"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.playerNode \u003d playerNode"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func move() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        if isHolding \u0026\u0026 !wasHolding {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            switchDirection()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        wasHolding \u003d isHolding"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func switchDirection() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let physicsBody \u003d playerNode?.physicsBody else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch direction {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .goUp:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            direction \u003d .goDown"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            physicsBody.velocity \u003d Constants.downwardVelocity"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .goDown:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            direction \u003d .goUp"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            physicsBody.velocity \u003d Constants.upwardVelocity"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 5,
      "jo-lyn": 56
    }
  },
  {
    "path": "Dash/Dash/Controller/PlayerControllers/FlappyController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  FlappyController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 5/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class FlappyController: PlayerController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    weak var playerNode: PlayerNode?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var direction \u003d Direction.goUp"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var isHolding \u003d false"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var wasHolding \u003d false"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    init(playerNode: PlayerNode) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let texture \u003d SKTexture(imageNamed: \"arrow3.png\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let playerSize \u003d CGSize(width: 55, height: 55)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let physicsBody \u003d SKPhysicsBody(texture: texture, size: playerSize)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.affectedByGravity \u003d true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.allowsRotation \u003d false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.mass \u003d 0.1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.velocity \u003d CGVector(dx: 0, dy: 0)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.categoryBitMask \u003d ColliderType.player.rawValue"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.contactTestBitMask \u003d ColliderType.wall.rawValue | ColliderType.obstacle.rawValue |"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            ColliderType.powerup.rawValue | ColliderType.coin.rawValue | ColliderType.boundary.rawValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.collisionBitMask \u003d 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playerNode.physicsBody \u003d physicsBody"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.playerNode \u003d playerNode"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func move() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        if isHolding \u0026\u0026 !wasHolding {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            jump()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        wasHolding \u003d isHolding"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func jump() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let physicsBody \u003d playerNode?.physicsBody else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.applyImpulse(CGVector(dx: 0, dy: 450))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let velocity \u003d physicsBody.velocity"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if velocity.dy \u003e CGFloat(900) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            physicsBody.velocity.dy \u003d 900"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if velocity.dy \u003c CGFloat(-900) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            physicsBody.velocity.dy \u003d -900"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 10,
      "jo-lyn": 47
    }
  },
  {
    "path": "Dash/Dash/Controller/PlayerControllers/GlideController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  GlideController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 5/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class GlideController: PlayerController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    weak var playerNode: PlayerNode?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var isHolding \u003d false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    init(playerNode: PlayerNode) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let texture \u003d SKTexture(imageNamed: \"arrow3.png\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let playerSize \u003d CGSize(width: 55, height: 55)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let physicsBody \u003d SKPhysicsBody(texture: texture, size: playerSize)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.affectedByGravity \u003d true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.allowsRotation \u003d false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.mass \u003d 0.1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        physicsBody.velocity \u003d CGVector(dx: 0, dy: 0)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.categoryBitMask \u003d ColliderType.player.rawValue"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.contactTestBitMask \u003d ColliderType.wall.rawValue | ColliderType.obstacle.rawValue"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            | ColliderType.powerup.rawValue | ColliderType.coin.rawValue | ColliderType.boundary.rawValue"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.collisionBitMask \u003d 0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playerNode.physicsBody \u003d physicsBody"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.playerNode \u003d playerNode"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func move() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard isHolding else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        glideUp()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func glideUp() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let physicsBody \u003d playerNode?.physicsBody else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsBody.applyForce(CGVector(dx: 0, dy: 370))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let velocity \u003d physicsBody.velocity"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        if velocity.dy \u003e CGFloat(700) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            physicsBody.velocity.dy \u003d 700"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        } else if velocity.dy \u003c CGFloat(-700) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            physicsBody.velocity.dy \u003d -700"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 6,
      "jo-lyn": 48
    }
  },
  {
    "path": "Dash/Dash/Controller/PlayerControllers/PlayerController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  PlayerController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 3/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "/*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": " `PlayerController` defines the handler for player controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "protocol PlayerController {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var playerNode: PlayerNode? { get set }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var isHolding: Bool { get set }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func move()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 18
    }
  },
  {
    "path": "Dash/Dash/Logic/CollectibleGenerator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  CollectibleGenerator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " `CollectibleGenerator` handles generation of `Coin` and `PowerUp`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class CollectibleGenerator {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var generator: SeededGenerator"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ seed: UInt64) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generator \u003d SeededGenerator(seed: seed)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func generatePowerUp(xPos: Int, path: Path) -\u003e PowerUp {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let yPos \u003d path.getPointAt(xVal: xPos)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return PowerUp(yPos: yPos)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func generateCoin(xPos: Int, path: Path) -\u003e Coin {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let yPos \u003d path.getPointAt(xVal: xPos)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Coin(yPos: yPos)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 31
    }
  },
  {
    "path": "Dash/Dash/Logic/GameEngine.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  GameEngine.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 21/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " `GameEngine` handles the main game logic, including updating the game object positions,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " as well as handling power up and linking with `NetworkManager`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class GameEngine {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var gameModel: GameModel"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var generator: MainGenerator"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var missionManager: MissionManager"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Stage game time info"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var inGameTime \u003d 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var currentStageTime \u003d 0 {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if currentStageTime \u003e\u003d Constants.stageWidth {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                gameBegin \u003d true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                // Get walls of new stage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                let set \u003d generator.getNext()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                gameModel.movingObjects.append(set.topWall)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                gameModel.movingObjects.append(set.bottomWall)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                currentStageTime \u003d 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var currentTime \u003d 0.0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var speed \u003d Constants.glideVelocity"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var normalSpeed \u003d Constants.glideVelocity"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // PowerUp"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var powerUpActivated \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var powerUpCooldownDistance \u003d 0"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var powerUpEndDistance \u003d 0"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    // Networking"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var gameBegin \u003d false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var networkManager \u003d NetworkManager.shared"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var handlerId: Int?"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Timer"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var timer: Timer?"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ model: GameModel, seed: UInt64) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Initialise generator"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generator \u003d MainGenerator(model, seed: seed)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Initialise model and mission manager"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gameModel \u003d model"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionManager \u003d MissionManager(mission: gameModel.mission)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameModel.addObserver(missionManager)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Set game speed"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initSpeed(type: model.type)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        startTimer()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard model.gameMode \u003d\u003d .multi else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initMulti()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func initMulti() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        handlerId \u003d networkManager.addActionHandler { [weak self] (peerID, action) in"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.gameModel.room?.players.forEach { (player) in"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                guard player.id \u003d\u003d peerID else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                switch action.type {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                case .hold:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                    player.actionList.append(Action(time: action.time + 0.2, type: .hold))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                case .release:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                    player.actionList.append(Action(time: action.time + 0.2, type: .release))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    break"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Initialise in game speed"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - type: `CharacterType` describes player control type in game"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func initSpeed(type: CharacterType) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch type {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .arrow: normalSpeed \u003d Constants.arrowVelocity"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .flappy: normalSpeed \u003d Constants.flappyVelocity"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case.glide: normalSpeed \u003d Constants.glideVelocity"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        speed \u003d normalSpeed"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generator.speed \u003d normalSpeed"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Begin game engine timer"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func startTimer() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        timer \u003d Timer.scheduledTimer(timeInterval: Constants.fps, target: self,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                     selector: #selector(updateGame), userInfo: nil, repeats: true)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Stop or pause game engine timer"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func stopTimer() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        timer?.invalidate()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    @objc private func updateGame() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        checkPowerUp()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        checkObjectsToGenerate()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        updatePositionsAndTime()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func update(_ deltaTime: Double, _ currentTime: Double) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.currentTime \u003d currentTime"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameModel.time \u003d currentTime"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameModel.player.step(currentTime)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        if let room \u003d gameModel.room {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            for player in room.players {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                player.step(currentTime)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Update positions of all moving objects and distance in `GameModel`, and in game time."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func updatePositionsAndTime() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        updateGameObjects(speed: speed)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameModel.distance +\u003d Int(speed / 10)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        inGameTime +\u003d speed"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        currentStageTime +\u003d speed"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Update positions of all moving objects in `GameModel`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func updateGameObjects(speed: Int) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        for object in gameModel.movingObjects {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            switch object.objectType {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case .movingObstacle:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                object.update(speed: speed * 2)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                object.update(speed: speed)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Remove objects that are out of screen"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gameModel.movingObjects \u003d gameModel.movingObjects.filter {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            $0.xPos \u003e -$0.width - 100"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Generate moving objects in game from generator"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func checkObjectsToGenerate() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard gameBegin else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Get all objects from generator to be added"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        while let object \u003d generator.checkAndGetObject(position: inGameTime) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Do not generate power up if power up is currently activated"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if object.objectType \u003d\u003d .powerup \u0026\u0026 powerUpActivated {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            gameModel.movingObjects.append(object)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "// MARK: Power Up Handling"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "extension GameEngine {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Trigger a power up effect"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - type: type of `PowerUp`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func triggerPowerUp(type: PowerUpType) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard !powerUpActivated else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        updatePlayerState(to: type)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        powerUpActivated \u003d true"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameModel.powerUpCount +\u003d 1"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if type \u003d\u003d .dash {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            speed *\u003d 2"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            powerUpCooldownDistance \u003d inGameTime + Constants.gameWidth * 2"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            powerUpEndDistance \u003d powerUpCooldownDistance + Constants.gameWidth"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            powerUpCooldownDistance \u003d inGameTime + Constants.gameWidth * 2"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            powerUpEndDistance \u003d powerUpCooldownDistance + Constants.gameWidth"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Update game state when power up is activated"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func checkPowerUp() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard powerUpActivated else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if inGameTime \u003e\u003d powerUpEndDistance {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            updatePlayerState(to: .normal)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            powerUpActivated \u003d false"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if inGameTime \u003e\u003d powerUpCooldownDistance {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if gameModel.player.state \u003d\u003d .dash {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                speed \u003d normalSpeed"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                updatePlayerState(to: .cooldown)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            } else if gameModel.player.state !\u003d .cooldown {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                updatePlayerState(to: .cooldown)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func updatePlayerState(to state: PowerUpType) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let action \u003d Action(time: currentTime, type: .powerup)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        action.powerUp \u003d state"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameModel.player.actionList.append(action)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard gameModel.gameMode \u003d\u003d .multi else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.sendAction(action)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "// MARK: Player Controls"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "extension GameEngine {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func hold(_ position: CGPoint, _ velocity: CGVector) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let action \u003d Action(time: currentTime, type: .hold)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        action.position \u003d position"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        action.velocity \u003d velocity"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameModel.player.actionList.append(action)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard gameModel.gameMode \u003d\u003d .multi else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.sendAction(action)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func release(_ position: CGPoint, _ velocity: CGVector) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let action \u003d Action(time: currentTime, type: .release)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        action.position \u003d position"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        action.velocity \u003d velocity"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameModel.player.actionList.append(action)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard gameModel.gameMode \u003d\u003d .multi else {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.sendAction(action)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 179,
      "Ang YC": 65,
      "jo-lyn": 8
    }
  },
  {
    "path": "Dash/Dash/Logic/GameParameters.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  GameParameters.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "struct GameParameters {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var type: CharacterType"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var generator: SeededGenerator"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Difficulty"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var difficulty \u003d 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    //Path Generation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var switchProb \u003d 0.3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var interval \u003d Constants.pathInterval"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Wall Generation"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var topWallMin \u003d 500"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var topWallMax \u003d 500"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var botWallMin \u003d -500"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var botWallMax \u003d -500"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var width \u003d 600"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var minWidth: Int"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var diff \u003d 100"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Obstacle Generation"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var obstacleMinInterval \u003d 300"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var obstacleMaxInterval \u003d 900"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var obstacleOffset \u003d 150"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var obstacleMinOffset \u003d 50"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var movingProb: Float \u003d 0.0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var obstacleGenerated \u003d true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Power Up Generation"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var nextPowerUpMinInterval \u003d 3000"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var nextPowerUpMaxInterval \u003d 7000"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ type: CharacterType, seed: UInt64) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.type \u003d type"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.generator \u003d SeededGenerator(seed: seed)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch type {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .arrow:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            interval \u003d Constants.pathMaxInterval"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            width \u003d 500"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            minWidth \u003d 200"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            topWallMin \u003d width/2"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            topWallMax \u003d width/2"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            botWallMin \u003d -width/2"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            botWallMax \u003d -width/2"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            obstacleMinOffset \u003d 100"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .flappy:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            width \u003d 700"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            minWidth \u003d 500"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            topWallMin \u003d width/2"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            topWallMax \u003d width/2"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            botWallMin \u003d -width/2"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            botWallMax \u003d -width/2"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            obstacleMinOffset \u003d 100"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .glide:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            width \u003d 600"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            minWidth \u003d 400"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            topWallMin \u003d width/2"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            topWallMax \u003d width/2"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            botWallMin \u003d -width/2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            botWallMax \u003d -width/2"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            obstacleMinOffset \u003d 200"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    mutating func nextStage() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        topWallMin \u003d (width/2) + Int.random(in: (-width/4)...(width/4), using: \u0026generator)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        topWallMax \u003d topWallMin + diff"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        botWallMax \u003d -(width - topWallMin)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        botWallMin \u003d botWallMax - diff"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        width \u003d max(width - 10, minWidth)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        difficulty +\u003d 1"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if difficulty \u003e 6 {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            movingProb \u003d 0.3"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        obstacleOffset \u003d max(obstacleOffset - 4, obstacleMinOffset)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 96
    }
  },
  {
    "path": "Dash/Dash/Logic/MainGenerator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  MainGenerator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 21/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "struct WallSet {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var path: Path"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var topWall: Wall"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var bottomWall: Wall"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " `MainGenerator` handles generation of in-game objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class MainGenerator {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Generator"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private let pathGenerator: PathGenerator"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private let wallGenerator: WallGenerator"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private let obstacleGenerator: ObstacleGenerator"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private let powerUpGenerator: CollectibleGenerator"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var gameGenerator: SeededGenerator"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Information for Path and Wall Generation"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var pathEndPoint \u003d Point(xVal: 0, yVal: Constants.gameHeight / 2)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var topWallEndY \u003d Constants.gameHeight"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var bottomWallEndY \u003d 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var path \u003d Path()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var topWall \u003d Wall(top: true)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var bottomWall \u003d Wall(top: false)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Current Stage Path and Wall for Obstacle and Collectible Calculation and Generation"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var currentPath \u003d Path()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var currentTopWall \u003d Wall(top: true)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var currentBottomWall \u003d Wall(top: false)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Object Generation Position"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var currentObstaclePosition \u003d Constants.stageWidth"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var currentPowerUpPosition \u003d Constants.stageWidth"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var currentCoinPosition \u003d Constants.stageWidth"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var pathMax \u003d Constants.stageWidth"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var speed \u003d Constants.glideVelocity"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var parameters: GameParameters"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Contains `WallSet` for five stages"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var queue \u003d Queue\u003cWallSet\u003e()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Contains all objects queued to be generated, in order of time to be generated"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var movingObjects \u003d MovingObjectQueue(min: true)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ model: GameModel, seed: UInt64) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        pathGenerator \u003d PathGenerator(seed)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        pathGenerator.smoothing \u003d !(model.type \u003d\u003d .arrow)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        wallGenerator \u003d WallGenerator(seed)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        obstacleGenerator \u003d ObstacleGenerator(seed)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        powerUpGenerator \u003d CollectibleGenerator(seed)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gameGenerator \u003d SeededGenerator(seed: seed)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        parameters \u003d GameParameters(model.type, seed: seed)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initWallQueue()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns next `WallSet`, called when reached next stage"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func getNext() -\u003e WallSet {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        updateParams()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if queue.isEmpty {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            addToQueue()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            DispatchQueue.global().async {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                self.addToQueue()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let set \u003d queue.dequeue() else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            fatalError()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        parameters.nextStage()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        currentPath \u003d set.path"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        currentTopWall \u003d set.topWall"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        currentBottomWall \u003d set.bottomWall"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        DispatchQueue.global().async {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.initStageObjectQueue()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return set"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns `MovingObject` if position is valid to be generated,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// when in game position of `GameEngine` is larger than the `MovingObject` position"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - position: In game position of `GameEngine`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func checkAndGetObject(position: Int) -\u003e MovingObject? {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let first \u003d movingObjects.peek() else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard position \u003e\u003d first.initialPos else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Add new game object to queue when one is retrieved."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        DispatchQueue.global().async {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            switch first.objectType {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case .coin:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                self.addCoin()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case .movingObstacle, .obstacle:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                self.addObstacle()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                break"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return movingObjects.poll()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Update generation parameters when setting new stage"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func updateParams() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        currentObstaclePosition \u003d pathMax"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        currentCoinPosition \u003d pathMax"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        currentPowerUpPosition \u003d pathMax"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        pathMax +\u003d Constants.stageWidth"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Initialise wall queue by adding five `WallSet`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func initWallQueue() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        for _ in 0..\u003c5 {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            addToQueue()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Insert new obstacle, coin and power up at new stage"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func initStageObjectQueue() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        for _ in 0..\u003c3 {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            addObstacle()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            addCoin()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        addPowerUp()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Generate new path, and then new top and bottom walls into `WallSet` queue"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func addToQueue() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // First step: Generate new path based on parameters"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let generatedPath \u003d pathGenerator.generateModel(startingPt: pathEndPoint, startingGrad: 0.0,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                        prob: parameters.switchProb,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                        range: Constants.stageWidth)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Second step: Generate walls based on path generated"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let generatedTopWall \u003d Wall(path: wallGenerator.generateTopWallModel(path: generatedPath,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                                             startingY: topWallEndY,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                                             minRange: parameters.topWallMin,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                                             maxRange: parameters.topWallMax),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                    top: true)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let generatedBottomWall \u003d Wall(path: wallGenerator.generateBottomWallModel(path: generatedPath,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                                                   startingY: bottomWallEndY,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                                                   minRange: parameters.botWallMin,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                                                   maxRange: parameters.botWallMax),"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                       top: false)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Third step: Update parameters to set up subsequent path and wall generation"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        path \u003d generatedPath"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        topWall \u003d generatedTopWall"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        bottomWall \u003d generatedBottomWall"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        pathEndPoint \u003d Point(xVal: 0, yVal: path.lastPoint.yVal)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        topWallEndY \u003d topWall.lastPoint.yVal"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        bottomWallEndY \u003d bottomWall.lastPoint.yVal"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Fourth step: Enqueue generated walls to be retrieved by game engine"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        queue.enqueue(WallSet(path: path, topWall: topWall, bottomWall: bottomWall))"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func addObstacle() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let position \u003d currentObstaclePosition + Int.random(in: 20...50, using: \u0026gameGenerator) * speed"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard position \u003c pathMax else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        currentObstaclePosition \u003d position"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generateObstacle(position: currentObstaclePosition)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func generateObstacle(position: Int) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let set \u003d WallSet(path: currentPath, topWall: currentTopWall, bottomWall: currentTopWall)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let obstacle \u003d obstacleGenerator.generateNextObstacle(xPos: position % Constants.stageWidth,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                              wallSet: set, width: parameters.obstacleOffset,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                              movingProb: parameters.movingProb)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let validObstacle \u003d obstacle else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        validObstacle.initialPos \u003d position"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        movingObjects.add(validObstacle)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func addCoin() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let prob \u003d Int.random(in: 0...100, using: \u0026gameGenerator)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let position \u003d prob \u003e 55 ? currentCoinPosition + speed * 8 : currentCoinPosition + speed * 40"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard position \u003c pathMax else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        currentCoinPosition \u003d position"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generateCoin(position: currentCoinPosition)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func generateCoin(position: Int) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let coin \u003d powerUpGenerator.generateCoin(xPos: position % Constants.stageWidth, path: currentPath)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        coin.initialPos \u003d position"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        movingObjects.add(coin)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func addPowerUp() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard parameters.difficulty % 4 \u003d\u003d 0 else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let position \u003d currentPowerUpPosition +"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            Int.random(in: 2...(Constants.stageWidth / speed - 2), using: \u0026gameGenerator) * speed"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard position \u003c pathMax else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generatePowerUp(position: position)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func generatePowerUp(position: Int) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let powerup \u003d powerUpGenerator.generatePowerUp(xPos: position % Constants.stageWidth, path: currentPath)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        powerup.initialPos \u003d position"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        movingObjects.add(powerup)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 231
    }
  },
  {
    "path": "Dash/Dash/Logic/MissionManager.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MissionsManager.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "/*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": " `MissionManager` detects and handles mission completion."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class MissionManager: Observer {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var missionCheckpointList: [MissionType: Int]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var mission: Mission"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    init(mission: Mission) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.mission \u003d mission"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.missionCheckpointList \u003d ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            .distance: Storage.getMissionCheckpoint(forMissionType: .distance),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            .powerUp: Storage.getMissionCheckpoint(forMissionType: .powerUp),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            .coin: Storage.getMissionCheckpoint(forMissionType: .coin)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func onValueChanged(name: String, object: Any?) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let value \u003d object as? Int else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch name {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case Constants.notificationDistance:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            checkMissionCompletion(for: .distance, value: value)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case Constants.notificationPowerUpCount:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            checkMissionCompletion(for: .powerUp, value: value)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case Constants.notificationCoinCount:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            checkMissionCompletion(for: .coin, value: value)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func hasPassedCheckpoint(for missionType: MissionType, value: Int) -\u003e Bool {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let checkpoint \u003d missionCheckpointList[missionType] else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        return value \u003e\u003d checkpoint"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func checkMissionCompletion(for missionType: MissionType, value: Int) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard hasPassedCheckpoint(for: missionType, value: value) else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        setCheckpointToDisplay(for: missionType)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        updateNextCheckpoint(for: missionType)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func setCheckpointToDisplay(for missionType: MissionType) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let checkpoint \u003d missionCheckpointList[missionType] ?? 0"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let message \u003d MissionConfig.message(for: checkpoint, missionType: missionType)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        mission.message \u003d message"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    /// Updates next checkpoint in `missionCheckpointList` and storage"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func updateNextCheckpoint(for missionType: MissionType) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nextCheckpoint \u003d nextCheckpointValue(for: missionType)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionCheckpointList[missionType] \u003d nextCheckpoint"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        Storage.saveMissionCheckpoint(nextCheckpoint, forMissionType: missionType)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    /// Generates the next checkpoint for the given `missionType`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func nextCheckpointValue(for missionType: MissionType) -\u003e Int {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        var currentCheckpoint: Int"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        var nextCheckpoint: Int"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch missionType {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .distance:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            currentCheckpoint \u003d missionCheckpointList[.distance] ?? 0"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            nextCheckpoint \u003d currentCheckpoint + MissionConfig.distanceOffset"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .powerUp:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            currentCheckpoint \u003d missionCheckpointList[.powerUp] ?? 0"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            nextCheckpoint \u003d currentCheckpoint + MissionConfig.powerUpOffset"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .coin:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            currentCheckpoint \u003d missionCheckpointList[.coin] ?? 0"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            nextCheckpoint \u003d currentCheckpoint + MissionConfig.coinOffset"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        return nextCheckpoint"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 92
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/Codable+Dictionary.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Codable+Dictionary.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "extension Encodable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var dictionary: [String: Any]? {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let data \u003d try? JSONEncoder().encode(self) else { return nil }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return (try? JSONSerialization.jsonObject(with: data,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                  options: .allowFragments)).flatMap { $0 as? [String: Any] }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "extension Decodable {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    init?(dict: [String: Any]) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let decoder \u003d JSONDecoder()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let jsonData \u003d try? JSONSerialization.data(withJSONObject: dict, options: []),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let decoded \u003d try? decoder.decode(Self.self, from: jsonData) else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self \u003d decoded"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 2,
      "Ang YC": 26
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/Envelope.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Envelope.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "class Envelope\u003cT: Codable\u003e: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var peerID: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var payload: T"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    init(_ peerID: String, _ payload: T) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.peerID \u003d peerID"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.payload \u003d payload"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case peerID"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case payload"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.peerID \u003d try values.decode(String.self, forKey: .peerID)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.payload \u003d try values.decode(T.self, forKey: .payload)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        try container.encode(peerID, forKey: .peerID)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        try container.encode(payload, forKey: .payload)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 36
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/FirebaseHighScoreProvider.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  FirebaseHighScoreProvider.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Firebase"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "class FirebaseHighScoreProvider: HighScoreProvider {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var limit: Int"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    let ref: DatabaseReference"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    required init(limit: Int) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.limit \u003d limit"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        ref \u003d FirebaseInstance.ref"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func setHighScore(_ record: HighScoreRecord, category: HighScoreCategory, onDone: (() -\u003e Void)?) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let highScoreRef \u003d ref.child(\"highscores\").child(category.rawValue)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let childRef \u003d highScoreRef.childByAutoId()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let dict \u003d record.dictionary else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        childRef.setValue(dict)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        onDone?()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func getHighScore(category: HighScoreCategory, onDone: (([HighScoreRecord]) -\u003e Void)?) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        ref.child(\"highscores\").child(category.rawValue)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            .queryOrdered(byChild: \"score\").queryLimited(toLast: UInt(limit))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            .observeSingleEvent(of: .value) { (snapshot) in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                guard let dict \u003d snapshot.value as? [String: Any?] else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    onDone?([])"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                let records: [HighScoreRecord] \u003d dict.compactMap { (arg) in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    let (_, dict2) \u003d arg"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    guard let dict3 \u003d dict2 as? [String: Any] else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                        return nil"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return HighScoreRecord(dict: dict3)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                let sorted \u003d records.sorted { $0.score \u003e $1.score }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                onDone?(sorted)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 51
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/FirebaseInstance.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  FirebaseInstance.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Firebase"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "class FirebaseInstance {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    static let ref \u003d FirebaseInstance().ref"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    let ref: DatabaseReference"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private init() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        FirebaseApp.configure()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.ref \u003d Database.database().reference()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 20
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/FirebaseNetwork.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  FirebaseNetwork.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Firebase"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "class FirebaseNetwork: Networkable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    let peerID: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private (set) var timeOffset \u003d 0.0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private (set) var joinedRoomID \u003d \"_\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    let ref: DatabaseReference"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var playerRef: DatabaseReference?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var infoRef: DatabaseReference?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private (set) var roomInfo \u003d [String: Any?]()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private (set) var allPlayers \u003d Set\u003cString\u003e()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private (set) var onPlayersChange: (([String]) -\u003e Void)?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private (set) var onRoomInfo: (([String: Any?]) -\u003e Void)?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private (set) var references \u003d [String: DatabaseReference]()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private (set) var callbacks \u003d [String: ((DataSnapshot) -\u003e Void)]()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        peerID \u003d UIDevice.current.identifierForVendor!.uuidString"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        ref \u003d FirebaseInstance.ref"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func createRoom(onDone: ((_ err: Any?, _ roomID: String?) -\u003e Void)?) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let maxId \u003d Int(truncating: NSDecimalNumber("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            decimal: pow(10, Constants.roomIdLength)))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let randomInt \u003d Int.random(in: 0..\u003cmaxId)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let roomId \u003d String(format: \"%0\\(Constants.roomIdLength)d\", randomInt)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        ref.child(\"rooms\").child(roomId)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            .setValue([\"roomId\": roomId, \"started\": false]) { (error, ref) in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                guard error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    onDone?(error, nil)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                onDone?(nil, roomId)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func joinRoom(_ roomId: String, onDone: ((_ err: Any?) -\u003e Void)?) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        ref.child(\"rooms\").child(roomId).child(\"started\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            .observeSingleEvent(of: .value) { [weak self] (snapshot) in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                guard snapshot.exists() else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    onDone?(\"Room not exists\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.joinRoomHandler(roomId, onDone: onDone)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func joinRoomHandler(_ roomId: String, onDone: ((_ err: Any?) -\u003e Void)?) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let databaseRef \u003d ref.child(\"rooms\").child(roomId).child(\"players\").child(peerID)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        databaseRef.setValue([\"peerID\": peerID]) { [weak self] (error, _) in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                onDone?(error)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.joinedRoomID \u003d roomId"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.resetEventRef()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.initPlayersChange()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.initInfoChange()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            onDone?(nil)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func leaveRoom(onDone: ((_ err: Any?) -\u003e Void)?) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        allPlayers.removeAll()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        roomInfo.removeAll()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        informPlayersChange()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        informInfoChange()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerRef?.removeAllObservers()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerRef \u003d nil"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        infoRef?.removeAllObservers()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        infoRef \u003d nil"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        joinedRoomID \u003d \"_\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        removeAllObservers()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        ref.child(\"rooms\").child(joinedRoomID).child(\"players\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            .child(peerID).removeValue() { (error, _) in"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                guard error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    onDone?(error)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                onDone?(nil)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func initPlayersChange() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        allPlayers.removeAll()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerRef?.removeAllObservers()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerRef \u003d ref.child(\"rooms\").child(joinedRoomID).child(\"players\")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerRef?.observeSingleEvent(of: .value) { [weak self] (snapshot) in"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard let dict \u003d snapshot.value as? [String: Any] else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            dict.keys.forEach {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                guard $0 !\u003d self?.peerID else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.allPlayers.insert($0)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.informPlayersChange()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerRef?.observe(.childAdded, with: onPlayersChange(false))"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerRef?.observe(.childRemoved, with: onPlayersChange(true))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func onPlayersChange(_ isRemoved: Bool) -\u003e ((DataSnapshot) -\u003e Void) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        return { [weak self] (snapshot) in"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let peerID \u003d snapshot.key"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard let self \u003d self, peerID !\u003d self.peerID else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if isRemoved {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self.allPlayers.remove(peerID)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self.allPlayers.insert(peerID)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self.informPlayersChange()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func informPlayersChange() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        onPlayersChange?(Array(allPlayers))"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func initInfoChange() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        roomInfo.removeAll()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        infoRef?.removeAllObservers()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        infoRef \u003d ref.child(\"rooms\").child(joinedRoomID).child(\"info\")"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        infoRef?.observe(.value) { [weak self] (snapshot) in"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard let dict \u003d snapshot.value as? [String: Any?] else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.roomInfo \u003d dict"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.informInfoChange()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func informInfoChange() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        onRoomInfo?(roomInfo)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func setRoomInfo(_ key: String, value: Any?) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        infoRef?.child(key).setValue(value)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func setOnRoomInfo(_ run: (([String: Any?]) -\u003e Void)?) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        onRoomInfo \u003d run"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func onEvent\u003cT: GamePayload\u003e(_ event: String, type: T.Type, run: ((String, T) -\u003e Void)?) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        createEventRef(event)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let eventRef \u003d references[event] else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let callback: ((DataSnapshot) -\u003e Void) \u003d { snapshot in"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard let dict \u003d snapshot.value as? [String: Any],"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                let decoded \u003d Envelope\u003cT\u003e(dict: dict) else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            run?(decoded.peerID, decoded.payload)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        callbacks[event] \u003d callback"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        eventRef.observe(.childAdded, with: callback)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func emitEvent(_ event: String, object: GamePayload) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        createEventRef(event)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let eventRef \u003d references[event] else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let childRef \u003d eventRef.childByAutoId()"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let env \u003d Envelope\u003cGamePayload\u003e(peerID, object)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let dict \u003d env.dictionary else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        childRef.setValue(dict)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func createEventRef(_ event: String) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard !references.keys.contains(event) else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        references[event] \u003d ref.child(\"rooms\").child(joinedRoomID)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            .child(\"events\").child(event)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func resetEventRef() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        var newReferences \u003d [String: DatabaseReference]()"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        references.keys.forEach { (event) in"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard let callback \u003d callbacks[event] else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let newRef \u003d ref.child(\"rooms\").child(joinedRoomID).child(\"events\").child(event)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            newReferences[event] \u003d newRef"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            newRef.observe(.childAdded, with: callback)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        removeAllObservers()"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        references \u003d newReferences"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func removeAllObservers() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        var iter \u003d references.makeIterator()"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        while let eventRef \u003d iter.next() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            eventRef.value.removeAllObservers()"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        references.removeAll()"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func setOnPlayersChange(_ onPlayersChange: (([String]) -\u003e Void)?) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.onPlayersChange \u003d onPlayersChange"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func syncTime(onDone: (() -\u003e ())?) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let timeRef \u003d ref.child(\"players\").child(peerID).child(\"syncTime\")"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        var data \u003d [String: Any]()"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        data[\"timestamp\"] \u003d ServerValue.timestamp()"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let startTime \u003d Date().timeIntervalSince1970 * 1000"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        var syncId: UInt?"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        var firstCall \u003d false"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        syncId \u003d timeRef.observe(.value) { [weak self] (snapshot) in"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            if !firstCall {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                firstCall \u003d true"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard let value \u003d snapshot.value as? [String: Any],"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                let serverTime \u003d value[\"timestamp\"] as? Double else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let endTime \u003d Date().timeIntervalSince1970 * 1000"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let midTime \u003d (startTime + endTime) / 2.0"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.timeOffset \u003d serverTime - midTime"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            onDone?()"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            if let syncId \u003d syncId {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                timeRef.removeObserver(withHandle: syncId)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        timeRef.setValue(data)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func getServerTime() -\u003e Double {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        return Date().timeIntervalSince1970 * 1000 + timeOffset"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func getLocalTime(fromServerTime serverTime: Double) -\u003e Double {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        return serverTime - timeOffset"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 3,
      "Ang YC": 259
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/GameMode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  GameMode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "enum GameMode: String, CaseIterable, Decodable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case single"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case multi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case shadow"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 15
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/GamePayload.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  GamePayload.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "class GamePayload: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 13
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/HighScoreCategory.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  HighScoreCategory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "enum HighScoreCategory: String, CaseIterable, Decodable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case arrow"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case flappy"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case glide"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 15
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/HighScoreProvider.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  HighScoreProvider.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "protocol HighScoreProvider {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var limit: Int { get set }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    init(limit: Int)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func setHighScore(_ record: HighScoreRecord, category: HighScoreCategory,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                      onDone: (() -\u003e Void)?)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func getHighScore(category: HighScoreCategory, onDone: (([HighScoreRecord]) -\u003e Void)?)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 17
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/HighScoreRecord.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  HighScoreRecord.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "struct HighScoreRecord: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var score: Double"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 14
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/LocalHighScoreProvider.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  LocalHighScoreProvider.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "class LocalHighScoreProvider: HighScoreProvider {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var limit: Int"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    required init(limit: Int) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.limit \u003d limit"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func setHighScore(_ record: HighScoreRecord, category: HighScoreCategory,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                      onDone: (() -\u003e Void)?) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let localHighScores \u003d Storage.getLocalHighScore(forCategory: category)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let added \u003d localHighScores + [record]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let sorted \u003d added.sorted { $0.score \u003e $1.score }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let top \u003d Array(sorted.prefix(limit))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        Storage.saveLocalHighScore(top, forCategory: category)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        onDone?()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func getHighScore(category: HighScoreCategory, onDone: (([HighScoreRecord]) -\u003e Void)?) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let localHighScores \u003d Storage.getLocalHighScore(forCategory: category)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let sorted \u003d localHighScores.sorted { $0.score \u003e $1.score }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let top \u003d Array(sorted.prefix(limit))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        onDone?(top)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 34
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/NetworkManager.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  NetworkManager.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import MultipeerConnectivity"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "class NetworkManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    static let shared \u003d NetworkManager()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    let networkable: Networkable \u003d FirebaseNetwork()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    let highScore: HighScoreProvider \u003d FirebaseHighScoreProvider("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        limit: Constants.highScoreLimit)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var actionHandlers \u003d [Int: ((String, Action) -\u003e Void)]()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private init() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        ActionType.allCases.forEach { [weak self] (actionType) in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            networkable.onEvent(actionType.rawValue, type: Action.self) { (peerID, action) in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.onAction(peerID, action)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func sendAction(_ action: Action) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkable.emitEvent(action.type.rawValue, object: action)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func onAction(_ peerID: String, _ action: Action) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        actionHandlers.forEach { _, handler in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            handler(peerID, action)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func addActionHandler(_ run: @escaping ((String, Action) -\u003e Void)) -\u003e Int {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let id \u003d Int.random(in: 1...1000000000)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        actionHandlers[id] \u003d run"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        return id"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func removeActionHandler(_ id: Int) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        actionHandlers.removeValue(forKey: id)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 45
    }
  },
  {
    "path": "Dash/Dash/Logic/Network/Networkable.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Networkable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "protocol Networkable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var peerID: String { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var timeOffset: Double { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var joinedRoomID: String { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var roomInfo: [String: Any?] { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var allPlayers: Set\u003cString\u003e { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var onPlayersChange: (([String]) -\u003e Void)? { get }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var onRoomInfo: (([String: Any?]) -\u003e Void)? { get }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func createRoom(onDone: ((_ err: Any?, _ roomID: String?) -\u003e Void)?)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func joinRoom(_ roomId: String, onDone: ((_ err: Any?) -\u003e Void)?)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func leaveRoom(onDone: ((_ err: Any?) -\u003e Void)?)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func setRoomInfo(_ key: String, value: Any?)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func setOnRoomInfo(_ run: (([String: Any?]) -\u003e Void)?)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func onEvent\u003cT: GamePayload\u003e(_ event: String, type: T.Type, run: ((String, T) -\u003e Void)?)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func emitEvent(_ event: String, object: GamePayload)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func setOnPlayersChange(_ onPlayersChange: (([String]) -\u003e Void)?)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func syncTime(onDone: (() -\u003e Void)?)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func getServerTime() -\u003e Double"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func getLocalTime(fromServerTime serverTime: Double) -\u003e Double"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 31
    }
  },
  {
    "path": "Dash/Dash/Logic/ObstacleGenerator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  ObstacleGenerator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " `ObstacleGenerator` handles generation of `Wall`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class ObstacleGenerator {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var generator: SeededGenerator"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var movingObstacleProb: Float \u003d 0.7"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ seed: UInt64) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generator \u003d SeededGenerator(seed: seed)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Generate obstacle based on two bounds and path"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - xPos: starting position of obstacle"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - topWall: upper Wall in game"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - bottomWall: bottom Wall in game"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - path: Path in game"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - width: width of path"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func generateNextObstacle(xPos: Int, wallSet: WallSet, width: Int,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                              movingProb: Float) -\u003e Obstacle? {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        movingObstacleProb \u003d movingProb"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let num \u003d Float.random(in: (0.0)...(1.0), using: \u0026generator)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Decide to place obstacle at upper or lower of path"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if num \u003c 0.5 {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return generateObstacle(xPos: xPos, topBound: wallSet.topWall.path,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                    bottomBound: wallSet.path.shift(by: width), top: true)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return generateObstacle(xPos: xPos, topBound: wallSet.path.shift(by: -width),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                    bottomBound: wallSet.bottomWall.path, top: false)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func generateObstacle(xPos: Int, topBound: Path, bottomBound: Path, top: Bool) -\u003e Obstacle? {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Determine if stationary or moving obstacle"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let type: MovingObjectType"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let num \u003d Float.random(in: (0.0)...(1.0), using: \u0026generator)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        type \u003d (num \u003c (1.0-movingObstacleProb)) ? .obstacle : .movingObstacle"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let range \u003d (num \u003c 0.8) ? 90 : 50"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Generate square boundary of obstacle which fits between wall and path"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let topPoints \u003d topBound.getAllPointsFrom(from: xPos, to: min(topBound.length, xPos + range))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let botPoints \u003d bottomBound.getAllPointsFrom(from: xPos, to: min(bottomBound.length, xPos + range))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let maxY \u003d topPoints.reduce(Constants.gameHeight) { (result, next) -\u003e Int in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return min(result, next.yVal)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let minY \u003d botPoints.reduce(0) { (result, next) -\u003e Int in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return max(result, next.yVal)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let candidateY \u003d maxY - minY"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard candidateY \u003e 40 else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var size \u003d min(candidateY, range)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        size \u003d (type \u003d\u003d .movingObstacle) ? 40 : Int.random(in: 40...size, using: \u0026generator)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let pos \u003d top ? minY : maxY - size"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Obstacle(yPos: pos, width: size, height: size, objectType: type)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 72
    }
  },
  {
    "path": "Dash/Dash/Logic/Path.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Path.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " A `Path` describes a continuous trajectory connected point by one,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " and is represented by an array of Point objects."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " Representation Invariant:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    1) A path must be continuous to the right."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "struct Path {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var points \u003d [Point]()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var minY \u003d Constants.gameHeight"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var length \u003d 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        points \u003d [Point]()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(points: [Point], length: Int) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.points \u003d points"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.length \u003d length"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns number of points in `Path`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var count: Int {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return points.count"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns last Point in `Path`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var lastPoint: Point {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let last \u003d points.last else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return Point(xVal: 0, yVal: Constants.gameHeight / 2)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return last"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Adds new point to end of `Path`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - xVal: x value of new `Point`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - yVal: y value of new `Point`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    mutating func append(xVal: Int, yVal: Int) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let point \u003d Point(xVal: xVal, yVal: yVal)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        points.append(point)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        minY \u003d min(minY, yVal)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Adds new point to end of `Path`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - point: new `Point` to added to `Path`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    mutating func append(point: Point) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        points.append(point)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        minY \u003d min(minY, point.yVal)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Generates a `UIBezierPath` based on `Path`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func generateBezierPath() -\u003e UIBezierPath {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return UIBezierPath(points: points)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Translates path upwards or downwards"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - amount: magnitude of translation"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func shift(by amount: Int) -\u003e Path {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let shiftedPoints \u003d points.map {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return Point(xVal: $0.xVal, yVal: $0.yVal + amount)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Path(points: shiftedPoints, length: length)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns y value of estimated `Point` in `Path` at a x position"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Complexity: O(N)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - xVal: x position of `Point` to be estimated and calculated"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func getPointAt(xVal: Int) -\u003e Int {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard count \u003e 2 else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var index \u003d 1"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Get upper bound `Point`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        while index \u003c count \u0026\u0026 points[index].xVal \u003c xVal {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            index +\u003d 1"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let leftPt \u003d points[index - 1]"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let rightPt \u003d points[index]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let gradient \u003d leftPt.gradient(with: rightPt)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let yVal \u003d Int(gradient * Double(xVal - leftPt.xVal)) + leftPt.yVal"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return yVal"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Return all `Point` within a range of x values"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Complexity: O(N)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - fromVal: start of range"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - toVal  : end of range"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func getAllPointsFrom(from fromVal: Int, to toVal: Int) -\u003e [Point] {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var result \u003d [Point]()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard count \u003e\u003d 2 else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return result"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard fromVal \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return result"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Get start point"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var index \u003d 1"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        while index \u003c count \u0026\u0026 points[index].xVal \u003c\u003d fromVal {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            index +\u003d 1"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var leftPt \u003d points[index - 1]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var rightPt \u003d points[index]"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var gradient \u003d leftPt.gradient(with: rightPt)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var yVal \u003d Int(gradient * Double(fromVal - leftPt.xVal)) + leftPt.yVal"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let startingPt \u003d Point(xVal: fromVal, yVal: yVal)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        result.append(startingPt)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Get middle point"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        while index \u003c count \u0026\u0026 points[index].xVal \u003c\u003d toVal {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            result.append(points[index])"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            index +\u003d 1"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard index \u003c count else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return result"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Get final point"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        leftPt \u003d points[index - 1]"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        rightPt \u003d points[index]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gradient \u003d leftPt.gradient(with: rightPt)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        yVal \u003d Int(gradient * Double(toVal - leftPt.xVal)) + leftPt.yVal"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let endingPt \u003d Point(xVal: toVal, yVal: yVal)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        result.append(endingPt)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Close path to form a wall."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// The first and last point are extend to form a closed shape for wall generation."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - top: Indicates if path formed is for top `Wall` or bottom `Wall`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func close(top: Bool) -\u003e Path {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard count \u003e 0 else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return Path()"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var newPoints \u003d points"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let yVal \u003d top ? Constants.gameHeight + 20 : -20"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        newPoints.insert(Point(xVal: points[0].xVal, yVal: yVal), at: 0)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        newPoints.append(Point(xVal: points[count-1].xVal, yVal: yVal))"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Path(points: newPoints, length: length)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func checkRep() -\u003e Bool {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        for index in 0..\u003c(points.count - 1)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            where points[index].xVal \u003e points[index+1].xVal {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 169
    }
  },
  {
    "path": "Dash/Dash/Logic/PathGenerator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  PathGenerator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import GameplayKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/// Player state within path which mimics player control"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "enum PathState: String {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case up"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case down"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case stay"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case smooth"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " `PathGenerator` handles generation of `Path`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class PathGenerator {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var generator: SeededGenerator"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ seed: UInt64) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generator \u003d SeededGenerator(seed: seed)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Maximum and minimum path y value"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    let topCap \u003d Constants.pathTopCap"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    let botCap \u003d Constants.pathBotCap"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Smoothing parameters. Smooth is done to shape our a quadratic curve."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var smoothing \u003d false"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    let smoothGradientTopCap \u003d 0.8"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    let smoothGradientBotCap \u003d 0.4"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var topSmoothCap \u003d Constants.pathTopSmoothCap"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var botSmoothCap \u003d Constants.pathBotSmoothCap"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var interval \u003d Constants.pathInterval"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Probability of hovering at the same y value and switching actions/state."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var stayProbability \u003d 0.2"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var switchProb \u003d 85"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Maximum gradient of Path"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var gradMax \u003d 4.0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    let gradDiff \u003d 0.1"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var currentState: PathState \u003d .up"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Generate path model based on path required parameters"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - startingPt: first point of the path"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - startingGrad: initial gradient of the path"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - prob: probability of switching controls/direction (hold, release)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - range: length of Path"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func generateModel(startingPt: Point, startingGrad: Double, prob: Double, range: Int) -\u003e Path {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switchProb \u003d Int(prob * 100.0)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var path \u003d Path()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        path.append(point: startingPt)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var currentX \u003d startingPt.xVal"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var currentY \u003d startingPt.yVal"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var currentGrad \u003d startingPt.grad"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let endX \u003d currentX + range"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        while currentX \u003c endX {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            let nextPoint: Point"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if smoothing {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                let nextState \u003d decideState(currentY: currentY, currentGradient: currentGrad,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                            currentState: currentState)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                nextPoint \u003d generateNextPoint(currX: currentX, currY: currentY, currGrad: currentGrad,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                  currState: nextState, endX: endX)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                currentGrad \u003d nextPoint.grad"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                currentState \u003d nextState"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                nextPoint \u003d generateNextArrowPoint(currX: currentX, currY: currentY,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                   currState: currentState, endX: endX)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                currentState \u003d (currentState \u003d\u003d .up) ? .down: .up"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            currentX \u003d nextPoint.xVal"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            currentY \u003d nextPoint.yVal"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            path.append(point: nextPoint)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        path.length \u003d range"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return path"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Decide and generate next point within the trajectory path without smoothening"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currX: current point x position"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currY: current point y position"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currState: current state"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - endX: last possible x position within path"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func generateNextArrowPoint(currX: Int, currY: Int, currState: PathState, endX: Int) -\u003e Point {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var grad \u003d 1.0"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var maxX \u003d currX + Constants.pathMaxInterval"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch currState {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .down:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            grad \u003d 1.0"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            maxX \u003d currX + Int((Double(topCap - currY))/grad)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .up:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            grad \u003d -1.0"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            maxX \u003d currX + Int((Double(botCap - currY))/grad)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            break"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let minX \u003d (currX + interval) \u003e maxX ? currX : (currX + interval)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let nextX \u003d min(Int.random(in: minX...maxX, using: \u0026generator), endX)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let nextY \u003d currY + Int(grad * Double(nextX - currX))"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Point(xVal: nextX, yVal: nextY)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Decide and generate next point within the trajectory path with physics property in mind"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currX: current point x position"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currY: current point y position"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currGrad: current gradient"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currState: current state"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - endX: last possible x position within path"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func generateNextPoint(currX: Int, currY: Int, currGrad: Double, currState: PathState, endX: Int) -\u003e Point {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var grad \u003d currGrad"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch currState {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Adjust gradient to 0 to smoothen out curve trajectories when accelerating/decelerating"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .smooth:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if currGrad \u003e 0 {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                grad \u003d max(grad - gradDiff, 0)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            } else if currGrad \u003c 0 {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                grad \u003d min(grad + gradDiff, 0)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Accelerate upwards (hold)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .up:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            grad \u003d min(grad + gradDiff, gradMax)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Accelerate downwards (release)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .down:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            grad \u003d max(grad - gradDiff, -gradMax)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Hover at same y position"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .stay:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            grad \u003d 0.0"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let nextX \u003d min(currX + interval, endX)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var nextY \u003d currY + Int(grad * Double(nextX - currX))"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if nextY \u003e topCap {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            nextY \u003d topCap"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if nextY \u003c botCap {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            nextY \u003d botCap"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Point(xVal: nextX, yVal: nextY, grad: grad)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Decides next PathState based on current state and switching probability"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currentY: current Y position in path"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currentGradient: current gradient within path"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - currentState: current state within path"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func decideState(currentY: Int, currentGradient: Double, currentState: PathState) -\u003e PathState {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let val \u003d Int.random(in: 0...100, using: \u0026generator)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch currentState {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .up:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Do not go further up once reach top limit"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if currentY \u003e\u003d topCap {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .stay"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // If moving or accelerating upwards at certain top limit, slow down to prevent"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // character from crashing top limit when decelerating"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if currentY \u003e\u003d topSmoothCap \u0026\u0026 currentGradient \u003e smoothGradientTopCap {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .smooth"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Either continue going up (holding) or release (smooth)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return val \u003e switchProb ? .up : .smooth"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .down:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Do not go further down once reach bottom limit"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if currentY \u003c\u003d botCap {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .stay"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // If moving or accelerating downwards at certain bottom limit, slow down to prevent"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // character from crashing bottom limit when accelerating upwards"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if currentY \u003c\u003d botSmoothCap \u0026\u0026 currentGradient \u003c -smoothGradientTopCap {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .smooth"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Either continue going down (releasing) or hold (smooth)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return val \u003e switchProb ? .down : .smooth"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .stay:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Maintain at same position"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Conflicts when hovering upwards and downwards is addressed by path width"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if val \u003c Int(stayProbability * 100) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .stay"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // If at extreme ends, go down or up accordingly."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            else if currentY \u003e Constants.pathTopSmoothCap {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .down"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            } else if currentY \u003c Constants.pathBotSmoothCap {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .up"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Go up or down"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return val \u003c Int((1-stayProbability)*100)/2 ? .up : .down"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .smooth:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Continue smoothing"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if currentGradient \u003e smoothGradientBotCap || currentGradient \u003c -smoothGradientBotCap {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .smooth"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            } else if currentY \u003e Constants.pathTopSmoothCap {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .down"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            } else if currentY \u003c Constants.pathBotSmoothCap {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return .up"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Finish smoothing. Proceed to stay."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return val \u003c 50 ? .up : .down"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func makePath(arr: [Point]) -\u003e UIBezierPath {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return UIBezierPath(points: arr)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 223
    }
  },
  {
    "path": "Dash/Dash/Logic/Point.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Point.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 2/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " A `Point` describes a point on a x-y plane"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "struct Point {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var xVal: Int"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var yVal: Int"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var grad: Double \u003d 0.0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func gradient(with point: Point) -\u003e Double {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Double(point.yVal - self.yVal) / Double(point.xVal - self.xVal)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(xVal: Int, yVal: Int) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.xVal \u003d xVal"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.yVal \u003d yVal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(xVal: Int, yVal: Int, grad: Double) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.xVal \u003d xVal"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.yVal \u003d yVal"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.grad \u003d grad"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 33
    }
  },
  {
    "path": "Dash/Dash/Logic/SeededGenerator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  SeededGenerator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import GameplayKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " `SeededGenerator` is a custom seeded generator."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class SeededGenerator: RandomNumberGenerator {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    let seed: UInt64"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private let generator: GKMersenneTwisterRandomSource"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    convenience init() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.init(seed: 0)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(seed: UInt64) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.seed \u003d seed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generator \u003d GKMersenneTwisterRandomSource(seed: seed)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func next\u003cT\u003e (upperBound: T) -\u003e T where T: FixedWidthInteger, T: UnsignedInteger {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return T(abs(generator.nextInt(upperBound: Int(upperBound))))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func next\u003cT\u003e () -\u003e T where T: FixedWidthInteger, T: UnsignedInteger {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return T(abs(generator.nextInt()))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 34
    }
  },
  {
    "path": "Dash/Dash/Logic/Storage/Storage.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Storage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "/*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": " `Storage` handles saving and loading of game data."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "struct Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private init() {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static func saveMissionCheckpoint(_ value: Int, forMissionType missionType: MissionType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        UserDefaults.standard.set(value, forKey: \"mission-\\(missionType)\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    static func getMissionCheckpoint(forMissionType missionType: MissionType) -\u003e Int {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let key \u003d \"mission-\\(missionType)\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let checkpoint \u003d UserDefaults.standard.value(forKey: key) as? Int else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            switch missionType {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            case .distance:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                return MissionConfig.initialDistanceCheckpoint"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            case .powerUp:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                return MissionConfig.initialPowerUpCheckpoint"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            case .coin:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                return MissionConfig.initialCoinCheckpoint"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        return checkpoint"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    static func saveLocalHighScore(_ highscores: [HighScoreRecord],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                                   forCategory category: HighScoreCategory) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let serialized \u003d highscores.compactMap { $0.dictionary }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        UserDefaults.standard.set(serialized, forKey: \"highscores-\\(category)\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    static func getLocalHighScore("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        forCategory category: HighScoreCategory) -\u003e [HighScoreRecord] {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard let dictArray \u003d UserDefaults.standard.value("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                forKey: \"highscores-\\(category)\") as? [[String: Any]] else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return []"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let records \u003d dictArray.compactMap { HighScoreRecord(dict: $0) }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return records"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 16,
      "jo-lyn": 38
    }
  },
  {
    "path": "Dash/Dash/Logic/UIBezierPath+Point.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  UIBezierPath+Point.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "extension UIBezierPath {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    convenience init(points: [Point]) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard points.count \u003e 0 else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.move(to: CGPoint(x: points[0].xVal, y: points[0].yVal))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        for point in points.dropFirst() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.addLine(to: CGPoint(x: point.xVal, y: point.yVal))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 25
    }
  },
  {
    "path": "Dash/Dash/Logic/WallGenerator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  WallGenerator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 21/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " `WallGenerator` handles generation of `Wall`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class WallGenerator {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var generator: SeededGenerator"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ seed: UInt64) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generator \u003d SeededGenerator(seed: seed)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Generate top wall based on path"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - path: `Path` to be refered for wall generation"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - startingY: starting y for first `Point` in `Path` for continuation from previous path"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - minRange: minimum distance between wall and path"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - maxRange: maximum distance between wall and path"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func generateTopWallModel(path: Path, startingY: Int, minRange: Int, maxRange: Int) -\u003e Path {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return generateNoise(path: path, range: minRange...maxRange, startingY: startingY)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Generate bottom wall based on path"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - path: `Path` to be refered for wall generation"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - startingY: starting y for first `Point` in `Path` for continuation from previous path"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - minRange: minimum distance between wall and path"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    ///     - maxRange: maximum distance between wall and path"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func generateBottomWallModel(path: Path, startingY: Int, minRange: Int, maxRange: Int) -\u003e Path {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return generateNoise(path: path, range: (minRange)...(maxRange), startingY: startingY)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func generateTopBound(path: Path, startingY: Int, by shift: Int) -\u003e Path {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return path.shift(by: shift)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func generateBottomBound(path: Path, startingY: Int, by shift: Int) -\u003e Path {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return path.shift(by: -shift)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func makePath(path: Path) -\u003e UIBezierPath {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return path.generateBezierPath()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Generate noise in a path to generate rock-like appearance,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// while adhering to range restriction between Wall and Path"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func generateNoise(path: Path, range: ClosedRange\u003cInt\u003e, startingY: Int) -\u003e Path {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let points \u003d path.points"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var noisePoints \u003d points.map {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            shiftPoint(point: $0, by: range)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        noisePoints[0] \u003d Point(xVal: noisePoints[0].xVal, yVal: startingY)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Path(points: noisePoints, length: path.length)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Shift a point upwards or downwards. Capped by screen height."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func shiftPoint(point: Point, by range: ClosedRange\u003cInt\u003e) -\u003e Point {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var yVal \u003d point.yVal + Int.random(in: range, using: \u0026generator)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if yVal \u003c 0 {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            yVal \u003d -30"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if yVal \u003e Constants.gameHeight {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            yVal \u003d Constants.gameHeight + 30"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Point(xVal: point.xVal, yVal: yVal)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 72,
      "jo-lyn": 6
    }
  },
  {
    "path": "Dash/Dash/Model/Action.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Action.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "class Action: GamePayload {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var time: Double"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var type: ActionType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var value \u003d 0.0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var position \u003d CGPoint(x: 0, y: 0)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var velocity \u003d CGVector(dx: 0, dy: 0)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var powerUp \u003d PowerUpType.none"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    init(time: Double, type: ActionType) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.time \u003d time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.type \u003d type"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func copy() -\u003e Action? {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let dict \u003d self.dictionary else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        return Action(dict: dict)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case time"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case value"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case position"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case velocity"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case powerUp"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.time \u003d try values.decode(Double.self, forKey: .time)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.type \u003d try values.decode(ActionType.self, forKey: .type)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.value \u003d try values.decode(Double.self, forKey: .value)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.position \u003d try values.decode(CGPoint.self, forKey: .position)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.velocity \u003d try values.decode(CGVector.self, forKey: .velocity)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.powerUp \u003d try values.decode(PowerUpType.self, forKey: .powerUp)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        try super.init(from: decoder)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    override func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        try container.encode(time, forKey: .time)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        try container.encode(type.rawValue, forKey: .type)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        try container.encode(value, forKey: .value)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        try container.encode(position, forKey: .position)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        try container.encode(velocity, forKey: .velocity)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        try container.encode(powerUp.rawValue, forKey: .powerUp)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 62
    }
  },
  {
    "path": "Dash/Dash/Model/ActionType.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  ActionType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "enum ActionType: String, CaseIterable, Decodable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case hold"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case release"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case start"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case ping"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case powerup"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 17
    }
  },
  {
    "path": "Dash/Dash/Model/CharacterType.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  CharacterType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 24/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "enum CharacterType: String, CaseIterable, Decodable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    case arrow, glide, flappy"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 11,
      "Ang YC": 1,
      "jo-lyn": 1
    }
  },
  {
    "path": "Dash/Dash/Model/Coin.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Coin.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " Represents a coin model object in the game"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class Coin: Observable, MovingObject {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var initialPos \u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var objectType: MovingObjectType \u003d .coin"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var observers \u003d [ObjectIdentifier: Observation]()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var xPos: Int \u003d Constants.gameWidth {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            notifyObservers(name: \"xPos\", object: self)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var yPos: Int"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var width: Int \u003d Constants.powerUpSize"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var height: Int \u003d Constants.powerUpSize"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(yPos: Int) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.yPos \u003d yPos - Constants.powerUpSize / 2"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func update(speed: Int) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        xPos -\u003d speed"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 38
    }
  },
  {
    "path": "Dash/Dash/Model/GameModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  GameModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 21/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " `GameModel` contains all the present game objects to be rendered,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " as well as in game information to be recoded."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class GameModel: Observable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var observers \u003d [ObjectIdentifier: Observation]()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var player: Player"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var room: Room?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var gameMode: GameMode"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var movingObjects \u003d [MovingObject]() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            notifyObservers(name: \"moving\", object: nil)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns number of `PowerUp` collected"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var powerUpCount \u003d 0 {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            notifyObservers(name: Constants.notificationPowerUpCount, object: self.powerUpCount)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns number of `Coin` collected"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var coinCount \u003d 0 {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            notifyObservers(name: Constants.notificationCoinCount, object: self.coinCount)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var speed \u003d Constants.glideVelocity"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var distance \u003d 0 {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            notifyObservers(name: Constants.notificationDistance, object: self.distance)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var time \u003d 0.0"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var mission \u003d Mission()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var type: CharacterType"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    init(characterType: CharacterType, gameMode: GameMode) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.gameMode \u003d gameMode"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        player \u003d Player(type: characterType)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        type \u003d characterType"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 36,
      "Ang YC": 5,
      "jo-lyn": 19
    }
  },
  {
    "path": "Dash/Dash/Model/GameState.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  GameModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class GameModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 13
    }
  },
  {
    "path": "Dash/Dash/Model/Mission.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Mission.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class Mission: Observable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var observers \u003d [ObjectIdentifier: Observation]()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var message \u003d \"\" {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            notifyObservers(name: Constants.notificationMissionMessage, object: message)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 1,
      "jo-lyn": 17
    }
  },
  {
    "path": "Dash/Dash/Model/MissionType.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MissionType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "enum MissionType: String {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    case distance, powerUp, coin"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 13
    }
  },
  {
    "path": "Dash/Dash/Model/MovingObject.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  MovingObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " Describes a game object that is moved and updated by `GameEngine`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "protocol MovingObject: class {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var xPos: Int { get set }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var yPos: Int { get set }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var width: Int { get }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var height: Int { get }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var objectType: MovingObjectType { get }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var initialPos: Int { get set }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func update(speed: Int)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 23
    }
  },
  {
    "path": "Dash/Dash/Model/MovingObjectQueue.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  MovingObjectQueue.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " The `MovingObjectQueue` accepts and maintains the elements in an order specified by"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " their priority. For example, a Minimum Priority Queue of MovingObject will serve"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " (poll) the MovingObject with the smallest initialPos first."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " Elements with the same priority are allowed, and such elements may be served in"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " any order arbitrarily."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "struct MovingObjectQueue {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private var array \u003d [MovingObject]()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private let min: Bool"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Creates either a Min or Max `PriorityQueue`. Defaults to `min \u003d true`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameter min: Whether to return smallest elements first."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(min: Bool \u003d true) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.min \u003d min"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Adds the element."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    mutating func add(_ item: MovingObject) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        array.append(item)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        bubbleUp(elementAtIndex: count - 1)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns the currently highest priority element."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Returns: the element if not nil"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func peek() -\u003e MovingObject? {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return array.first"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Removes and returns the highest priority element."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Returns: the element if not nil"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    mutating func poll() -\u003e MovingObject? {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard !isEmpty else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        array.swapAt(0, count - 1)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let highestPriorityElement \u003d array.removeLast()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if !isEmpty {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            bubbleDown(elementAtIndex: 0)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return highestPriorityElement"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// The number of elements in the `PriorityQueue`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var count: Int {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return array.count"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Whether the `PriorityQueue` is empty."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var isEmpty: Bool {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return array.isEmpty"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func getParentIndex(of index: Int) -\u003e Int {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return (index - 1) / 2"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func getLeftChildIndex(of index: Int) -\u003e Int {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return (2 * index) + 1"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func getRightChildIndex(of index: Int) -\u003e Int {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return (2 * index) + 2"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private mutating func bubbleUp(elementAtIndex index: Int) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard index \u003e 0, index \u003c count else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let parentIndex \u003d getParentIndex(of: index)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if isHigherPriority(at: index, than: parentIndex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            array.swapAt(index, parentIndex)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            bubbleUp(elementAtIndex: parentIndex)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private mutating func bubbleDown(elementAtIndex index: Int) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard index \u003e\u003d 0, index \u003c count else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let childIndex \u003d getHigherPriorityChildIndex(of: index) else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if isHigherPriority(at: childIndex, than: index) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            array.swapAt(index, childIndex)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            bubbleDown(elementAtIndex: childIndex)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func getHigherPriorityChildIndex(of index: Int) -\u003e Int? {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard index \u003e\u003d 0, index \u003c count else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let leftChildIndex \u003d getLeftChildIndex(of: index)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let rightChildIndex \u003d getRightChildIndex(of: index)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if leftChildIndex \u003e\u003d count {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if rightChildIndex \u003e\u003d count {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return leftChildIndex"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return isHigherPriority(at: leftChildIndex, than: rightChildIndex)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                ? leftChildIndex"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                : rightChildIndex"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func isHigherPriority(at firstIndex: Int, than secondIndex: Int) -\u003e Bool {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if min {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return array[firstIndex].initialPos \u003c array[secondIndex].initialPos"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return array[firstIndex].initialPos \u003e array[secondIndex].initialPos"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 130
    }
  },
  {
    "path": "Dash/Dash/Model/MovingObjectType.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  MovingObjectType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "enum MovingObjectType {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case obstacle, powerup, wall, movingObstacle, coin"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 13
    }
  },
  {
    "path": "Dash/Dash/Model/Observable.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Observable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "protocol Observable: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var observers: [ObjectIdentifier: Observation] { get set }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func addObserver(_ observer: Observer)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func removeObserver(_ observer: Observer)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func notifyObservers(name: String, object: Any?)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "extension Observable {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func addObserver(_ observer: Observer) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let oid \u003d ObjectIdentifier(observer)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        observers[oid] \u003d Observation(observer: observer)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func removeObserver(_ observer: Observer) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let oid \u003d ObjectIdentifier(observer)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        observers.removeValue(forKey: oid)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func notifyObservers(name: String, object: Any?) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        for (_, observation) in observers {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            observation.observer?.onValueChanged(name: name, object: object)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "struct Observation {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    weak var observer: Observer?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 20,
      "jo-lyn": 19
    }
  },
  {
    "path": "Dash/Dash/Model/Observer.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Observer.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "protocol Observer: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func onValueChanged(name: String, object: Any?)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 13
    }
  },
  {
    "path": "Dash/Dash/Model/Obstacle.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Obstacle.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " Represents a obstacle model in the game"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class Obstacle: Observable, MovingObject {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var initialPos \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var observers \u003d [ObjectIdentifier: Observation]()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var objectType \u003d MovingObjectType.obstacle"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var xPos: Int \u003d Constants.gameWidth {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            notifyObservers(name: \"xPos\", object: self)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var yPos: Int"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var width: Int"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var height: Int"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(yPos: Int, width: Int, height: Int, objectType: MovingObjectType) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.yPos \u003d yPos"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.width \u003d width"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.height \u003d height"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.objectType \u003d objectType"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func update(speed: Int) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        xPos -\u003d speed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 41,
      "jo-lyn": 1
    }
  },
  {
    "path": "Dash/Dash/Model/ObstacleType.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  ObstacleType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "enum ObstacleType {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case stationary, moving"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 13
    }
  },
  {
    "path": "Dash/Dash/Model/Player.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Player.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " Represents a player character in the game"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class Player: Observable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var observers \u003d [ObjectIdentifier: Observation]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var id \u003d \"\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var type: CharacterType"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var state \u003d PowerUpType.normal {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            switch state {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case .dash:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                notifyObservers(name: Constants.notificationDash, object: nil)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case .ghost:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                notifyObservers(name: Constants.notificationGhost, object: nil)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case .shrink:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                notifyObservers(name: Constants.notificationShrink, object: nil)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case .cooldown:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                notifyObservers(name: Constants.notificationCoolDown, object: nil)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                notifyObservers(name: Constants.notificationNormal, object: nil)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var isHolding \u003d false {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            notifyObservers(name: Constants.notificationStateChange, object: self)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var actionIndex \u003d 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var actionList \u003d [Action]()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var ingameVelocity \u003d Constants.glideVelocity"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    init(type: CharacterType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.type \u003d type"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        setGameSpeed()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func setGameSpeed() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch type {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .arrow:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            ingameVelocity \u003d Constants.arrowVelocity"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .flappy:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            ingameVelocity \u003d Constants.flappyVelocity"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .glide:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            ingameVelocity \u003d Constants.glideVelocity"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func step(_ time: Double) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard actionIndex \u003c actionList.count else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let nextAction \u003d actionList[actionIndex]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard nextAction.time \u003c time else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        switch nextAction.type {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case .hold:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            isHolding \u003d true"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case .release:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            isHolding \u003d false"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case .powerup:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            state \u003d nextAction.powerUp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            break"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        actionIndex +\u003d 1"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 49,
      "Ang YC": 28,
      "jo-lyn": 6
    }
  },
  {
    "path": "Dash/Dash/Model/PlayerDesignedPath.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  PlayerDesignedPath.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import GameplayKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class PathGenerator {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var generator: SeededGenerator"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ seed: UInt64) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        generator \u003d SeededGenerator(seed: seed)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func makePath() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let path \u003d UIBezierPath()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        path.move(to: CGPoint(x: 0, y: 0))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var currentX \u003d 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        var currentY \u003d 0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        while currentX \u003c 3000 {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Random numbers for now"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            let segmentXDistance \u003d Int.random(in: 50...100, using: \u0026generator)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            let segmentYDistance \u003d Int.random(in: -30...30, using: \u0026generator)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            currentX +\u003d segmentXDistance"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            currentY +\u003d segmentYDistance"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            path.addLine(to: CGPoint(x: currentX, y: currentY))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 39
    }
  },
  {
    "path": "Dash/Dash/Model/PowerUp.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  PowerUp.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " Represents a power up model in the game"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class PowerUp: Observable, MovingObject {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var initialPos \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var observers \u003d [ObjectIdentifier: Observation]()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var objectType \u003d MovingObjectType.powerup"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var xPos: Int \u003d Constants.gameWidth {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            notifyObservers(name: \"xPos\", object: self)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var yPos: Int"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var width: Int \u003d Constants.powerUpSize"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var height: Int \u003d Constants.powerUpSize"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var type: PowerUpType \u003d PowerUpType.randomType()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(yPos: Int) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.yPos \u003d yPos"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func update(speed: Int) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        xPos -\u003d speed"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 40,
      "jo-lyn": 1
    }
  },
  {
    "path": "Dash/Dash/Model/PowerUpType.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  PowerUpType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "enum PowerUpType: String, CaseIterable, Decodable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    case ghost, magnet, dash, shrink, normal, cooldown, none"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    static func randomType() -\u003e PowerUpType {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let index \u003d Int(arc4random_uniform(UInt32(Constants.powerUps.count)))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return Constants.powerUps[index]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 16,
      "Ang YC": 2
    }
  },
  {
    "path": "Dash/Dash/Model/Queue.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Queue.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " A generic `Queue` class whose elements are first-in, first-out."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "struct Queue\u003cT\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private var array: [T]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.array \u003d [T]()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    init(_ items: [T]) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.array \u003d [T]()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        for item in items {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            array.append(item)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Adds an element to the tail of the queue."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Parameter item: The element to be added to the queue"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    mutating func enqueue(_ item: T) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        array.append(item)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Removes an element from the head of the queue and return it."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Returns: item at the head of the queue"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    mutating func dequeue() -\u003e T? {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let head \u003d array.first else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        array.removeFirst()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return head"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns, but does not remove, the element at the head of the queue."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Returns: item at the head of the queue"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func peek() -\u003e T? {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return array.first"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// The number of elements currently in the queue."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var count: Int {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return array.count"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Whether the queue is empty."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var isEmpty: Bool {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return array.isEmpty"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    /// Adds all items to queue."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    mutating func addItems(_ items: [T]) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        for item in items {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            array.append(item)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Removes all elements in the queue."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    mutating func removeAll() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        array.removeAll()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// Returns an array of the elements in their respective dequeue order, i.e."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// first element in the array is the first element to be dequeued."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    /// - Returns: array of elements in their respective dequeue order"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func toArray() -\u003e [T] {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return array"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 58,
      "jo-lyn": 19
    }
  },
  {
    "path": "Dash/Dash/Model/Room.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Room.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Created by Ang YC on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "class Room: Observable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var observers \u003d [ObjectIdentifier: Observation]()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var id: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var players \u003d [Player]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var characterType: CharacterType"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var isHost \u003d false"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    init(id: String, type: CharacterType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.id \u003d id"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.characterType \u003d type"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 1,
      "Ang YC": 21
    }
  },
  {
    "path": "Dash/Dash/Model/Wall.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Wall.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "enum WallLocation {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    case top, bottom"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " Represents a wall model in the game"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class Wall: Observable, MovingObject {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var initialPos \u003d 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var observers \u003d [ObjectIdentifier: Observation]()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var objectType \u003d MovingObjectType.wall"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var xPos \u003d Constants.gameWidth {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            notifyObservers(name: \"xPos\", object: self)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var yPos \u003d 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var path: Path"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var top \u003d true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(top: Bool) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.path \u003d Path()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.top \u003d top"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(path: Path, top: Bool) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.path \u003d path"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.top \u003d top"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var height \u003d 0"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var width: Int {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return path.length"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var lastPoint: Point {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        return path.lastPoint"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func update(speed: Int) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        xPos -\u003d speed"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 50,
      "jo-lyn": 8
    }
  },
  {
    "path": "Dash/Dash/Node/BackgroundNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  BackgroundNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class BackgroundNode: SKNode {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    let emitter \u003d SKEmitterNode(fileNamed: \"Passing\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var gradientBackground \u003d SKSpriteNode(texture: GameTexture.yellowGradientBG)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ frame: CGRect, type: CharacterType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        zPosition \u003d -1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        setGradientBackground(frame: frame, type: type)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        setParallaxObjects(frame: frame)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let backgroundEmitter \u003d emitter else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        backgroundEmitter.zPosition \u003d -2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        backgroundEmitter.position \u003d CGPoint(x: Constants.gameWidth, y: 0)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(backgroundEmitter)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    init(_ frame: CGRect) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        zPosition \u003d -1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        setGradientBackground(frame: frame)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        setParallaxObjects(frame: frame)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let backgroundEmitter \u003d emitter else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        backgroundEmitter.zPosition \u003d -2"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        backgroundEmitter.position \u003d CGPoint(x: Constants.gameWidth, y: 0)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(backgroundEmitter)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func setGradientBackground(frame: CGRect, type: CharacterType) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let backgroundTexture: SKTexture"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch type {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .arrow: backgroundTexture \u003d GameTexture.blueGradientBG"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .glide: backgroundTexture \u003d GameTexture.redGradientBG"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .flappy:backgroundTexture \u003d GameTexture.greenGradientBG"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gradientBackground \u003d SKSpriteNode(texture: backgroundTexture)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gradientBackground.size.height \u003d frame.height"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gradientBackground.size.width \u003d frame.width"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gradientBackground.position \u003d CGPoint(x: frame.midX, y: frame.midY)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gradientBackground.zPosition \u003d -5"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        addChild(gradientBackground)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func setGradientBackground(frame: CGRect) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gradientBackground.texture \u003d GameTexture.yellowGradientBG"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func updateBackground(type: CharacterType) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch type {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .arrow: gradientBackground.texture \u003d GameTexture.blueGradientBG"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .glide: gradientBackground.texture \u003d GameTexture.redGradientBG"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .flappy: gradientBackground.texture \u003d GameTexture.greenGradientBG"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func setParallaxObjects(frame: CGRect) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        setupMovingNode(frame, texture: GameTexture.caveWithLight, zPos: -1, duration: 20)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func setupMovingNode(_ frame: CGRect, texture: SKTexture, zPos: CGFloat, duration: Double) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let shiftBackground \u003d SKAction.moveBy(x: -texture.size().width, y: 0, duration: duration)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let replaceBackground \u003d SKAction.moveBy(x: texture.size().width, y: 0, duration: 0)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let movingAndReplacingBackground \u003d"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            SKAction.repeatForever(SKAction.sequence([shiftBackground, replaceBackground]))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        for index in 0..\u003c2 {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            let background \u003d SKSpriteNode(texture: texture)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            background.size.height \u003d frame.height"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            background.position \u003d CGPoint(x: (texture.size().width * CGFloat(index)) - 1, y: frame.midY)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            background.run(movingAndReplacingBackground)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            background.zPosition \u003d zPos"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            addChild(background)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 95
    }
  },
  {
    "path": "Dash/Dash/Node/BoundaryNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  BoundaryNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 17/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class BoundaryNode: SKSpriteNode {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    convenience init(_ yPos: CGFloat) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.init(color: UIColor.red, size: CGSize(width: 400, height: 1))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.position \u003d CGPoint(x: 0, y: yPos)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody \u003d SKPhysicsBody(rectangleOf: size)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.isDynamic \u003d false"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.categoryBitMask \u003d ColliderType.boundary.rawValue"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.contactTestBitMask \u003d ColliderType.boundary.rawValue"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 22
    }
  },
  {
    "path": "Dash/Dash/Node/CoinNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  CoinNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class CoinNode: SKSpriteNode, Observer {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    convenience init(coin: Coin) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let texture \u003d GameTexture.greenGem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.init(texture: texture,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                  size: CGSize(width: coin.width, height: coin.height))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.position \u003d CGPoint(x: coin.xPos + coin.width / 2,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                y: coin.yPos + coin.height / 2)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.name \u003d \"coin\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody \u003d SKPhysicsBody(texture: texture,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                         size: CGSize(width: coin.width,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                      height: coin.height))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.isDynamic \u003d false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.categoryBitMask \u003d ColliderType.coin.rawValue"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.contactTestBitMask \u003d ColliderType.coin.rawValue"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.collisionBitMask \u003d 0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addGlow()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        coin.addObserver(self)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func onValueChanged(name: String, object: Any?) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let coin \u003d object as? Coin else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        DispatchQueue.main.async {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            switch name {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case \"xPos\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                self.position \u003d CGPoint(x: coin.xPos + coin.width / 2,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                        y: coin.yPos + coin.height / 2)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 51
    }
  },
  {
    "path": "Dash/Dash/Node/CoinScoreNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  CoinScoreNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class CoinScoreNode: SKSpriteNode {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var label: SKLabelNode!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    convenience init() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.init(texture: GameTexture.greenGem)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.size \u003d CGSize(width: 30, height: 30)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initLabel()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initLabel() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        label \u003d SKLabelNode()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        label.fontSize \u003d 24"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        label.position \u003d CGPoint(x: 25, y: -10)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(label)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func update(_ coinCount: Int) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        label.text \u003d \"\\(coinCount)\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 30
    }
  },
  {
    "path": "Dash/Dash/Node/ColliderType.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  ColliderType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 21/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "enum ColliderType: UInt32 {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case player \u003d   0b000001"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case obstacle \u003d 0b000010"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case wall \u003d     0b000100"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case powerup \u003d  0b001000"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case coin \u003d     0b010000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case boundary \u003d 0b100000"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 18
    }
  },
  {
    "path": "Dash/Dash/Node/MenuNodes/BackButtonNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  BackButtonNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 17/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class BackButtonNode: SKSpriteNode {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    convenience init(frameHeight: CGFloat) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.init(texture: MenuTexture.back)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.size \u003d CGSize(width: 50, height: 50)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.name \u003d \"back\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.position \u003d CGPoint(x: self.frame.width / 2 + 70, y: frameHeight - 70)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 19
    }
  },
  {
    "path": "Dash/Dash/Node/MenuNodes/ReturnToMenuNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  ReturnToMenuNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 17/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class ReturnToMenuNode: SKSpriteNode {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    convenience init() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.init(texture: MenuTexture.returnToMenu)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.size \u003d CGSize(width: 184, height: 40)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.name \u003d \"menu\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.position \u003d position"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.zPosition \u003d 51"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 20
    }
  },
  {
    "path": "Dash/Dash/Node/MissionNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MissionNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class MissionNode: SKLabelNode {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    convenience init(mission: Mission) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        mission.addObserver(self)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override init() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.text \u003d \"\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.fontSize \u003d 20"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.fontColor \u003d SKColor.white"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func show(_ message: String) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.text \u003d message"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        animateMessage(for: 0.3)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func animateMessage(for duration: TimeInterval) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.alpha \u003d 1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let moveUp \u003d SKAction.moveTo(y: 100, duration: duration)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let wait \u003d SKAction.wait(forDuration: 2)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let fadeOut \u003d SKAction.fadeOut(withDuration: 0.2)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let moveDown \u003d SKAction.moveTo(y: -10, duration: 0.1)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let sequence \u003d SKAction.sequence([moveUp, wait, fadeOut, moveDown])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.run(sequence)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "// MARK: Observer"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "extension MissionNode: Observer {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func onValueChanged(name: String, object: Any?) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let missionMessage \u003d object as? String else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        show(missionMessage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 54
    }
  },
  {
    "path": "Dash/Dash/Node/ObstacleNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  ObstacleNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class ObstacleNode: SKSpriteNode, Observer {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    convenience init(obstacle: Obstacle) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let texture: SKTexture"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if obstacle.objectType \u003d\u003d .obstacle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            texture \u003d GameTexture.getObstacleTexture()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            texture \u003d GameTexture.movingObstacle"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.init(texture: texture, size: CGSize(width: obstacle.width, height: obstacle.height))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if obstacle.objectType \u003d\u003d .movingObstacle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            if let emitter \u003d SKEmitterNode(fileNamed: \"MovingObstacle\") {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                emitter.position \u003d self.position"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                emitter.zPosition \u003d 0.5"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                self.addChild(emitter)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.position \u003d CGPoint(x: obstacle.xPos + obstacle.width / 2,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                y: obstacle.yPos + obstacle.height / 2)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.name \u003d \"obstacle\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody \u003d SKPhysicsBody(texture: texture,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                         size: CGSize(width: obstacle.width, height: obstacle.height))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.isDynamic \u003d false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.categoryBitMask \u003d ColliderType.obstacle.rawValue"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.contactTestBitMask \u003d ColliderType.player.rawValue"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.collisionBitMask \u003d 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.zPosition \u003d 1.0"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        obstacle.addObserver(self)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func onValueChanged(name: String, object: Any?) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let obstacle \u003d object as? Obstacle else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        DispatchQueue.main.async {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            switch name {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case \"xPos\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                self.position \u003d CGPoint(x: obstacle.xPos + obstacle.width / 2,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                        y: obstacle.yPos + obstacle.height / 2)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 61,
      "jo-lyn": 1
    }
  },
  {
    "path": "Dash/Dash/Node/PlayerNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  PlayerNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "enum Direction {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    case goUp, goDown"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class PlayerNode: SKSpriteNode, Observer {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var isHolding \u003d false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var controller: PlayerController?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var playerId: String?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var direction \u003d Direction.goUp"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var isRemote \u003d false {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            if isRemote {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                physicsBody?.collisionBitMask \u003d 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                ghost \u003d true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                dash \u003d true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                emitter?.removeFromParent()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                alpha \u003d Constants.ghostAlpha"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                physicsBody?.collisionBitMask \u003d ColliderType.player.rawValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var ghost \u003d false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var dash \u003d false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var emitter \u003d SKEmitterNode(fileNamed: \"Bokeh\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var ingameVelocity \u003d 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    convenience init(_ player: Player) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let playerSize \u003d Constants.playerOriginalSize"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.init(texture: GameTexture.arrow, color: SKColor.clear, size: playerSize)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.name \u003d \"player\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let controller: PlayerController"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch player.type {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .arrow:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            controller \u003d ArrowController(playerNode: self)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .glide:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            controller \u003d GlideController(playerNode: self)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .flappy:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            controller \u003d FlappyController(playerNode: self)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.controller \u003d controller"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        player.addObserver(self)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerId \u003d player.id"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        ingameVelocity \u003d player.ingameVelocity"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Set up SKEmitter"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let particleEmitter \u003d emitter else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        particleEmitter.position \u003d self.position"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        particleEmitter.particleSize \u003d CGSize(width: 20, height: 20)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        particleEmitter.zPosition \u003d 1"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        particleEmitter.particleColorSequence \u003d nil"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        particleEmitter.particleColorBlendFactor \u003d 1.0"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        particleEmitter.particleColor \u003d .white"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addGlow()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(particleEmitter)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.anchorPoint \u003d CGPoint(x: 0.5, y: 0.5)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private override init(texture: SKTexture?, color: UIColor, size: CGSize) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        super.init(texture: texture, color: color, size: size)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func onValueChanged(name: String, object: Any?) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch name {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case Constants.notificationStateChange:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            guard let player \u003d object as? Player else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            controller?.isHolding \u003d player.isHolding"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Change appearance based on player state"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case Constants.notificationGhost:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            ghost \u003d true"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.alpha \u003d 0.4"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.emitter?.particleColor \u003d UIColor.purple"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case Constants.notificationDash:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            dash \u003d true"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.emitter?.particleColor \u003d UIColor.red"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case Constants.notificationShrink:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.size \u003d Constants.playerShrinkSize"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.emitter?.particleColor \u003d UIColor.yellow"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case Constants.notificationNormal:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.size \u003d Constants.playerOriginalSize"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            ghost \u003d false"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            dash \u003d false"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.emitter?.particleColor \u003d UIColor.white"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.alpha \u003d 1.0"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case Constants.notificationCoolDown:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.emitter?.particleColor \u003d UIColor.darkGray"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            let recover \u003d SKAction.fadeAlpha(to: 0.9, duration: 0.5)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            let fade \u003d SKAction.fadeAlpha(to: 0.3, duration: 0.5)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            let blink \u003d SKAction.repeat(.sequence([fade, recover]), count: 2)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            self.run(blink)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            break"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func step(_ timestamp: TimeInterval) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controller?.move()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        updateParticle()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Update player node direction"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func updateParticle() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let velocity \u003d physicsBody?.velocity.dy else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let angle \u003d atan(Double(velocity) / Double(Constants.glideVelocity * 60))"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.zRotation \u003d CGFloat(angle)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        emitter?.emissionAngle \u003d CGFloat(angle + Double.pi)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 103,
      "Ang YC": 15,
      "jo-lyn": 17
    }
  },
  {
    "path": "Dash/Dash/Node/PowerUpNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  PowerUpNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class PowerUpNode: SKSpriteNode, Observer {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var type: PowerUpType \u003d .ghost"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    convenience init(powerUp: PowerUp) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let texture: SKTexture"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch powerUp.type {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .dash:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            texture \u003d GameTexture.pinkGem"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .ghost:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            texture \u003d GameTexture.purpleGem"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            texture \u003d GameTexture.yellowGem"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.init(texture: texture, size: CGSize(width: powerUp.width, height: powerUp.height))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.type \u003d powerUp.type"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.position \u003d CGPoint(x: powerUp.xPos + powerUp.width / 2,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                y: powerUp.yPos + powerUp.height / 2)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.name \u003d \"powerup\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody \u003d SKPhysicsBody(texture: texture,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                         size: CGSize(width: powerUp.width,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                                      height: powerUp.height))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.isDynamic \u003d false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.categoryBitMask \u003d ColliderType.powerup.rawValue"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.contactTestBitMask \u003d ColliderType.player.rawValue"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.collisionBitMask \u003d 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        //self.addGlow()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        powerUp.addObserver(self)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func onValueChanged(name: String, object: Any?) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let powerUp \u003d object as? PowerUp else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        DispatchQueue.main.async {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            switch name {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case \"xPos\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                self.position \u003d CGPoint(x: powerUp.xPos + powerUp.width / 2,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                                        y: powerUp.yPos + powerUp.height / 2)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "extension SKSpriteNode {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func addGlow(radius: Float \u003d 20) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let effectNode \u003d SKEffectNode()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        effectNode.shouldRasterize \u003d true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        addChild(effectNode)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        effectNode.addChild(SKSpriteNode(texture: texture, size: size))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        effectNode.filter \u003d CIFilter(name: \"CIGaussianBlur\", parameters: [\"inputRadius\": radius])"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 72,
      "jo-lyn": 1
    }
  },
  {
    "path": "Dash/Dash/Node/ScoreNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  ScoreNode.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class ScoreNode: SKLabelNode {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override init() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.text \u003d \"0m\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.fontSize \u003d 40"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.fontColor \u003d SKColor.white"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func update(_ score: Int) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.text \u003d \"\\(score)m\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 27,
      "jo-lyn": 1
    }
  },
  {
    "path": "Dash/Dash/Node/WallNode.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Wall.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class WallNode: SKShapeNode, Observer {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    convenience init(wall: Wall) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let path \u003d wall.path.close(top: wall.top).generateBezierPath()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        path.close()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let cgPath \u003d path.cgPath"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.init(path: cgPath)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.lineWidth \u003d 6"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.strokeColor \u003d UIColor.clear"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.glowWidth \u003d 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.fillColor \u003d UIColor.black"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.alpha \u003d 0.8"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.isDynamic \u003d false"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.position \u003d CGPoint(x: wall.xPos, y: wall.yPos)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.name \u003d \"wall\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let physicsPath \u003d wall.path.generateBezierPath().cgPath"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody \u003d SKPhysicsBody(edgeChainFrom: physicsPath)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.isDynamic \u003d false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.categoryBitMask \u003d ColliderType.wall.rawValue"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.contactTestBitMask \u003d ColliderType.player.rawValue"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.physicsBody?.collisionBitMask \u003d 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        wall.addObserver(self)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func onValueChanged(name: String, object: Any?) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let wall \u003d object as? Wall else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        DispatchQueue.main.async {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            switch name {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            case \"xPos\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                self.position \u003d CGPoint(x: wall.xPos, y: wall.yPos)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 50,
      "jo-lyn": 3
    }
  },
  {
    "path": "Dash/Dash/Scene/Gameplay/EnterLeaderboardScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  EnterLeaderboardScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class EnterLeaderboardScene: SKScene {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var incomingScore \u003d 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var incomingCategory \u003d HighScoreCategory.arrow"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var currentPlayerActions: [Action] \u003d []"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var currentSeed \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var textField: UITextField?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var loadingView: UIView!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private let networkManager \u003d NetworkManager.shared"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initLoadingWindow()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initHighScores()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initReturnToMenuButton() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let returnToMenuButton \u003d ReturnToMenuNode()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        returnToMenuButton.position \u003d CGPoint(x: 70 + returnToMenuButton.frame.width / 2, y: frame.height - 70)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(returnToMenuButton)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func initHighScores() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.highScore.getHighScore("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            category: incomingCategory) { [weak self] (records) in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.cleanSubviews()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                if !records.isEmpty {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    guard let last \u003d records.last, let score \u003d self?.incomingScore,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                        (score \u003e Int(last.score) ||"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                            records.count \u003c Constants.highScoreLimit) else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                                self?.presentLeaderboardScene()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                                return"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.initTextLabels()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.initTextField()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.initSubmitButton()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.initSkipLabel()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.initReturnToMenuButton()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initTextLabels() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let topRanklabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        topRanklabel.text \u003d \"Y O U  A R E  T O P  1 0 !\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        topRanklabel.fontSize \u003d 40"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        topRanklabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY + 70)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(topRanklabel)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initTextField() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let textFieldSize \u003d CGSize(width: self.frame.width * 0.6, height: 60)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let textFieldOrigin \u003d CGPoint("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: self.frame.midX - textFieldSize.width / 2,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: self.frame.midY - 30)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let textField \u003d TextFieldView(size: textFieldSize, origin: textFieldOrigin, placeholder: \"enter your name here\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        view?.addSubview(textField)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.textField \u003d textField"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initSubmitButton() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let submitButton \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.name \u003d \"submit\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.text \u003d \"submit my score\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.fontSize \u003d 30"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY - 90)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(submitButton)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initSkipLabel() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let submitButton \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.name \u003d \"skip\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.text \u003d \"skip\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.fontSize \u003d 20"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.position \u003d CGPoint(x: self.frame.midX, y: self.frame.height * 0.1)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(submitButton)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesBegan(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        if nodes.first?.name \u003d\u003d \"submit\" {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            if isInputValid(textField?.text) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                presentLeaderboardScene()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                alertInvalidInput()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        if nodes.first?.name \u003d\u003d \"skip\" {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentGameOverScene()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        if nodes.first?.name \u003d\u003d \"menu\" {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentMainMenuScene()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func alertInvalidInput() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let textField \u003d textField else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let alertLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        alertLabel.text \u003d \"please ensure non-empty field with less than 16 characters\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        alertLabel.fontColor \u003d SKColor.init(red: 229 / 255, green: 52 / 255, blue: 71 / 255, alpha: 1)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        alertLabel.fontSize \u003d 16"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        alertLabel.position \u003d CGPoint(x: textField.frame.minX + alertLabel.frame.width / 2,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                                      y: self.frame.midY - 50)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(alertLabel)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentLeaderboardScene() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        cleanSubviews()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let leaderboardScene \u003d LeaderboardScene(size: self.size)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        leaderboardScene.incomingScore \u003d incomingScore"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        leaderboardScene.incomingName \u003d textField?.text ?? \"\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        leaderboardScene.incomingCategory \u003d incomingCategory"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        leaderboardScene.currentPlayerActions \u003d currentPlayerActions"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        leaderboardScene.currentSeed \u003d currentSeed"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(leaderboardScene)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentMainMenuScene() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        cleanSubviews()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let mainMenuScene \u003d MainMenuScene(size: self.size)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(mainMenuScene)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func isInputValid(_ input: String?) -\u003e Bool {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let input \u003d input else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard !input.isEmpty \u0026\u0026 input.count \u003c\u003d 16 else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func initLoadingWindow() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let midPoint \u003d CGPoint(x: frame.midX, y: frame.midY)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView \u003d LoadingView(origin: frame.origin, mid: midPoint, size: frame.size)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 1"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        view?.addSubview(loadingView)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func hideLoadingWindow() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 0"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func cleanSubviews() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let subviews \u003d view?.subviews else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        subviews.forEach { $0.removeFromSuperview() }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentGameOverScene() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        cleanSubviews()"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let gameOverScene \u003d GameOverScene(size: self.size)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let characterType: CharacterType"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch incomingCategory {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .arrow:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            characterType \u003d .arrow"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .flappy:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            characterType \u003d .flappy"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .glide:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            characterType \u003d .glide"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameOverScene.currentCharacterType \u003d characterType"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameOverScene.currentPlayerActions \u003d currentPlayerActions"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameOverScene.currentSeed \u003d currentSeed"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameOverScene.score \u003d incomingScore"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(gameOverScene, transition: SKTransition.fade(with: .white, duration: 0.5))"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 51,
      "jo-lyn": 141
    }
  },
  {
    "path": "Dash/Dash/Scene/Gameplay/GameOverScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  GameOverScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class GameOverScene: SKScene {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var currentCharacterType: CharacterType \u003d .arrow"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var currentPlayerActions: [Action] \u003d []"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var currentSeed \u003d 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var score \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var scoreLabel: SKLabelNode!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var bestScoreLabel: SKLabelNode!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initCurrentScoreLabel()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initShadowPlayLabel()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initReplayLabel()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initReturnToMenuButton()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initReturnToMenuButton() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let returnToMenuButton \u003d ReturnToMenuNode()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        returnToMenuButton.position \u003d CGPoint(x: 70 + returnToMenuButton.frame.width / 2, y: frame.height - 70)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(returnToMenuButton)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesBegan(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch nodes.first?.name {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"replay\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentGameScene(with: currentCharacterType)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"shadow\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            presentGameSceneShadow(with: currentCharacterType)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"menu\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentMainMenuScene()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initCurrentScoreLabel() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        scoreLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        scoreLabel.text \u003d \"\\(score) m\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        scoreLabel.fontSize \u003d 120"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        scoreLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY + 60)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(scoreLabel)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initReplayLabel() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let replayLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        replayLabel.name \u003d \"replay\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        replayLabel.text \u003d \"play again\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        replayLabel.fontSize \u003d 28"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        replayLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY - 60)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(replayLabel)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initShadowPlayLabel() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let shadowPlayLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        shadowPlayLabel.name \u003d \"shadow\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        shadowPlayLabel.text \u003d \"shadow play\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        shadowPlayLabel.fontSize \u003d 22"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        shadowPlayLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY - 120)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(shadowPlayLabel)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentGameScene(with characterType: CharacterType) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let gameScene \u003d GameScene(size: self.size)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameScene.characterType \u003d characterType"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.gameMode \u003d .single"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.room \u003d nil"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.clockTime \u003d (Date().timeIntervalSince1970 + 3) * 1000"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.seed \u003d Int.random(in: 0...999999999)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.view?.presentScene(gameScene)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func presentGameSceneShadow(with characterType: CharacterType) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let gameScene \u003d GameScene(size: self.size)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let room \u003d Room(id: \"\", type: characterType)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let shadow \u003d Player(type: characterType)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        var clonedActions: [Action] \u003d []"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        currentPlayerActions.forEach { (action) in"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard let copy \u003d action.copy() else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            copy.time +\u003d 0.2"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            clonedActions.append(copy)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        shadow.actionList \u003d clonedActions"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        room.players.append(shadow)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.characterType \u003d characterType"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.gameMode \u003d .shadow"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.room \u003d room"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.clockTime \u003d (Date().timeIntervalSince1970 + 3) * 1000"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.seed \u003d currentSeed"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(gameScene)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentMainMenuScene() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let mainMenuScene \u003d MainMenuScene(size: self.size)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(mainMenuScene)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 2,
      "Ang YC": 34,
      "jo-lyn": 84
    }
  },
  {
    "path": "Dash/Dash/Scene/Gameplay/GameScene+Observer.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  GameScene+Observer.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "// MARK: Observer"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "extension GameScene: Observer {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func onValueChanged(name: String, object: Any?) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch name {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"moving\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            for object in gameModel.movingObjects where movingObjects[ObjectIdentifier(object)] \u003d\u003d nil {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                let node: SKNode"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                switch object.objectType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                case .wall:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    guard let wall \u003d object as? Wall else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                        continue"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    node \u003d WallNode(wall: wall)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    movingObjects[ObjectIdentifier(wall)] \u003d node"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                case .powerup:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    guard let powerUp \u003d object as? PowerUp else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                        continue"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    node \u003d PowerUpNode(powerUp: powerUp)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    movingObjects[ObjectIdentifier(powerUp)] \u003d node"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                case .coin:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                    guard let coin \u003d object as? Coin else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                        continue"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                    node \u003d CoinNode(coin: coin)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                    movingObjects[ObjectIdentifier(coin)] \u003d node"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    guard let obstacle \u003d object as? Obstacle else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                        continue"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    node \u003d ObstacleNode(obstacle: obstacle)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    movingObjects[ObjectIdentifier(obstacle)] \u003d node"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                self.addChild(node)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            // Remove nodes not in gameModel"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            let oids \u003d gameModel.movingObjects.map { ObjectIdentifier($0) }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            for oid in movingObjects.keys where !oids.contains(oid) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                guard let node \u003d movingObjects[oid] else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                node.removeFromParent()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                movingObjects.removeValue(forKey: oid)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            break"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 6,
      "jo-lyn": 53
    }
  },
  {
    "path": "Dash/Dash/Scene/Gameplay/GameScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  GameScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import GameplayKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class GameScene: SKScene, SKPhysicsContactDelegate {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    // game nodes"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var playerNode: PlayerNode!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var ghostNodes \u003d [PlayerNode]()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var backgroundNode: SKNode!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var scoreNode: ScoreNode!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var coinScoreNode: CoinScoreNode!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var missionNode: MissionNode!"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    // menu"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var pauseButton: SKSpriteNode!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var pauseWindow: SKSpriteNode?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var countdownLabel: SKLabelNode!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // model and logic"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var gameModel: GameModel!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var gameEngine: GameEngine!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var gameMode: GameMode \u003d .single"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var room: Room?"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // Mapping of Model to Node"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var movingObjects: [ObjectIdentifier: SKNode] \u003d [:]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    // gesture recognizers"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var tapGestureRecognizer: UITapGestureRecognizer!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var longPressGestureRecognizer: UILongPressGestureRecognizer!"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var characterType \u003d CharacterType.arrow"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private let networkManager \u003d NetworkManager.shared"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var handlerId: Int?"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var pendingActions \u003d [(ghostNode: PlayerNode, action: Action)]()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var isStarted \u003d true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private var isGameOver \u003d false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var seed \u003d 0"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var clockTime \u003d -1.0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var startTime \u003d 0.0"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var currentTime \u003d 0.0"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var pausedTime \u003d 0.0"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var pauseStartTime \u003d 0.0"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Setup scene here"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initGameModel()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initGameEngine(seed: UInt64(seed))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initPlayer()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initGhost()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initBackground(type: characterType)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initBoundary()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initScore()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initCoinScore()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initMission()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initPauseButton()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initCountdownLabel()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Set physics world"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        switch characterType {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .arrow:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            physicsWorld.gravity \u003d Constants.arrowGravity"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        case .flappy:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            physicsWorld.gravity \u003d Constants.flappyGravity"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .glide:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            physicsWorld.gravity \u003d Constants.glideGravity"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        physicsWorld.contactDelegate \u003d self"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        backgroundColor \u003d .darkGray"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        if clockTime \u003e 0 {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            pause()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func didBegin(_ contact: SKPhysicsContact) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let isBodyAObstacle \u003d contact.bodyA.categoryBitMask \u003d\u003d ColliderType.obstacle.rawValue"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let isBodyAWall \u003d contact.bodyA.categoryBitMask \u003d\u003d ColliderType.wall.rawValue"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let isBodyABoundary \u003d contact.bodyA.categoryBitMask \u003d\u003d ColliderType.boundary.rawValue"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let isBodyBObstacle \u003d contact.bodyB.categoryBitMask \u003d\u003d ColliderType.obstacle.rawValue"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let isBodyBWall \u003d contact.bodyB.categoryBitMask \u003d\u003d ColliderType.wall.rawValue"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let isBodyBBoundary \u003d contact.bodyB.categoryBitMask \u003d\u003d ColliderType.boundary.rawValue"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let playerNodeA \u003d contact.bodyA.node as? PlayerNode"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let playerNodeB \u003d contact.bodyB.node as? PlayerNode"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if playerNodeA?.isRemote ?? false || playerNodeB?.isRemote ?? false {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        if isBodyAObstacle || isBodyAWall {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            guard let playerNode \u003d contact.bodyB.node as? PlayerNode else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            guard (isBodyAObstacle \u0026\u0026 (!playerNode.ghost \u0026\u0026 !playerNode.dash))"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                || (isBodyAWall \u0026\u0026 !playerNode.dash) else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            playerNode.removeFromParent()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            gameOver()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if isBodyBObstacle || isBodyBWall {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            guard let playerNode \u003d contact.bodyA.node as? PlayerNode else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            guard (isBodyBObstacle \u0026\u0026 (!playerNode.ghost \u0026\u0026 !playerNode.dash))"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                || (isBodyBWall \u0026\u0026 !playerNode.dash) else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            playerNode.removeFromParent()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            gameOver()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if contact.bodyA.categoryBitMask \u003d\u003d ColliderType.powerup.rawValue {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            guard let node \u003d contact.bodyA.node as? PowerUpNode else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            gameEngine.triggerPowerUp(type: node.type)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            node.removeFromParent()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if contact.bodyB.categoryBitMask \u003d\u003d ColliderType.powerup.rawValue {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            guard let node \u003d contact.bodyB.node as? PowerUpNode else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            gameEngine.triggerPowerUp(type: node.type)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            node.removeFromParent()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if contact.bodyA.categoryBitMask \u003d\u003d ColliderType.coin.rawValue {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            guard let node \u003d contact.bodyA.node as? CoinNode else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            node.removeFromParent()"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if contact.bodyB.categoryBitMask \u003d\u003d ColliderType.coin.rawValue {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            guard let node \u003d contact.bodyB.node as? CoinNode else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                return"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            gameModel.coinCount +\u003d 1"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            node.removeFromParent()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        } else if isBodyABoundary || isBodyBBoundary {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            playerNode.removeFromParent()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            gameOver()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func gameOver() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard !isGameOver else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        isGameOver \u003d true"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gameEngine.stopTimer()"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        presentEnterLeaderBoardScene()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    override func update(_ absoluteTime: TimeInterval) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        if clockTime \u003e 0 {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let timeNow \u003d Date().timeIntervalSince1970 * 1000"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            if timeNow \u003e clockTime {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                clockTime \u003d -1"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                countdownLabel.alpha \u003d 0"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                resume()"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                let countdown \u003d Int(ceil((clockTime - timeNow) / 1000))"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                countdownLabel.text \u003d String(countdown)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard isStarted else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        if startTime \u003d\u003d 0.0 {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            startTime \u003d absoluteTime"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let nextTime \u003d absoluteTime - startTime - pausedTime"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let deltaTime \u003d nextTime - currentTime"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        currentTime \u003d nextTime"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Called before each frame is rendered"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameEngine.update(deltaTime, currentTime)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerNode.step(currentTime)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        for ghostNode in ghostNodes {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            ghostNode.step(currentTime)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        updateScores()"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let frameHeight \u003d Double(self.frame.height)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        pendingActions \u003d pendingActions.filter { (ghostNode, action) in"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard currentTime \u003e action.time, (action.type \u003d\u003d .ping ||"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                action.type \u003d\u003d .hold || action.type \u003d\u003d .release) else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return true"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            ghostNode.position \u003d CGPoint(x: 70, y: frameHeight * Double(action.position.y))"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let velocity \u003d playerNode.physicsBody?.velocity, gameMode \u003d\u003d .multi else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        if Int.random(in: 1...120) \u003d\u003d 60 {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let action \u003d Action(time: currentTime, type: .ping)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let yPosition \u003d Double(playerNode.position.y) / frameHeight"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            action.position \u003d CGPoint(x: 0, y: yPosition)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            action.velocity \u003d velocity"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            networkManager.sendAction(action)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func initGameModel() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameModel \u003d GameModel(characterType: characterType, gameMode: gameMode)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameModel.addObserver(self)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameModel.room \u003d room"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func initGameEngine(seed: UInt64) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gameEngine \u003d GameEngine(gameModel, seed: seed)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func initPlayer() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        playerNode \u003d PlayerNode(gameModel.player)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        playerNode.position \u003d CGPoint(x: CGFloat(Constants.playerOriginX), y: self.frame.height / 2)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        playerNode.emitter?.targetNode \u003d self"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(playerNode)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    func initGhost() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let room \u003d room else {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        room.players.forEach { player in"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let ghostNode \u003d PlayerNode(player)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            ghostNode.position \u003d CGPoint(x: 70, y: self.frame.height / 2)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            ghostNode.isRemote \u003d true"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            ghostNodes.append(ghostNode)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            ghostNode.emitter?.targetNode \u003d self"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self.addChild(ghostNode)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            player.actionList.forEach {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self.pendingActions.append((ghostNode, $0))"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard gameMode \u003d\u003d .multi else {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        handlerId \u003d networkManager.addActionHandler { [weak self] (peerID, action) in"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.ghostNodes.forEach { ghostNode in"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                guard ghostNode.playerId \u003d\u003d peerID, (action.type \u003d\u003d .ping ||"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    action.type \u003d\u003d .hold || action.type \u003d\u003d .release) else {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "                action.time +\u003d 0.2"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.pendingActions.append((ghostNode, action))"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func initBoundary() {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let topBoundary \u003d BoundaryNode(CGFloat(Constants.gameHeight + 30))"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let bottomBoundary \u003d BoundaryNode(-30)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(topBoundary)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(bottomBoundary)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func initBackground(type: CharacterType) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        backgroundNode \u003d BackgroundNode(self.frame, type: type)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(backgroundNode)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func initScore() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        scoreNode \u003d ScoreNode()"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        scoreNode.position \u003d CGPoint(x: 100, y: self.frame.height - 70)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(scoreNode)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func initCoinScore() {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        coinScoreNode \u003d CoinScoreNode()"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        coinScoreNode.position \u003d CGPoint(x: 70, y: self.frame.height - 100)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(coinScoreNode)"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func initMission() {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionNode \u003d MissionNode(mission: gameModel.mission)"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionNode.position \u003d CGPoint(x: self.frame.midX, y: 0)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(missionNode)"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func initPauseButton() {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard gameMode !\u003d .multi else {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseButton \u003d SKSpriteNode(texture: MenuTexture.pause)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseButton.size \u003d CGSize(width: 40, height: 40)"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseButton.name \u003d \"pause\""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseButton.position \u003d CGPoint(x: self.frame.width - 70, y: self.frame.height - 70)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseButton.zPosition \u003d 10"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(pauseButton)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func initCountdownLabel() {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        countdownLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        countdownLabel.name \u003d \"countdown\""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        countdownLabel.text \u003d \"\""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        countdownLabel.fontSize \u003d 80"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        countdownLabel.position \u003d CGPoint(x: self.frame.midX,"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                                          y: self.frame.midY - countdownLabel.frame.height / 2)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(countdownLabel)"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override func touchesBegan(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let frameHeight \u003d Double(self.frame.height)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let position \u003d playerNode.position"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let velocity \u003d playerNode.physicsBody?.velocity,"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                return"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch nodes.first?.name {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"pause\":"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            pause()"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            showPauseWindow()"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"continue\":"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            resume()"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard isStarted else {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            gameEngine.hold(CGPoint(x: 0, y: Double(position.y) / frameHeight), velocity)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override func touchesEnded(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let frameHeight \u003d Double(self.frame.height)"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let position \u003d playerNode.position"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let velocity \u003d playerNode.physicsBody?.velocity,"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch nodes.first?.name {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"menu\":"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentMenuScene()"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard isStarted else {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            gameEngine.release(CGPoint(x: 0, y: Double(position.y) / frameHeight), velocity)"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func updateScores() {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        scoreNode.update(gameModel.distance)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        coinScoreNode.update(gameModel.coinCount)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func showPauseWindow() {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseWindow \u003d SKSpriteNode(color: SKColor.black, size: self.frame.size)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let pauseWindow \u003d pauseWindow else {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseWindow.name \u003d \"continue\""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseWindow.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseWindow.alpha \u003d 0.8"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseWindow.zPosition \u003d 50"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let pausedLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pausedLabel.name \u003d \"continue\""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pausedLabel.text \u003d \"P A U S E D\""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pausedLabel.fontSize \u003d 60"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pausedLabel.position \u003d CGPoint(x: 0, y: 0)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseWindow.addChild(pausedLabel)"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let continueLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        continueLabel.name \u003d \"continue\""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        continueLabel.text \u003d \"tap to continue the game\""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        continueLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        continueLabel.position \u003d CGPoint(x: 0, y: -60)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseWindow.addChild(continueLabel)"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let returnToMenuButton \u003d ReturnToMenuNode()"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        returnToMenuButton.position \u003d CGPoint("
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                        x: -pauseWindow.frame.width / 2 + 70 + returnToMenuButton.size.width / 2,"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                        y: pauseWindow.frame.height / 2 - 70)"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        pauseWindow.addChild(returnToMenuButton)"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(pauseWindow)"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentGameOverScene() {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let gameOverScene \u003d GameOverScene(size: self.size)"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameOverScene.currentCharacterType \u003d characterType"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameOverScene.currentPlayerActions \u003d gameModel.player.actionList"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameOverScene.currentSeed \u003d seed"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameOverScene.score \u003d gameModel.distance"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(gameOverScene, transition: SKTransition.fade(with: .white, duration: 0.5))"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentEnterLeaderBoardScene() {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let enterLeaderboardScene \u003d EnterLeaderboardScene(size: self.size)"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        enterLeaderboardScene.incomingScore \u003d gameModel.distance"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        enterLeaderboardScene.currentPlayerActions \u003d gameModel.player.actionList"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        enterLeaderboardScene.currentSeed \u003d seed"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch characterType {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .arrow:"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            enterLeaderboardScene.incomingCategory \u003d .arrow"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .flappy:"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            enterLeaderboardScene.incomingCategory \u003d .flappy"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .glide:"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            enterLeaderboardScene.incomingCategory \u003d .glide"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(enterLeaderboardScene, transition: SKTransition.fade(with: .white, duration: 0.5))"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentMenuScene() {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let menuScene \u003d MainMenuScene(size: self.size)"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(menuScene)"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func pause() {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        isStarted \u003d false"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        pauseStartTime \u003d Date().timeIntervalSince1970"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gameEngine.stopTimer()"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.physicsWorld.speed \u003d 0"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func resume() {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        isStarted \u003d true"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let timeNow \u003d Date().timeIntervalSince1970"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        pausedTime +\u003d timeNow - pauseStartTime"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        if let pauseWindow \u003d pauseWindow {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            self.removeChildren(in: [pauseWindow])"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        gameEngine.startTimer()"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.physicsWorld.speed \u003d 1"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 158,
      "Ang YC": 146,
      "jo-lyn": 140
    }
  },
  {
    "path": "Dash/Dash/Scene/Gameplay/LeaderboardScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  LeaderboardScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class LeaderboardScene: SKScene {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var loadingView: UIView!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private let networkManager \u003d NetworkManager.shared"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var returnToMenuScene: SKScene?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var incomingScore \u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var incomingName: String?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var incomingCategory \u003d HighScoreCategory.arrow"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var currentPlayerActions: [Action] \u003d []"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var currentSeed \u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initHighScoreLabel()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        if let name \u003d incomingName, name.count \u003e 0 {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            prepareScoreBoard(with: incomingScore, and: name)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            renderScoreBoard()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initContinueLabel()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initLoadingWindow()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func prepareScoreBoard(with score: Int, and name: String) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let highScoreRecord \u003d HighScoreRecord(name: name, score: Double(score))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.highScore.setHighScore(highScoreRecord, category: incomingCategory) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            self.renderScoreBoard()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func renderScoreBoard() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.highScore.getHighScore("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            category: incomingCategory) { [weak self] records in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.hideLoadingWindow()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                for (rank, record) in records.enumerated() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    let name \u003d record.name"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                    let score \u003d Int(record.score)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    self?.createRow(rank: rank, name: name, score: score)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func createRow(rank: Int, name: String, score: Int) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let yPos \u003d self.frame.height * 0.85 - 80 - CGFloat(rank) * 46"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let font \u003d (name \u003d\u003d incomingName \u0026\u0026 score \u003d\u003d incomingScore)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            ? Constants.highlightedFont"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            : Constants.defaultFont"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let fontSize \u003d CGFloat(24)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let rankLabel \u003d SKLabelNode(fontNamed: font)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        rankLabel.text \u003d (rank \u003c 9) ? \"0\\(rank + 1)\" : \"\\(rank + 1)\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        rankLabel.fontSize \u003d fontSize"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        rankLabel.position \u003d CGPoint(x: self.frame.width * 0.2, y: yPos)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(rankLabel)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nameLabel \u003d SKLabelNode(fontNamed: font)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        nameLabel.text \u003d \"\\(name)\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        nameLabel.fontSize \u003d fontSize"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        nameLabel.position \u003d CGPoint(x: self.frame.midX, y: yPos)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(nameLabel)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let scoreLabel \u003d SKLabelNode(fontNamed: font)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        scoreLabel.text \u003d \"\\(score)\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        scoreLabel.fontSize \u003d fontSize"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        scoreLabel.position \u003d CGPoint(x: self.frame.width * 0.8, y: yPos)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(scoreLabel)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initHighScoreLabel() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let highScoreLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highScoreLabel.text \u003d \"H I G H S C O R E S\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highScoreLabel.fontSize \u003d 46"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highScoreLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.height * 0.85)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(highScoreLabel)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initContinueLabel() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let highScoreLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highScoreLabel.text \u003d \"tap to continue\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highScoreLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highScoreLabel.position \u003d CGPoint(x: self.frame.midX, y: 70)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(highScoreLabel)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesEnded(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard incomingName !\u003d nil else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let menuScene \u003d MainMenuScene(size: self.size)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            cleanSubviews()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self.view?.presentScene(returnToMenuScene ?? menuScene)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let gameOverScene \u003d GameOverScene(size: self.size)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameOverScene.score \u003d incomingScore"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameOverScene.currentPlayerActions \u003d currentPlayerActions"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameOverScene.currentSeed \u003d currentSeed"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch incomingCategory {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .arrow:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            gameOverScene.currentCharacterType \u003d .arrow"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .flappy:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            gameOverScene.currentCharacterType \u003d .flappy"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .glide:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            gameOverScene.currentCharacterType \u003d .glide"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        cleanSubviews()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(gameOverScene)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func initLoadingWindow() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let midPoint \u003d CGPoint(x: frame.midX, y: frame.midY)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView \u003d LoadingView(origin: frame.origin, mid: midPoint, size: frame.size)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 1"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        view?.addSubview(loadingView)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func hideLoadingWindow() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 0"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func cleanSubviews() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let subviews \u003d view?.subviews else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        subviews.forEach { $0.removeFromSuperview() }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang YC": 46,
      "jo-lyn": 92
    }
  },
  {
    "path": "Dash/Dash/Scene/Menu/MainMenuScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MainMenuScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class MainMenuScene: SKScene {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    let controlsOrderMap: [Int: CharacterType] \u003d ["
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        0: .arrow,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        1: .glide,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        2: .flappy"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var controlsSelectionBoxes: [SKShapeNode] \u003d []"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var currentSelection \u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var canChangeSelection \u003d true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var leftArrow: SKShapeNode!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var rightArrow: SKShapeNode!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    var backgroundNode: BackgroundNode!"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var initialized \u003d false"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard !initialized else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initialized \u003d true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        createControlsSelectionBox(for: .arrow, order: 0)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        createControlsSelectionBox(for: .glide, order: 1)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        createControlsSelectionBox(for: .flappy, order: 2)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initMissionsButton()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initHighscoreButton()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initMultiplayerButton()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.isMultipleTouchEnabled \u003d false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initBackground() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        backgroundNode \u003d BackgroundNode(self.frame, type: .arrow)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(backgroundNode)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func createControlsSelectionBox(for type: CharacterType, order: Int) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // controls selection box"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let size \u003d CGSize(width: self.frame.width - 140, height: self.frame.height * 0.7)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let controlsBox \u003d SKShapeNode(rectOf: size)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsBox.name \u003d \"controlsBox\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsBox.strokeColor \u003d SKColor.clear"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        if order \u003d\u003d currentSelection {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            controlsBox.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            controlsBox.position \u003d CGPoint(x: self.frame.midX, y: 10000)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(controlsBox)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // controls type label"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let controlsLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch type {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .arrow:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            controlsLabel.text \u003d \"A R R O W\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .glide:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            controlsLabel.text \u003d \"G L I D E\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .flappy:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            controlsLabel.text \u003d \"F L A P P Y\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsLabel.fontSize \u003d 60"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsLabel.position \u003d CGPoint(x: 0, y: 10)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsLabel.zPosition \u003d -1"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsBox.addChild(controlsLabel)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // play label"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let playLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playLabel.text \u003d \"tap to play\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playLabel.position \u003d CGPoint(x: 0, y: -60)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsBox.addChild(playLabel)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // arrows"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let leftArrow \u003d SKSpriteNode(texture: MenuTexture.leftArrow)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        leftArrow.size \u003d CGSize(width: 80, height: 80)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        leftArrow.name \u003d \"leftArrow\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        leftArrow.position \u003d CGPoint(x: -controlsBox.frame.width / 2, y: 0)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsBox.addChild(leftArrow)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let rightArrow \u003d SKSpriteNode(texture: MenuTexture.rightArrow)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        rightArrow.size \u003d CGSize(width: 80, height: 80)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        rightArrow.name \u003d \"rightArrow\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        rightArrow.position \u003d CGPoint(x: controlsBox.frame.width / 2, y: 0)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsBox.addChild(rightArrow)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsSelectionBoxes.append(controlsBox)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesBegan(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch nodes.first?.name {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"leftArrow\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            slideLeft()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"rightArrow\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            slideRight()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"controlsBox\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            guard let controlsType \u003d controlsOrderMap[currentSelection] else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                return"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentGameScene(with: controlsType)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesEnded(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch nodes.first?.name {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"missions\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentMissionsScene()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case \"highscore\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            presentHighscoreScene()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"multiplayer\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentMultiplayerLobbyScene()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func slideLeft() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard canChangeSelection else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        canChangeSelection \u003d false"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nextSelection \u003d (currentSelection + 1) % 3"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // position next selection"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsSelectionBoxes[nextSelection].position \u003d CGPoint("
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: self.frame.midX + self.frame.width,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: self.frame.midY)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let slideLeft \u003d SKAction.moveBy(x: -self.frame.width, y: 0, duration: 0.3)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let delay \u003d SKAction.wait(forDuration: 0.3)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        for box in controlsSelectionBoxes {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            let sequence \u003d SKAction.sequence([slideLeft, delay])"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            box.run(sequence, completion: { [weak self] in"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                self?.canChangeSelection \u003d true"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            })"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        currentSelection \u003d nextSelection"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let controlsType \u003d controlsOrderMap[currentSelection] else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        backgroundNode.updateBackground(type: controlsType)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func slideRight() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard canChangeSelection else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        canChangeSelection \u003d false"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nextSelection \u003d (currentSelection \u003d\u003d 0) ? 2 : currentSelection - 1"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // position next selection"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        controlsSelectionBoxes[nextSelection].position \u003d CGPoint("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: self.frame.midX - self.frame.width,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: self.frame.midY)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let slideRight \u003d SKAction.moveBy(x: self.frame.width, y: 0, duration: 0.3)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let delay \u003d SKAction.wait(forDuration: 0.3)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        for box in controlsSelectionBoxes {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            let sequence \u003d SKAction.sequence([slideRight, delay])"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            box.run(sequence, completion: { [weak self] in"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                self?.canChangeSelection \u003d true"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            })"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        currentSelection \u003d nextSelection"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        guard let controlsType \u003d controlsOrderMap[currentSelection] else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            return"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        backgroundNode.updateBackground(type: controlsType)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initMissionsButton() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let missionsButton \u003d SKSpriteNode(texture: MenuTexture.missions)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsButton.size \u003d CGSize(width: 35, height: 35)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsButton.name \u003d \"missions\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsButton.position \u003d CGPoint("
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: missionsButton.frame.width / 2 + 70,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: self.frame.height - 50)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(missionsButton)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let missionsLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsLabel.text \u003d \"missions\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsLabel.name \u003d \"missions\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsLabel.position \u003d CGPoint(x: 65, y: -5)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsButton.addChild(missionsLabel)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initHighscoreButton() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let highscoreButton \u003d SKSpriteNode(texture: MenuTexture.highScore)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highscoreButton.size \u003d CGSize(width: 30, height: 30)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highscoreButton.name \u003d \"highscore\""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highscoreButton.position \u003d CGPoint("
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: highscoreButton.frame.width + 240,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: self.frame.height - 50)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(highscoreButton)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let highscoreLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highscoreLabel.text \u003d \"highscore\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highscoreLabel.name \u003d \"highscore\""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highscoreLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highscoreLabel.position \u003d CGPoint(x: 70, y: -5)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        highscoreButton.addChild(highscoreLabel)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initMultiplayerButton() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let multiplayerButton \u003d SKSpriteNode(texture: MenuTexture.multiplayer)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        multiplayerButton.size \u003d CGSize(width: 30, height: 30)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        multiplayerButton.name \u003d \"multiplayer\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        multiplayerButton.position \u003d CGPoint("
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: self.frame.width - multiplayerButton.frame.width / 2 - 70,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: self.frame.height - 50)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(multiplayerButton)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let multiplayerLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        multiplayerLabel.name \u003d \"multiplayer\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        multiplayerLabel.text \u003d \"multiplayer\""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        multiplayerLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        multiplayerLabel.position \u003d CGPoint(x: -70, y: -5)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        multiplayerButton.addChild(multiplayerLabel)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentGameScene(with characterType: CharacterType) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let gameScene \u003d GameScene(size: self.size)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        gameScene.characterType \u003d characterType"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.clockTime \u003d (Date().timeIntervalSince1970 + 3) * 1000"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.seed \u003d Int.random(in: 0...999999999)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(gameScene)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentMissionsScene() {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let missionsScene \u003d MissionsScene(size: self.size)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsScene.returnToMenuScene \u003d self"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(missionsScene)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func presentHighscoreScene() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let leaderboardScene \u003d LeaderboardScene(size: self.size)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let selected \u003d controlsOrderMap[currentSelection] else {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        var category \u003d HighScoreCategory.arrow"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        switch selected {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case .arrow: category \u003d .arrow"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case .flappy: category \u003d .flappy"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        case .glide: category \u003d .glide"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        leaderboardScene.incomingCategory \u003d category"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        leaderboardScene.returnToMenuScene \u003d self"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.view?.presentScene(leaderboardScene)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentMultiplayerLobbyScene() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let multiplayerLobbyScene \u003d MultiplayerLobbyScene(size: self.size)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        multiplayerLobbyScene.returnToMenuScene \u003d self"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(multiplayerLobbyScene)"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 13,
      "Ang YC": 26,
      "jo-lyn": 250
    }
  },
  {
    "path": "Dash/Dash/Scene/Menu/MissionsScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MissionsScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class MissionsScene: SKScene {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var returnToMenuScene: SKScene!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initMissionsTitleLabel()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initMissions()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initCloseButton()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func initBackground() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let backgroundNode \u003d BackgroundNode(self.frame, type: .flappy)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(backgroundNode)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initMissionsTitleLabel() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let missionsLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsLabel.text \u003d \"M I S S I O N S\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsLabel.fontSize \u003d 80"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        missionsLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY + 100)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(missionsLabel)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initMissions() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // distance"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let distanceMission \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        distanceMission.text \u003d missionMessage(for: .distance)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        distanceMission.fontSize \u003d 20"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        distanceMission.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY - 40)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(distanceMission)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // powerups"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let powerUpMission \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        powerUpMission.text \u003d missionMessage(for: .powerUp)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        powerUpMission.fontSize \u003d 20"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        powerUpMission.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY - 80)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(powerUpMission)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // coins"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let coinsMission \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        coinsMission.text \u003d missionMessage(for: .coin)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        coinsMission.fontSize \u003d 20"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        coinsMission.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY - 120)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(coinsMission)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initCloseButton() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let closeButton \u003d SKSpriteNode(texture: MenuTexture.cross)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        closeButton.size \u003d CGSize(width: 40, height: 40)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        closeButton.name \u003d \"close\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        closeButton.position \u003d CGPoint("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: self.frame.width - 70,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: self.frame.height - 70)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(closeButton)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesEnded(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        if nodes.first?.name \u003d\u003d \"close\" {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            self.view?.presentScene(returnToMenuScene)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func missionMessage(for missionType: MissionType) -\u003e String {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let checkpoint \u003d Storage.getMissionCheckpoint(forMissionType: missionType)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        return MissionConfig.message(for: checkpoint, missionType: missionType)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 6,
      "jo-lyn": 78
    }
  },
  {
    "path": "Dash/Dash/Scene/Menu/Multiplayer/MultiplayerHostScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MultiplayerHostScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class MultiplayerHostScene: SKScene {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var selectArrowPosition: CGPoint!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var selectGlidePosition: CGPoint!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var selectFlappyPosition: CGPoint!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var selectionBox: SKShapeNode!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var playerCountLabel: SKLabelNode!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var loadingView: UIView!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var roomId \u003d \"\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var isHost \u003d false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private let networkManager \u003d NetworkManager.shared"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var currentSelection \u003d CharacterType.arrow"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private var handlerId: Int?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initRoomIdLabel(id: roomId)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initPlayerCountLabel(count: 1)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initModeSelectionLabel()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initStartLabel()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initBackButton()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initLogics()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initLoadingWindow()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func initBackground() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let backgroundNode \u003d BackgroundNode(self.frame)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(backgroundNode)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func deconstruct() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let handlerId \u003d handlerId else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.removeActionHandler(handlerId)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initRoomIdLabel(id: String) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let roomIdLabel \u003d SKLabelNode(fontNamed: \"HelveticaNeue\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        roomIdLabel.text \u003d \"room id: \\(id)\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        roomIdLabel.fontSize \u003d 30"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        roomIdLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.height * 0.8)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(roomIdLabel)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initPlayerCountLabel(count: Int) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playerCountLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerCountLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerCountLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.height * 0.75)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.addChild(playerCountLabel)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func updatePlayerCountLabel(count: Int) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        playerCountLabel.text \u003d \"\\(count) players joined\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initModeSelectionLabel() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let selectLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        selectLabel.text \u003d \"S E L E C T  M O D E\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        selectLabel.fontSize \u003d 40"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        selectLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.height * 0.5)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(selectLabel)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let arrowLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        arrowLabel.name \u003d \"arrow\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        arrowLabel.text \u003d \"arrow\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        arrowLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        arrowLabel.position \u003d CGPoint(x: self.frame.midX - 140, y: self.frame.height * 0.4)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(arrowLabel)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        selectArrowPosition \u003d selectionBoxPosition(for: arrowLabel.position)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let glideLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        glideLabel.name \u003d \"glide\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        glideLabel.text \u003d \"glide\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        glideLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        glideLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.height * 0.4)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(glideLabel)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        selectGlidePosition \u003d selectionBoxPosition(for: glideLabel.position)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let flappyLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        flappyLabel.name \u003d \"flappy\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        flappyLabel.text \u003d \"flappy\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        flappyLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        flappyLabel.position \u003d CGPoint(x: self.frame.midX + 140, y: self.frame.height * 0.4)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(flappyLabel)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        selectFlappyPosition \u003d selectionBoxPosition(for: flappyLabel.position)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        selectionBox \u003d SKShapeNode(rectOf: CGSize(width: 110, height: 45))"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        selectionBox.position \u003d selectArrowPosition"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(selectionBox)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func selectionBoxPosition(for labelPosition: CGPoint) -\u003e CGPoint {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        return CGPoint(x: labelPosition.x, y: labelPosition.y + 5)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initStartLabel() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let startLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        startLabel.name \u003d \"start\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        startLabel.text \u003d \"S T A R T\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        startLabel.fontSize \u003d 40"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        startLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.height * 0.2)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(startLabel)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initBackButton() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let backButton \u003d BackButtonNode(frameHeight: self.frame.height)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(backButton)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesBegan(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch nodes.first?.name {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"arrow\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            updateSelection(to: .arrow)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"glide\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            updateSelection(to: .glide)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"flappy\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            updateSelection(to: .flappy)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func updateSelection(to selectedType: CharacterType) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard isHost else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        currentSelection \u003d selectedType"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.networkable.setRoomInfo(\"type\", value: currentSelection.rawValue)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        updateTypePosition()"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func updateTypePosition() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        switch currentSelection {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .arrow:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            selectionBox.position \u003d selectArrowPosition"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .glide:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            selectionBox.position \u003d selectGlidePosition"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case .flappy:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            selectionBox.position \u003d selectFlappyPosition"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func initLogics() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        updatePlayers(Array(networkManager.networkable.allPlayers))"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        updateInfo(networkManager.networkable.roomInfo)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.networkable.setOnPlayersChange { [weak self] (playerIds) in"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.updatePlayers(playerIds)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.networkable.setOnRoomInfo { [weak self] (roomInfo) in"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.updateInfo(roomInfo)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        handlerId \u003d networkManager.addActionHandler { [weak self] (_, action) in"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard let self \u003d self, action.type \u003d\u003d .start else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let localTime \u003d self.networkManager.networkable"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                .getLocalTime(fromServerTime: action.value)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self.startGame(localTime)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func updatePlayers(_ playerIds: [String]) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        updatePlayerCountLabel(count: playerIds.count + 1)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func updateInfo(_ roomInfo: [String: Any?]) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let roomType \u003d roomInfo[\"type\"] as? String,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let gameType \u003d CharacterType(rawValue: roomType) else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        currentSelection \u003d gameType"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        updateTypePosition()"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func onStartPressed() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard isHost else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let startAction \u003d Action(time: 0.0, type: .start)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        startAction.value \u003d networkManager.networkable.getServerTime() + 3000"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.sendAction(startAction)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func startGame(_ timestamp: Double) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let gameScene \u003d SKScene(fileNamed: \"GameScene\") as? GameScene else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        showLoadingWindow()"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let room \u003d Room(id: roomId, type: currentSelection)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.networkable.allPlayers.forEach { [weak room] id in"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            let player \u003d Player(type: currentSelection)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            player.id \u003d id"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            room?.players.append(player)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.characterType \u003d currentSelection"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.room \u003d room"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.gameMode \u003d .multi"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.clockTime \u003d timestamp"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        gameScene.seed \u003d Int(roomId, radix: 10) ?? 0"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        cleanSubviews()"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.view?.presentScene(gameScene)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesEnded(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch nodes.first?.name {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"start\":"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            onStartPressed()"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"back\":"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentMultiplayerLobbyScene()"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentMultiplayerLobbyScene() {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        cleanSubviews()"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let lobbyScene \u003d MultiplayerLobbyScene(size: self.size)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(lobbyScene)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func initLoadingWindow() {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let midPoint \u003d CGPoint(x: frame.midX, y: frame.midY)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView \u003d LoadingView(origin: frame.origin, mid: midPoint, size: frame.size)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 0"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        view?.addSubview(loadingView)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func showLoadingWindow() {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 1"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func cleanSubviews() {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let subviews \u003d view?.subviews else {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        subviews.forEach { $0.removeFromSuperview() }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 6,
      "Ang YC": 117,
      "jo-lyn": 146
    }
  },
  {
    "path": "Dash/Dash/Scene/Menu/Multiplayer/MultiplayerJoinScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MultiplayerJoinScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class MultiplayerJoinScene: SKScene {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var textField: UITextField!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var loadingView: UIView!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private let networkManager \u003d NetworkManager.shared"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initIdTextField()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initSubmitButton()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initBackButton()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initLoadingWindow()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func initBackground() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let backgroundNode \u003d BackgroundNode(self.frame)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(backgroundNode)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initIdTextField() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // position and size"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let textFieldSize \u003d CGSize(width: self.frame.width * 0.4, height: 60)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let textFieldOrigin \u003d CGPoint("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: self.frame.midX - textFieldSize.width / 2,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: self.frame.midY - 20)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        textField \u003d TextFieldView(size: textFieldSize, origin: textFieldOrigin, placeholder: \"enter room id here\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        view?.addSubview(textField)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // room id label"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let enterIdLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        enterIdLabel.text \u003d \"enter room id\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        enterIdLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        enterIdLabel.position \u003d CGPoint("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: textFieldOrigin.x + enterIdLabel.frame.width / 2,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: self.frame.midY + 40)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(enterIdLabel)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initSubmitButton() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let submitButton \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.name \u003d \"submit\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.text \u003d \"G O\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.fontSize \u003d 20"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        submitButton.position \u003d CGPoint("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            x: textField.frame.maxX + submitButton.frame.width / 2 + 20,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            y: textField.frame.midY - 25)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(submitButton)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initBackButton() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let backButton \u003d BackButtonNode(frameHeight: self.frame.height)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(backButton)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesEnded(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch nodes.first?.name {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"submit\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            handleSubmit()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"back\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentMultiplayerLobbyScene()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentMultiplayerLobbyScene() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        cleanSubviews()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let lobbyScene \u003d MultiplayerLobbyScene(size: self.size)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(lobbyScene)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func handleSubmit() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let roomId \u003d textField.text, roomId.count \u003e 0 else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            alertInvalidInput()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        showLoadingWindow()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        networkManager.networkable.joinRoom(roomId) { [weak self] (err) in"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            guard err \u003d\u003d nil else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.hideLoadingWindow()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                return"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.cleanSubviews()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            self?.presentMultiplayerHostScene(roomId)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func alertInvalidInput() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let alertLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        alertLabel.text \u003d \"room does not exist!\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        alertLabel.fontColor \u003d SKColor.init(red: 229 / 255, green: 52 / 255, blue: 71 / 255, alpha: 1)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        alertLabel.fontSize \u003d 16"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        alertLabel.position \u003d CGPoint(x: textField.frame.minX + alertLabel.frame.width / 2,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                                      y: self.frame.midY - 60)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(alertLabel)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func presentMultiplayerHostScene(_ roomID: String) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let hostScene \u003d MultiplayerHostScene(size: self.size)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        hostScene.roomId \u003d roomID"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        hostScene.isHost \u003d false"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        self.view?.presentScene(hostScene)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initLoadingWindow() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let midPoint \u003d CGPoint(x: frame.midX, y: frame.midY)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingView \u003d LoadingView(origin: frame.origin, mid: midPoint, size: frame.size)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingView.alpha \u003d 0"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        view?.addSubview(loadingView)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func showLoadingWindow() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingView.alpha \u003d 1"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func hideLoadingWindow() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 0"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func cleanSubviews() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let subviews \u003d view?.subviews else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        subviews.forEach { $0.removeFromSuperview() }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 6,
      "Ang YC": 29,
      "jo-lyn": 106
    }
  },
  {
    "path": "Dash/Dash/Scene/Menu/Multiplayer/MultiplayerLobbyScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  MultiplayerLobbyScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class MultiplayerLobbyScene: SKScene {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var returnToMenuScene: SKScene?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var loadingView: UIView!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    var networkManager \u003d NetworkManager.shared"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initHostLabel()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initJoinLabel()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initBackButton()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        initLoadingWindow()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    private func initBackground() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let backgroundNode \u003d BackgroundNode(self.frame)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(backgroundNode)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initHostLabel() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let hostLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        hostLabel.name \u003d \"host\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        hostLabel.text \u003d \"H O S T  G A M E\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        hostLabel.fontSize \u003d 40"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        hostLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY + 45)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(hostLabel)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initJoinLabel() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let joinLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        joinLabel.name \u003d \"join\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        joinLabel.text \u003d \"J O I N  G A M E\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        joinLabel.fontSize \u003d 40"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        joinLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY - 45)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(joinLabel)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initBackButton() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let backButton \u003d BackButtonNode(frameHeight: self.frame.height)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(backButton)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesEnded(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        guard let location \u003d touches.first?.location(in: self) else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let nodes \u003d self.nodes(at: location)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        switch nodes.first?.name {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"host\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            showLoadingWindow()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            networkManager.networkable.createRoom() { [weak self] _, roomID in"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                guard let roomID \u003d roomID else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    self?.hideLoadingWindow()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                self?.networkManager.networkable.joinRoom(roomID) { [weak self] _ in"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    self?.networkManager.networkable.setRoomInfo(\"type\", value: \"arrow\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    self?.cleanSubviews()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                    self?.presentMultiplayerHostScene(roomID)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"join\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentMultiplayerJoinScene()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        case \"back\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            presentMainMenuScene()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            return"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentMainMenuScene() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let mainMenuScene \u003d returnToMenuScene !\u003d nil ? returnToMenuScene : MainMenuScene(size: self.size)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(mainMenuScene)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func presentMultiplayerHostScene(_ roomID: String) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let hostScene \u003d MultiplayerHostScene(size: self.size)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        hostScene.roomId \u003d roomID"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        hostScene.isHost \u003d true"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(hostScene)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func presentMultiplayerJoinScene() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let joinScene \u003d MultiplayerJoinScene(size: self.size)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(joinScene)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func initLoadingWindow() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        let midPoint \u003d CGPoint(x: frame.midX, y: frame.midY)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView \u003d LoadingView(origin: frame.origin, mid: midPoint, size: frame.size)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 0"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        view?.addSubview(loadingView)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func showLoadingWindow() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 1"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func hideLoadingWindow() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        loadingView.alpha \u003d 0"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ang YC"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    private func cleanSubviews() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        guard let subviews \u003d view?.subviews else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "            return"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "        subviews.forEach { $0.removeFromSuperview() }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ang YC"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 6,
      "Ang YC": 40,
      "jo-lyn": 75
    }
  },
  {
    "path": "Dash/Dash/Scene/Menu/StartScene.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  StartScene.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import SpriteKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class StartScene: SKScene {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    var titleLabel: SKLabelNode!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func didMove(to view: SKView) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initTitleLabel()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        initPlayLabel()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initBackground() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        let backgroundNode \u003d BackgroundNode(self.frame)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.addChild(backgroundNode)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initTitleLabel() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        titleLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        titleLabel.text \u003d \"D A S H\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        titleLabel.fontSize \u003d 160"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        titleLabel.position \u003d CGPoint(x: self.frame.midX, y: self.frame.midY)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(titleLabel)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func initPlayLabel() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let playLabel \u003d SKLabelNode(fontNamed: Constants.defaultFont)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playLabel.text \u003d \"tap to play\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playLabel.fontSize \u003d 20"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        playLabel.position \u003d CGPoint(x: self.frame.midX, y: titleLabel.position.y - 100)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addChild(playLabel)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override func touchesBegan(_ touches: Set\u003cUITouch\u003e, with event: UIEvent?) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let mainMenuScene \u003d MainMenuScene(size: self.size)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.view?.presentScene(mainMenuScene)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 2,
      "jo-lyn": 43
    }
  },
  {
    "path": "Dash/Dash/View/LoadingView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  LoadingView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class LoadingView: UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    required init(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    fatalError(\"This class does not support NSCoding\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    override init (frame: CGRect) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    convenience init(origin: CGPoint, mid: CGPoint, size: CGSize) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.init(frame: CGRect(origin: origin, size: size))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // window"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let loadingRect \u003d CGRect(x: origin.x, y: origin.y,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                                 width: size.width, height: size.height)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.frame \u003d loadingRect"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.backgroundColor \u003d UIColor.init(white: 0, alpha: 0.8)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // label"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let loadingLabel \u003d UILabel(frame: CGRect(x: 0, y: 0,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                                                 width: size.width, height: size.height))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingLabel.font \u003d UIFont(name: Constants.defaultFont, size: 20)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingLabel.center \u003d CGPoint(x: mid.x,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "                                      y: mid.y + 64)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingLabel.textColor \u003d .white"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingLabel.textAlignment \u003d .center"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingLabel.text \u003d \"loading\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addSubview(loadingLabel)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // icon"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let loadingIconRect \u003d CGRect(x: 0, y: 0, width: 5, height: 5)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let loadingIcon \u003d UIView(frame: loadingIconRect)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingIcon.center \u003d CGPoint(x: mid.x, y: mid.y - 28)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingIcon.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        loadingIcon.layer.cornerRadius \u003d loadingIconRect.width / 2"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.addSubview(loadingIcon)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        animate(loadingIcon)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    private func animate(_ icon: UIView) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        UIView.animate(withDuration: 1, delay: 0, options: [.repeat, .curveEaseInOut], animations: {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            icon.transform \u003d CGAffineTransform(scaleX: 20, y: 20)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            icon.alpha \u003d 0"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        })"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 58
    }
  },
  {
    "path": "Dash/Dash/View/TextFieldView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  TextFieldView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Dash"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Created by Jolyn Tan on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "class TextFieldView: UITextField {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    convenience init(size: CGSize, origin: CGPoint, placeholder: String) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.init(frame: CGRect(origin: origin, size: size))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // text properties"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.textColor \u003d .white"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.attributedPlaceholder \u003d NSAttributedString("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            string: placeholder,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "            attributes: [NSAttributedString.Key.foregroundColor: UIColor.init(white: 1, alpha: 0.8)])"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.layer.borderColor \u003d UIColor.white.cgColor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.layer.borderWidth \u003d 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.backgroundColor \u003d .clear"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        // left and right padding"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        let padding \u003d UIView(frame: CGRect(x: 0, y: 0, width: 20, height: size.height))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.leftView \u003d padding"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.leftViewMode \u003d .always"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.rightView \u003d padding"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.rightViewMode \u003d .always"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        self.delegate \u003d self"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "extension TextFieldView: UITextFieldDelegate {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    func textFieldShouldReturn(_ textField: UITextField) -\u003e Bool {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        textField.resignFirstResponder()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jo-lyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jo-lyn": 41
    }
  },
  {
    "path": "Dash/DashTests/DashTests.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  DashTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  DashTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class DashTests: XCTestCase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func testExample() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // This is an example of a functional test case."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func testPerformanceExample() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // This is an example of a performance test case."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.measure {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Put the code you want to measure the time of here."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 33
    }
  },
  {
    "path": "Dash/DashTests/GameModelTests.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  GameModelTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  DashTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class GameModelTests: XCTestCase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 13
    }
  },
  {
    "path": "Dash/DashTests/GeneratorTests.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  GeneratorTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  DashTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Created by Jie Liang Ang on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//  Copyright Â© 2019 nus.cs3217. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "class GeneratorTests: XCTestCase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func testExample() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // This is an example of a functional test case."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    func testPerformanceExample() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        // This is an example of a performance test case."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        self.measure {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "            // Put the code you want to measure the time of here."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jieliangang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jieliangang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jieliangang": 33
    }
  }
]
