[
  {
    "path": "NAME/AppDelegate.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  AppDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 E-Liang Tan. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "@UIApplicationMain"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class AppDelegate: UIResponder, UIApplicationDelegate {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let window \u003d UIWindow(frame: UIScreen.main.bounds)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func application(_ application: UIApplication,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                     willFinishLaunchingWithOptions options: [UIApplication.LaunchOptionsKey: Any]? \u003d nil) -\u003e Bool {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try FixtureGenerator.create()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            fatalError(\"You suck!\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        window.rootViewController \u003d SplashViewController()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        window.makeKeyAndVisible()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func application(_ application: UIApplication, shouldSaveApplicationState coder: NSCoder) -\u003e Bool {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func application(_ application: UIApplication, shouldRestoreApplicationState coder: NSCoder) -\u003e Bool {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func applicationWillResignActive(_ application: UIApplication) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Sent when the application is about to move from active to inactive state."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // or when the user quits the application and it begins the transition to the background state."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Use this method to pause ongoing tasks, disable timers, and invalidate graphics rendering callbacks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Games should use this method to pause the game."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func applicationDidEnterBackground(_ application: UIApplication) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Use this method to release shared resources, save user data, invalidate timers,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // and store enough application state information to restore your application to its current state"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // in case it is terminated later."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // If your application supports background execution,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // this method is called instead of applicationWillTerminate: when the user quits."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func applicationWillEnterForeground(_ application: UIApplication) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Called as part of the transition from the background to the active state;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // here you can undo many of the changes made on entering the background."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func applicationDidBecomeActive(_ application: UIApplication) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Restart any tasks that were paused (or not yet started) while the application was inactive."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // If the application was previously in the background, optionally refresh the user interface."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func applicationWillTerminate(_ application: UIApplication) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Called when the application is about to terminate. Save data if appropriate."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // See also applicationDidEnterBackground:."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 22,
      "E-Liang Tan": 47
    }
  },
  {
    "path": "NAME/Models/Access Control/AccessControl.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AccessControl.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum AccessControl {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    case kitchen(stallId: String)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    case stallOwner(stallId: String)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    case establishment(establishmentId: String)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension AccessControl: Codable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private enum CodingKeys: CodingKey {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case userType"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case accountType"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private enum UserType: Int, Codable {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case kitchen"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case stallOwner"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case establishment"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        init(of accessControl: AccessControl) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            switch accessControl {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            case .kitchen: self \u003d .kitchen"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            case .stallOwner: self \u003d .stallOwner"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            case .establishment: self \u003d .establishment"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let usertype \u003d try container.decode(UserType.self, forKey: .userType)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        switch usertype {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .kitchen:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let stallId \u003d try container.decode(String.self, forKey: .accountType)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            self \u003d .kitchen(stallId: stallId)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .stallOwner:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let stallId \u003d try container.decode(String.self, forKey: .accountType)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            self \u003d .stallOwner(stallId: stallId)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .establishment:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let establishmentId \u003d try container.decode(String.self, forKey: .accountType)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            self \u003d .establishment(establishmentId: establishmentId)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        try container.encode(UserType(of: self), forKey: .userType)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .kitchen(let stall), .stallOwner(let stall):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            try container.encode(stall, forKey: .accountType)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .establishment(let establishment):"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            try container.encode(establishment, forKey: .accountType)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 61
    }
  },
  {
    "path": "NAME/Models/Access Control/Account.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Account.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate var secureHash: String {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // TODO: Use something more secure than Facebook-standard ROT26"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return self"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class Account: Object {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc dynamic var username: String \u003d \"\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc private dynamic var password: String \u003d \"\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc dynamic private var accessControlEncoded \u003d Data()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var _accessControl: AccessControl?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var accessControl: AccessControl {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            if let accessControl \u003d _accessControl {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return accessControl"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let accessControl \u003d ModelHelper.decodeAsJson(AccessControl.self, from: accessControlEncoded)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            _accessControl \u003d accessControl"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return accessControl"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            accessControlEncoded \u003d ModelHelper.encodeAsJson(newValue)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            _accessControl \u003d newValue"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var accountType: AccountType {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        switch accessControl {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .kitchen, .stallOwner:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return .stall"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .establishment:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return .establishment"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    convenience init(username: String, password: String, accessControl: AccessControl) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.username \u003d username"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.password \u003d password.secureHash"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.accessControl \u003d accessControl"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return \"username\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Methods"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func checkPassword(_ candidate: String) -\u003e Bool {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return candidate.secureHash \u003d\u003d password"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 70
    }
  },
  {
    "path": "NAME/Models/Access Control/AccountType.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AccountType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 21/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum AccountType {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    case stall"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    case establishment"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 12
    }
  },
  {
    "path": "NAME/Models/Bill/Bill.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "class Bill: CustomStringConvertible {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var items: [BillItemProtocol] \u003d []"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var establishmentDiscounts: [Discount] \u003d []"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var establishmentSurcharges: [Surcharge] \u003d []"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    init(items: [BillItemProtocol] \u003d [],"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "         establishmentDiscounts: [Discount] \u003d [],"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "         establishmentSurcharges: [Surcharge] \u003d []) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "        self.items \u003d items"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "        self.establishmentDiscounts \u003d establishmentDiscounts"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "        self.establishmentSurcharges \u003d establishmentSurcharges"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var subtotal: Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return subtotalStackables + subtotalNonStackables + subtotalNoDiscounts"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var grandTotal: Int {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "        // Check type of discount"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let firstDiscount \u003d establishmentDiscounts.first else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return addSurchargesAndRound(subtotal)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        if firstDiscount.stackable {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return addSurchargesAndRound(grandTotalWithSDiscount)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return addSurchargesAndRound(grandTotalWithNSDiscount)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var description: String {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var description \u003d \"Bill \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "        description +\u003d \"Subtotal: \\(subtotal)\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "        description +\u003d \"Grand total: \\(grandTotal)\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": "        description +\u003d \"Items: \\(items)\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "        description +\u003d \"Est. Discounts: \\(establishmentDiscounts)\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "        description +\u003d \"Surcharges: \\(establishmentSurcharges)\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return description"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var subtotalStackables: Int {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let stackableItems \u003d items.filter { $0.containsStackableDiscounts ?? false }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return stackableItems.reduce(0) { subtotal, item in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "            subtotal + item.discountedPrice"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var subtotalNonStackables: Int {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let nonStackableItems \u003d items.filter { !($0.containsStackableDiscounts ?? true) }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return nonStackableItems.reduce(0) { subtotal, item in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "            subtotal + item.discountedPrice"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var subtotalNoDiscounts: Int {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let undiscountedItems \u003d items.filter { $0.containsStackableDiscounts \u003d\u003d nil }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return undiscountedItems.reduce(0) { subtotal, item in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "            subtotal + item.originalPrice"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var grandTotalWithSDiscount: Int {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let undiscountedOrStackableItems \u003d items.filter { $0.containsStackableDiscounts ?? true }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let sumAffected \u003d undiscountedOrStackableItems.reduce(0) { total, item in"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "            total + item.discountedPrice"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var totalPossibleDeduction \u003d 0"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": "        for discount in establishmentDiscounts {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "            totalPossibleDeduction +\u003d discount.toAbsolute(fromAmount: sumAffected)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return max(self.subtotal - min(sumAffected, totalPossibleDeduction), 0)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var grandTotalWithNSDiscount: Int {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var runningSubtotal \u003d self.subtotal"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let undiscountedItems \u003d items.filter { $0.containsStackableDiscounts \u003d\u003d nil }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let nsDiscount \u003d establishmentDiscounts.first else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return runningSubtotal"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": "        switch nsDiscount.priceModification {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case .absolute(amount: let amt):"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "            var totalPriceAffected \u003d 0"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": "            for item in undiscountedItems {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": "                totalPriceAffected +\u003d item.originalPrice"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "            runningSubtotal -\u003d min(totalPriceAffected, amt)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case .multiplier(factor: _):"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": "            var amountReduced \u003d 0"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": "            for item in undiscountedItems {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Derek"
        },
        "content": "                amountReduced +\u003d nsDiscount.toAbsolute(fromAmount: item.originalPrice)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Derek"
        },
        "content": "            runningSubtotal -\u003d amountReduced"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return max(runningSubtotal, 0)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func addSurchargesAndRound(_ total: Int) -\u003e Int {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var runningTotal \u003d total"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Derek"
        },
        "content": "        for surcharge in establishmentSurcharges {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Derek"
        },
        "content": "            runningTotal +\u003d surcharge.toAbsolute(fromAmount: total)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return runningTotal"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 119
    }
  },
  {
    "path": "NAME/Models/Bill/BillItem.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol BillItemProtocol {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var source: OrderItemProtocol? { get }"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var originalPrice: Int { get }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var discountedPrice: Int { get }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var containsStackableDiscounts: Bool? { get }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "struct BillItem: BillItemProtocol {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let source: OrderItemProtocol?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let discounts: [Discount]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "    init(source: OrderItemProtocol?, discounts: [Discount]) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "        self.source \u003d source"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "        self.discounts \u003d discounts"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "        checkRep()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var originalPrice: Int {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return source?.originalPrice ?? 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var discountedPrice: Int {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let originalAmount \u003d source?.originalPrice else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let totalAmountReduction \u003d discounts.reduce(0) { total, discount in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "            total + discount.toAbsolute(fromAmount: originalAmount)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return originalAmount - min(originalAmount, totalAmountReduction)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var containsStackableDiscounts: Bool? {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return self.discounts.first?.stackable"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func checkRep() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "        assert(originalPrice \u003e\u003d discountedPrice)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "        assert(discountedPrice \u003e\u003d 0)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let firstDiscount \u003d discounts.first else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "        if firstDiscount.stackable {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "            assert(discounts.filter { $0.stackable }.count \u003d\u003d discounts.count,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "                   \"Should not contain a mix of stackable and non stackable discounts\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "            assert(discounts.count \u003d\u003d 1,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "                   \"Should not contain more than a single non stackable discount\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 56
    }
  },
  {
    "path": "NAME/Models/Customer.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namjjd"
        },
        "content": "class Customer: Object {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let order \u003d LinkingObjects(fromType: Order.self, property: \"customer\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 4,
      "namjjd": 5,
      "Derek": 3
    }
  },
  {
    "path": "NAME/Models/Establishment.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namjjd"
        },
        "content": "class Establishment: Object {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var name: String \u003d \"\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var imageURL: String?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var location: String?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var details: String?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let stalls \u003d LinkingObjects(fromType: Stall.self, property: \"establishment\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    let discounts \u003d List\u003cDiscount\u003e()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let surcharges \u003d List\u003cSurcharge\u003e()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    convenience init(name: String,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     imageURL: String? \u003d nil,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     location: String? \u003d nil,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     description: String? \u003d nil) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.imageURL \u003d imageURL"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.location \u003d location"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.details \u003d description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 7,
      "namjjd": 28,
      "Derek": 1
    }
  },
  {
    "path": "NAME/Models/Menu/IndividualMenuItem.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class IndividualMenuItem: Object, MenuEditable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var name: String \u003d \"\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var details: String \u003d \"\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var imageURL: String?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var isHidden: Bool \u003d false"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var quantity: Int \u003d 0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic private var _price: Int \u003d 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var price: Int \u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Relationships"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var menu: Menu?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let categories \u003d List\u003cMenuCategory\u003e()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let discounts \u003d List\u003cDiscount\u003e()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    let addOns \u003d List\u003cIndividualMenuItem\u003e()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    let options \u003d List\u003cMenuItemOption\u003e()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    convenience init(name: String,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     details: String \u003d \"Lorem ipsum dolor sit amet\", // TODO remove default value"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     imageURL: String? \u003d nil,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     price: Int,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     isHidden: Bool \u003d false,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     quantity: Int \u003d 1,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     addOns: [IndividualMenuItem] \u003d [],"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     options: [MenuItemOption] \u003d []) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.details \u003d details"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.imageURL \u003d imageURL"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.price \u003d price"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.isHidden \u003d isHidden"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.addOns.append(objectsIn: addOns)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.options.append(objectsIn: options)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Methods"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addDiscount(_ discount: Discount) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        discounts.append(discount)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addAddOn(_ addOn: IndividualMenuItem) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addOns.append(addOn)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addAddOns(_ addOns: [IndividualMenuItem]) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.addOns.append(objectsIn: addOns)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 22,
      "namjjd": 43,
      "E-Liang Tan": 1
    }
  },
  {
    "path": "NAME/Models/Menu/Menu.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namjjd"
        },
        "content": "class Menu: Object {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Relationships"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var stall: Stall?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let menuCategories \u003d LinkingObjects(fromType: MenuCategory.self, property: \"menu\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var categories: [MenuCategory] {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return Array(menuCategories)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private var uncategorizedCategory: MenuCategory? {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return menuCategories.filter(\"isUncategorized \u003d\u003d YES\").first"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Map of menu item IDs in all categories to menu items themselves"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private var menuItemMap: [String: MenuEditable] {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let menuItems \u003d categories.flatMap { $0.items }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let menuItemKeysToItems \u003d menuItems.map { ($0.id, $0) }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return Dictionary(menuItemKeysToItems) { old, _ in old }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    convenience init(stall: Stall) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.stall \u003d stall"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Mutators"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func getOrCreateUncategorizedCategory() -\u003e MenuCategory {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if let category \u003d uncategorizedCategory {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return category"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let category \u003d MenuCategory(name: \"Uncategorized\", menu: self)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        category.isUncategorized \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        realm?.add(category, update: true)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return category"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func removeUncategorizedCategoryIfEmpty() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let category \u003d uncategorizedCategory else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            // No uncategorized category to remove"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if category.items.isEmpty {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            realm?.delete(category)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add(category: MenuCategory, at index: Int? \u003d nil) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // HACK: Since LinkingObject doesn\u0027t support inserting at a point, we remove all"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // categories and add them in order."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let categories \u003d self.categories"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        for cat in categories {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            cat.menu \u003d nil"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let insertionPoint \u003d index ?? categories.count"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        for cat in categories[0..\u003cinsertionPoint] {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            cat.menu \u003d self"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        category.menu \u003d self"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        for cat in categories[insertionPoint..\u003ccategories.count] {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            cat.menu \u003d self"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func remove(categoryAt index: Int) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        realm?.delete(menuCategories[index])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Add a category if this menu no longer has one"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if menuCategories.isEmpty {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let category \u003d MenuCategory(name: \"New Category\", menu: self)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            realm?.add(category, update: true)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add(newMenuEditable: MenuEditable) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let uncategorizedCategory \u003d getOrCreateUncategorizedCategory()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        newMenuEditable.add(category: uncategorizedCategory)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Must be called in a write transaction"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// All menuItemIds must belong to at least one category in this menu"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add(menuItemIds: [String], toCategory categoryIndex: Int) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let category \u003d categories[categoryIndex]"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Don\u0027t add items if they\u0027re already in the category. Not using a Set as we want to preserve order."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let menuItemMap \u003d self.menuItemMap"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let uncategorized \u003d uncategorizedCategory"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        for item in menuItemIds.compactMap({ menuItemMap[$0] }) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            if !item.categories.contains(category) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                // Remove item from all its categories if it was added to the Uncategorized category"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                if category.isUncategorized {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                    item.removeAllCategories()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                item.add(category: category)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                // Remove from Uncategorized category, unless it was just purposely added to Uncategorized"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                if !category.isUncategorized, let uncategorized \u003d uncategorized {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                    item.remove(category: uncategorized)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        removeUncategorizedCategoryIfEmpty()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Must be called in a write transaction"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func remove(menuItemIds: [String], fromCategory categoryIndex: Int) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let category \u003d categories[categoryIndex]"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let menuItemMap \u003d self.menuItemMap"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        for item in menuItemIds.compactMap({ menuItemMap[$0] }) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            item.remove(category: category)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            // Add to Uncategorized category if item is no longer in any category,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            // unless it was just removed from the Uncategorized category."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            if !category.isUncategorized \u0026\u0026 item.categories.isEmpty {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                item.add(category: getOrCreateUncategorizedCategory())"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        removeUncategorizedCategoryIfEmpty()"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 12,
      "namjjd": 12,
      "E-Liang Tan": 110
    }
  },
  {
    "path": "NAME/Models/Menu/MenuCategory.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namjjd"
        },
        "content": "class MenuCategory: Object {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var name \u003d \"\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    @objc dynamic var isUncategorized \u003d false"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Relationships"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var menu: Menu?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let individualItems \u003d LinkingObjects(fromType: IndividualMenuItem.self, property: \"categories\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let setItems \u003d LinkingObjects(fromType: SetMenuItem.self, property: \"categories\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var items: [MenuEditable] {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return Array(individualItems) + Array(setItems)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    convenience init(name: String, menu: Menu) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.menu \u003d menu"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 14,
      "namjjd": 14,
      "E-Liang Tan": 2
    }
  },
  {
    "path": "NAME/Models/Menu/MenuDisplayable.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": "protocol MenuDisplayable: Priceable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var id: String { get }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    var name: String { get set }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var details: String { get set }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    var imageURL: String? { get set }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    var isHidden: Bool { get set }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    var quantity: Int { get set }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var categories: List\u003cMenuCategory\u003e { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var discounts: List\u003cDiscount\u003e { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var options: List\u003cMenuItemOption\u003e { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 8,
      "namjjd": 6
    }
  },
  {
    "path": "NAME/Models/Menu/MenuEditable.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuEditable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 17/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuEditable: MenuDisplayable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add(category: MenuCategory)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func remove(category: MenuCategory)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func removeAllCategories()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuEditable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add(category: MenuCategory) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categories.append(category)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func remove(category: MenuCategory) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if let index \u003d categories.index(of: category) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            categories.remove(at: index)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func removeAllCategories() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categories.removeAll()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 29
    }
  },
  {
    "path": "NAME/Models/Menu/MenuItemOption.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuItemOption: Object {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var name: String \u003d \"\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var imageURL: String?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic private var optionsEncoded \u003d Data()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic private var defaultValueEncoded \u003d Data()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var _defaultValue: OrderItemOptionValue?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var defaultValue: OrderItemOptionValue {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            if let defaultValue \u003d _defaultValue {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return defaultValue"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let defaultValue \u003d ModelHelper.decodeAsJson(OrderItemOptionValue.self, from: defaultValueEncoded)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _defaultValue \u003d defaultValue"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return defaultValue"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            defaultValueEncoded \u003d ModelHelper.encodeAsJson(newValue)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _defaultValue \u003d newValue"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var _options: MenuItemOptionType?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var options: MenuItemOptionType {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            if let options \u003d _options {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return options"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namjjd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let options \u003d ModelHelper.decodeAsJson(MenuItemOptionType.self, from: optionsEncoded)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _options \u003d options"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return options"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            optionsEncoded \u003d ModelHelper.encodeAsJson(newValue)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _options \u003d newValue"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    convenience init(name: String,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     imageURL: String \u003d \"\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     options: MenuItemOptionType,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     defaultValue: OrderItemOptionValue) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.imageURL \u003d imageURL"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.options \u003d options"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.defaultValue \u003d defaultValue"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        checkRep()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func checkRep() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch (options, defaultValue) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case (.quantity, .quantity):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            break"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case (.boolean, .boolean):"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            break"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case let (.multipleChoice(choices), .multipleChoice(choiceIndex)):"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            assert(choiceIndex \u003c choices.count, \"multipleChoice\u0027s choiceIndex is out of bounds\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case let (.multipleResponse(choices), .multipleResponse(choiceIndices)):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            assert(choiceIndices.allSatisfy { $0 \u003c choices.count }, \"One of multipleResponse\u0027s choice is out of bounds\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            assertionFailure(\"options and defaultValue does not match\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 55,
      "namjjd": 25
    }
  },
  {
    "path": "NAME/Models/Menu/MenuItemOptionType.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum MenuItemOptionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case boolean(price: Int)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case quantity(price: Int)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case multipleChoice([(name: String, price: Int)])"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case multipleResponse([(name: String, price: Int)])"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuItemOptionType: Codable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private enum CodingKeys: CodingKey {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case choices"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case prices"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case metatype"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    enum MetaType: Int, Codable, CaseIterable {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case boolean"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case quantity"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case multipleChoice"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case multipleResponse"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        init(of type: MenuItemOptionType) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            switch type {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .boolean: self \u003d .boolean"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .quantity: self \u003d .quantity"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .multipleChoice: self \u003d .multipleChoice"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .multipleResponse: self \u003d .multipleResponse"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        var isPriceNeeded: Bool {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            switch self {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .boolean, .quantity: return true"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .multipleChoice, .multipleResponse: return false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let metatype \u003d try container.decode(MetaType.self, forKey: .metatype)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch metatype {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .boolean:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let price \u003d try container.decode(Int.self, forKey: .prices)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self \u003d .boolean(price: price)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .quantity:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let price \u003d try container.decode(Int.self, forKey: .prices)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self \u003d .quantity(price: price)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleChoice:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let choices \u003d try container.decode([String].self, forKey: .choices)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let prices \u003d try container.decode([Int].self, forKey: .prices)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let multipleChoice \u003d zip(choices, prices).map { (name: $0.0, price: $0.1) }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            self \u003d .multipleChoice(multipleChoice)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleResponse:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let choices \u003d try container.decode([String].self, forKey: .choices)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let prices \u003d try container.decode([Int].self, forKey: .prices)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let multipleResponse \u003d zip(choices, prices).map { (name: $0.0, price: $0.1) }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self \u003d .multipleResponse(multipleResponse)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try container.encode(MetaType(of: self), forKey: .metatype)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .boolean(let price):"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try container.encode(price, forKey: .prices)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .quantity(let price):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try container.encode(price, forKey: .prices)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleChoice(let rawChoices), .multipleResponse(let rawChoices):"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let choices \u003d rawChoices.map { $0.name }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let prices \u003d rawChoices.map { $0.price }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try container.encode(choices, forKey: .choices)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try container.encode(prices, forKey: .prices)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 62,
      "namjjd": 1,
      "E-Liang Tan": 15
    }
  },
  {
    "path": "NAME/Models/Menu/SetMenuItem.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class SetMenuItem: Object, MenuEditable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var name: String \u003d \"\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var details: String \u003d \"\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var imageURL: String?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var isHidden: Bool \u003d false"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var quantity: Int \u003d 0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Relationships"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var menu: Menu?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let categories \u003d List\u003cMenuCategory\u003e()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let discounts \u003d List\u003cDiscount\u003e()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var price: Int {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return items.reduce(0) { $0 + $1.price }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    let items \u003d List\u003cIndividualMenuItem\u003e()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let options \u003d List\u003cMenuItemOption\u003e()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    convenience init(name: String,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     imageURL: String? \u003d nil,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     isHidden: Bool \u003d false,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     quantity: Int \u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.imageURL \u003d imageURL"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.isHidden \u003d isHidden"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 14,
      "namjjd": 26,
      "E-Liang Tan": 1
    }
  },
  {
    "path": "NAME/Models/ModelError.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  ModelError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum ModelError: Error {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case deserialization"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 13
    }
  },
  {
    "path": "NAME/Models/ModelHelper.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  ModelHelper.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum ModelHelper {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static func encodeAsJson\u003cT\u003e(_ value: T) -\u003e Data where T: Encodable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return try JSONEncoder().encode(value)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            fatalError(\"Unable to encode value of type \\(String(describing: T.self))\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static func decodeAsJson\u003cT\u003e(_ type: T.Type, from data: Data) -\u003e T where T: Decodable {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return try JSONDecoder().decode(type, from: data)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            fatalError(\"Unable to decode value of type \\(String(describing: T.self))\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 27
    }
  },
  {
    "path": "NAME/Models/Order/Order.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderProtocol {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var orderItems: [OrderItemProtocol] { get }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var establishmentDiscounts: [Discount]? { get }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var establishmentSurcharges: [Surcharge]? { get }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namjjd"
        },
        "content": "class Order: Object {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var queueNumber: Int \u003d 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var orderReceivedTimeStamp: Date? {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return orderItems"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            .flatMap { $0.orderHistories.filter { $0.state \u003d\u003d .received } }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            .map { $0.timestamp }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            .min()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var isOrderReady: Bool {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return readyStateOrderItems.count \u003d\u003d orderItems.count"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var isOrderCompleted: Bool {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return completedStateOrderItems.count \u003d\u003d orderItems.count"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    /// All Order Items that are currently at recieved state of lifecycle."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var receivedStateOrderItems: [OrderItem] {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return orderItems.filter { $0.orderHistories.last?.state \u003d\u003d .received }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    /// All Order Items that are currently at ready state of lifecycle."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var readyStateOrderItems: [OrderItem] {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return orderItems.filter { $0.orderHistories.last?.state \u003d\u003d .ready }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    /// All Order Items that are currently at completed state of lifecycle."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var completedStateOrderItems: [OrderItem] {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return orderItems.filter { $0.orderHistories.last?.state \u003d\u003d .completed }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Relationship"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var customer: Customer?"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let orderItems \u003d LinkingObjects(fromType: OrderItem.self, property: \"order\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var establishmentDiscounts: [Discount]? {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let discounts \u003d establishment?.discounts else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return Array(discounts)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var establishmentSurcharges: [Surcharge]? {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let surcharges \u003d establishment?.surcharges else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return Array(surcharges)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var establishment: Establishment? {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return orderItems.first?.menuItem?.menu?.stall?.establishment"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    convenience init(queueNumber: Int, customer: Customer) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.customer \u003d customer"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.queueNumber \u003d queueNumber"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 10,
      "namjjd": 16,
      "Derek": 24,
      "Caryn Heng": 30
    }
  },
  {
    "path": "NAME/Models/Order/OrderHistory.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namjjd"
        },
        "content": "class OrderHistory: Object {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic private var _state: Int \u003d 0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var timestamp \u003d Date()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var state: OrderLifecycle {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            guard let state \u003d OrderLifecycle(rawValue: _state) else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                fatalError(\"Inconsistent internal representation of state\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namjjd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return state"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _state \u003d newValue.rawValue"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    convenience init(state: OrderLifecycle, timestamp: Date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.state \u003d state"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.timestamp \u003d timestamp"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 21,
      "namjjd": 11
    }
  },
  {
    "path": "NAME/Models/Order/OrderItem.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderItemProtocol {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var originalPrice: Int { get }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var discounts: [Discount] { get }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "class OrderItem: Object, OrderItemProtocol {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    enum DiningOption: Int, CaseIterable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case eatin \u003d 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case takeaway"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var quantity: Int \u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var comment: String \u003d \"\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc private dynamic var _diningOption: Int \u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var name: String {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return menuItem?.name ?? \"\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var originalPrice: Int {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let additionalAmounts \u003d addons.reduce(0) { total, addon in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "            total + addon.originalPrice"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return (menuItem?.price ?? 0 + additionalAmounts) * quantity"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var diningOption: DiningOption {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            guard let diningOption \u003d DiningOption(rawValue: _diningOption) else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                fatalError(\"Inconsistent internal representation of dining option\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return diningOption"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _diningOption \u003d newValue.rawValue"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Relationships"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var order: Order?"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var menuItem: IndividualMenuItem?"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let addons \u003d List\u003cOrderItem\u003e()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let orderHistories \u003d List\u003cOrderHistory\u003e()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let options \u003d List\u003cOrderItemOption\u003e()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var discounts: [Discount] {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let itemDiscounts \u003d menuItem?.discounts else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return []"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return Array(itemDiscounts)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    convenience init(order: Order?,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     menuItem: IndividualMenuItem,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     quantity: Int \u003d 1,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     comment: String \u003d \"\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     diningOption: DiningOption) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.order \u003d order"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.menuItem \u003d menuItem"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.comment \u003d comment"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.diningOption \u003d diningOption"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 39,
      "namjjd": 13,
      "Derek": 27
    }
  },
  {
    "path": "NAME/Models/Order/OrderItemOption.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namjjd"
        },
        "content": "class OrderItemOption: Object {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var menuItemOption: MenuItemOption?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic private var valueEncoded \u003d Data()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var _value: OrderItemOptionValue?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var value: OrderItemOptionValue {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            if let value \u003d _value {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return value"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namjjd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let value \u003d ModelHelper.decodeAsJson(OrderItemOptionValue.self, from: valueEncoded)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _value \u003d value"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return value"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            valueEncoded \u003d ModelHelper.encodeAsJson(newValue)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _value \u003d newValue"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            checkRep()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    convenience init(menuItemOption: MenuItemOption, value: OrderItemOptionValue) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.menuItemOption \u003d menuItemOption"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.value \u003d value"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        checkRep()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func checkRep() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let menuItemOption \u003d menuItemOption else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch (menuItemOption.options, value) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case (.quantity, .quantity):"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            break"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case (.boolean, .boolean):"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            break"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case let (.multipleChoice(choices), .multipleChoice(choiceIndex)):"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            assert(choiceIndex \u003c choices.count, \"choiceIndex is out of bounds\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case let (.multipleResponse(choices), .multipleResponse(choiceIndices)):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            assert(choiceIndices.allSatisfy { $0 \u003c choices.count }, \"One of multipleResponse\u0027s choice is out of bounds\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            assertionFailure(\"options and defaultValue does not match\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 45,
      "namjjd": 13
    }
  },
  {
    "path": "NAME/Models/Order/OrderItemOptionValue.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  OrderItemOptionValue.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum OrderItemOptionValue {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case boolean(Bool)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case quantity(Int)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    /// The index of the choice"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case multipleChoice(Int)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case multipleResponse(Set\u003cInt\u003e)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension OrderItemOptionValue: Codable {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private enum CodingKeys: CodingKey {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case choice"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case metatype"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private enum MetaType: Int, Codable {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case boolean"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case quantity"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case multipleChoice"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case multipleResponse"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        init(of value: OrderItemOptionValue) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            switch value {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .boolean: self \u003d .boolean"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .quantity: self \u003d .quantity"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .multipleChoice: self \u003d .multipleChoice"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .multipleResponse: self \u003d .multipleResponse"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let metatype \u003d try container.decode(MetaType.self, forKey: .metatype)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch metatype {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .boolean:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let boolean \u003d try container.decode(Bool.self, forKey: .choice)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self \u003d .boolean(boolean)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .quantity:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let quantity \u003d try container.decode(Int.self, forKey: .choice)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self \u003d .quantity(quantity)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleChoice:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let choice \u003d try container.decode(Int.self, forKey: .choice)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self \u003d .multipleChoice(choice)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleResponse:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let choices \u003d try container.decode(Set\u003cInt\u003e.self, forKey: .choice)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self \u003d .multipleResponse(choices)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try container.encode(MetaType(of: self), forKey: .metatype)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case let .boolean(boolean):"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try container.encode(boolean, forKey: .choice)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case let .quantity(quantity):"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try container.encode(quantity, forKey: .choice)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case let .multipleChoice(choices):"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try container.encode(choices, forKey: .choice)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case let .multipleResponse(choices):"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try container.encode(choices, forKey: .choice)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 74
    }
  },
  {
    "path": "NAME/Models/Order/OrderLifecycle.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "enum OrderLifecycle: Int {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    case received \u003d 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    case ready"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    case completed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namjjd": 5
    }
  },
  {
    "path": "NAME/Models/PriceModifiables/Discount.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class Discount: Object, PriceModifier {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var name \u003d \"\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "    @objc dynamic private var priceModificationEncoded \u003d Data()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var _priceModification: PriceModification?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var priceModification: PriceModification {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "            if let priceModifier \u003d _priceModification {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "                return priceModifier"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let priceModification \u003d ModelHelper.decodeAsJson(PriceModification.self,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                             from: priceModificationEncoded)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "            _priceModification \u003d priceModification"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return priceModification"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "            priceModificationEncoded \u003d ModelHelper.encodeAsJson(newValue)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "            _priceModification \u003d newValue"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var stackable: Bool \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic private var timeConditionEncoded \u003d Data()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var _timeCondition: TimeCondition?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var timeCondition: TimeCondition {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            if let timeCondition \u003d _timeCondition {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return timeCondition"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let timeCondition \u003d ModelHelper.decodeAsJson(TimeCondition.self, from: timeConditionEncoded)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _timeCondition \u003d timeCondition"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return timeCondition"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            timeConditionEncoded \u003d ModelHelper.encodeAsJson(newValue)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            _timeCondition \u003d newValue"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    convenience init(name: String,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     priceModification: PriceModification,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     stackable: Bool,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     timeCondition: TimeCondition) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.priceModification \u003d priceModification"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.stackable \u003d stackable"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.timeCondition \u003d timeCondition"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func toAbsolute(fromAmount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch priceModification {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case .absolute(amount: let amount):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return Rounder.round(amount)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case .multiplier(factor: let factor):"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return Rounder.round(Double(fromAmount) * factor)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 31,
      "namjjd": 15,
      "Derek": 27
    }
  },
  {
    "path": "NAME/Models/PriceModifiables/PriceModification.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum PriceModification {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case absolute(amount: Int)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case multiplier(factor: Double)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "extension PriceModification: Codable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private enum CodingKeys: CodingKey {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case absolute"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case multiplier"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "    init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "        if let amount \u003d try? container.decode(Int.self, forKey: .absolute) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self \u003d .absolute(amount: amount)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        } else if let factor \u003d try? container.decode(Double.self, forKey: .multiplier) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self \u003d .multiplier(factor: factor)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "            throw ModelError.deserialization"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case let .absolute(amount: amount):"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "            try container.encode(amount, forKey: .absolute)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case let .multiplier(factor: factor):"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "            try container.encode(factor, forKey: .multiplier)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 4,
      "Derek": 29
    }
  },
  {
    "path": "NAME/Models/PriceModifiables/PriceModifier.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol PriceModifier {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var name: String { get set }"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var priceModification: PriceModification { get set }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func toAbsolute(fromAmount: Int) -\u003e Int"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 3,
      "namjjd": 1,
      "Derek": 1
    }
  },
  {
    "path": "NAME/Models/PriceModifiables/Rounder.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "class Rounder: Object {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    var name: String \u003d \"\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var priceModification: PriceModification \u003d .absolute(amount: 0)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private static let roundingResolution: Int \u003d 50"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func round(_ amount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return round(Double(amount))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func round(_ amount: Double) -\u003e Int {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard amount \u003e 0 else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let roundedValue \u003d (amount / Double(roundingResolution)).rounded()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return roundingResolution * Int(roundedValue)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 9,
      "namjjd": 6,
      "Derek": 16
    }
  },
  {
    "path": "NAME/Models/PriceModifiables/Surcharge.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class Surcharge: Object, PriceModifier {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    var name: String \u003d \"\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var priceModification: PriceModification \u003d .multiplier(factor: 1)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    convenience init(name: String, priceModification: PriceModification) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.priceModification \u003d priceModification"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func toAbsolute(fromAmount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch priceModification {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case .absolute(amount: let amount):"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return amount"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "        case .multiplier(factor: let factor):"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return Int(Double(fromAmount) * factor)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 12,
      "namjjd": 8,
      "Derek": 10
    }
  },
  {
    "path": "NAME/Models/Priceable.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "protocol Priceable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    /// The price in 0.1 cents (price / 1000)."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    /// This is to prevent floating point error"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var price: Int { get }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 4,
      "namjjd": 2
    }
  },
  {
    "path": "NAME/Models/Stall.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namjjd"
        },
        "content": "class Stall: Object {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Properties"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var id: String \u003d UUID().uuidString"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var name \u003d \"\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var imageURL: String?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var location: String?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var details: String?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Relationships"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    @objc dynamic var menu: Menu?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc dynamic var establishment: Establishment?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    let discounts \u003d List\u003cDiscount\u003e()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    // MARK: - Initialisers"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    convenience init(name: String,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     imageURL: String? \u003d nil,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     location: String? \u003d nil,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                     details: String? \u003d nil,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                     menu: Menu? \u003d nil) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.init()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.imageURL \u003d imageURL"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.location \u003d location"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.details \u003d details"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        self.menu \u003d menu"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override static func primaryKey() -\u003e String? {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return \"id\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 9,
      "namjjd": 31
    }
  },
  {
    "path": "NAME/Models/TimeCondition/TimeCondition.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum TimeCondition {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    case dayRange(DateInterval)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension TimeCondition: Codable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private enum CodingKeys: CodingKey {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case dayRange"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if let dayRange \u003d try? container.decode(DateInterval.self, forKey: .dayRange) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self \u003d .dayRange(dayRange)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            throw ModelError.deserialization"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case let .dayRange(dayRange):"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try container.encode(dayRange, forKey: .dayRange)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 28
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/AdminSettings/Configurator/AdminSettingsConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AdminSettingsConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class AdminSettingsConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let shared: AdminSettingsConfigurator \u003d AdminSettingsConfigurator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func configure(id: String,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   type: SettingsType,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   viewController: AdminSettingsViewController,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let router \u003d AdminSettingsRouter(viewController: viewController)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let presenter \u003d AdminSettingsPresenter(output: viewController)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let interactor \u003d AdminSettingsInteractor(id: id,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                 type: type,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                 output: presenter,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                 injector: injector)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 30
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/AdminSettings/Interactor/AdminSettingsInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AdminSettingsInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AdminSettingsInteractorInput: AdminSettingsViewControllerOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AdminSettingsInteractorOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStallSettingsForStall(name: String?, details: String?)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStallSettingsForEstablishment(name: String?, location: String?)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentEstablishmentSettings(name: String?, location: String?, details: String?)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class AdminSettingsInteractor {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let authManager: AuthManager"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let output: AdminSettingsInteractorOutput"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let worker: AdminSettingsWorker"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let stallOrEstablishmentId: String"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let settingsType: SettingsType"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(id: String,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         type: SettingsType,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         output: AdminSettingsInteractorOutput,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         injector: DependencyInjector,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         worker: AdminSettingsWorker \u003d AdminSettingsWorker()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stallOrEstablishmentId \u003d id"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        settingsType \u003d type"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - AdminSettingsInteractorInput"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension AdminSettingsInteractor: AdminSettingsViewControllerOutput {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func reload() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let userAccountType \u003d deps.authManager.getCurrentStallOrEstablishment()?.type else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        switch (userAccountType, settingsType) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case (.stall, .stall):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            presentStallSettingsForStall()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case (.establishment, .stall):"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            presentStallSettingsForEstablishment()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case (.establishment, .establishment):"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            presentEstablishmentSettings()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case (.stall, .establishment):"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Invalid combination of account type and settings type.\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func presentStallSettingsForStall() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let stall \u003d deps.storageManager.getStall(id: stallOrEstablishmentId) else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            // TODO: Stall not found error"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.presentStallSettingsForStall(name: stall.name, details: stall.details)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func presentStallSettingsForEstablishment() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let stall \u003d deps.storageManager.getStall(id: stallOrEstablishmentId) else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            // TODO: Stall not found error"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.presentStallSettingsForEstablishment(name: stall.name, location: stall.location)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func presentEstablishmentSettings() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let establishment \u003d deps.storageManager.getEstablishment(id: stallOrEstablishmentId) else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            // TODO: Establishment not found error"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.presentEstablishmentSettings(name: establishment.name,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                            location: establishment.location,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                            details: establishment.details)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func update(name: String?, location: String?, details: String?) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            try deps.storageManager.writeTransaction { manager in"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                switch settingsType {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                case .stall:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                    manager.updateStall(id: stallOrEstablishmentId,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                        name: name,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                        location: location,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                        details: details)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                case .establishment:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                    manager.updateEstablishment(id: stallOrEstablishmentId,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                name: name,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                location: location,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                details: details)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            // TODO: Handle error"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            print(\"Update error\")"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Dependency injection"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate func dependencies() -\u003e AdminSettingsInteractor.Dependencies {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return AdminSettingsInteractor.Dependencies(storageManager: storageManager, authManager: authManager)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 121
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/AdminSettings/Presenter/AdminSettingsPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AdminSettingsPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AdminSettingsPresenterInput: AdminSettingsInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AdminSettingsPresenterOutput: class {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func display(viewModel: AdminSettingsViewModel)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "typealias SettingsFieldViewModel \u003d AdminSettingsViewModel.SettingsFieldViewModel"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class AdminSettingsPresenter {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private(set) unowned var output: AdminSettingsPresenterOutput"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: AdminSettingsPresenterOutput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - AdminSettingsPresenterInput"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension AdminSettingsPresenter: AdminSettingsPresenterInput {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStallSettingsForStall(name: String?, details: String?) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let fields \u003d [SettingsFieldViewModel(title: AdminSettingsConstants.nameTitle,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             placeholder: name ?? AdminSettingsConstants.namePlaceholder,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             type: .name),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      SettingsFieldViewModel(title: AdminSettingsConstants.detailsTitle,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             placeholder: details ?? AdminSettingsConstants.detailsPlaceholder,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             type: .details)]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewModel \u003d AdminSettingsViewModel(header: AdminSettingsConstants.stallSettingsHeaderTitle,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                               fields: fields)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.display(viewModel: viewModel)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStallSettingsForEstablishment(name: String?, location: String?) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let fields \u003d [SettingsFieldViewModel(title: AdminSettingsConstants.nameTitle,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             placeholder: name ?? AdminSettingsConstants.namePlaceholder,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             type: .name),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      SettingsFieldViewModel(title: AdminSettingsConstants.locationTitle,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             placeholder: location ?? AdminSettingsConstants.locationPlaceholder,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             type: .location)]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewModel \u003d AdminSettingsViewModel(header: AdminSettingsConstants.stallSettingsHeaderTitle,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                               fields: fields)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.display(viewModel: viewModel)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentEstablishmentSettings(name: String?, location: String?, details: String?) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let fields \u003d [SettingsFieldViewModel(title: AdminSettingsConstants.nameTitle,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             placeholder: name ?? AdminSettingsConstants.namePlaceholder,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             type: .name),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      SettingsFieldViewModel(title: AdminSettingsConstants.locationTitle,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             placeholder: location ?? AdminSettingsConstants.locationPlaceholder,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             type: .location),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      SettingsFieldViewModel(title: AdminSettingsConstants.detailsTitle,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             placeholder: details ?? AdminSettingsConstants.detailsPlaceholder,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             type: .details)]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewModel \u003d AdminSettingsViewModel(header: AdminSettingsConstants.estSettingsHeaderTitle,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                               fields: fields)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.display(viewModel: viewModel)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 73
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/AdminSettings/Router/AdminSettingsRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AdminSettingsRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AdminSettingsRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewController: AdminSettingsViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class AdminSettingsRouter {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var viewController: AdminSettingsViewController?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(viewController: AdminSettingsViewController?) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - AdminSettingsRouterProtocol"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension AdminSettingsRouter: AdminSettingsRouterProtocol {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController?.dismiss(animated: true)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 32
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/AdminSettings/View/AdminSettingsCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AdminSettingsCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AdminSettingsCellDelegate: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func newInput(_ input: String?, for fieldType: AdminSettingsViewModel.FieldType)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class AdminSettingsCell: UITableViewCell {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var delegate: AdminSettingsCellDelegate?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var type: AdminSettingsViewModel.FieldType?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var titleLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d .preferredFont(forTextStyle: .headline)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textAlignment \u003d .right"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var textField: UITextField \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let textField \u003d UITextField()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        textField.clearButtonMode \u003d .whileEditing"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        textField.addTarget(self, action: #selector(textFieldDidChange(_:)), for: .editingChanged)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return textField"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(style: style, reuseIdentifier: reuseIdentifier)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(titleLabel)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(textField)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fatalError(\"Should not be called without Storyboard.\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func set(title: String, fieldPlaceholer: String, type: AdminSettingsViewModel.FieldType) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.type \u003d type"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        titleLabel.text \u003d title"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        textField.text \u003d fieldPlaceholer"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        titleLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalTo(safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .multipliedBy(AdminSettingsConstants.cellSplitFraction)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .offset(-2 * ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.centerY.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        textField.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalTo(safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .multipliedBy(1 - AdminSettingsConstants.cellSplitFraction)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .offset(-2 * ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.centerY.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func textFieldDidChange(_ textField: UITextField) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let type \u003d type else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Field type not set.\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.newInput(textField.text, for: type)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 79
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/AdminSettings/View/AdminSettingsFooterView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AdminSettingsFooterView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AdminSettingsFooterViewDelegate: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func saveButtonDidTap()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func cancelButtonDidTap()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class AdminSettingsFooterView: UIView {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var delegate: AdminSettingsFooterViewDelegate?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var saveButton: UIButton \u003d {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleSavePress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitle(AdminSettingsConstants.saveButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.layer.cornerRadius \u003d CornerRadiusConstants.standardRadius"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.backgroundColor \u003d UIColor.Custom.purple"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var cancelButton: UIButton \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleCancelPress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitle(AdminSettingsConstants.cancelButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.layer.cornerRadius \u003d CornerRadiusConstants.standardRadius"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.backgroundColor \u003d UIColor.Custom.lightGray"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(frame: CGRect, isCancelShown: Bool) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(saveButton)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(cancelButton)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        cancelButton.isHidden \u003d !isCancelShown"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        saveButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(ButtonConstants.mediumButtonHeight)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalTo(AdminSettingsConstants.saveButtonWidth)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalTo(safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        cancelButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(ButtonConstants.mediumButtonHeight)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalTo(AdminSettingsConstants.saveButtonWidth)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalTo(saveButton.snp.left).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleSavePress(sender: Any) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.saveButtonDidTap()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleCancelPress(sender: Any) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.cancelButtonDidTap()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 76
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/AdminSettings/View/AdminSettingsViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AdminSettingsViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AdminSettingsViewControllerInput: AdminSettingsPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AdminSettingsViewControllerOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func reload()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func update(name: String?, location: String?, details: String?)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class AdminSettingsViewController: UITableViewController {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var tableViewDataSource: AdminSettingsDataSource? {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            tableViewDataSource?.delegate \u003d self"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            tableView.dataSource \u003d tableViewDataSource"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            tableView.reloadData()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var output: AdminSettingsViewControllerOutput?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var router: AdminSettingsRouterProtocol?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let footerView: AdminSettingsFooterView"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var updatedName: String?"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var updatedLocation: String?"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var updatedDetails: String?"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(id: String,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         type: SettingsType,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         isDismissibleView: Bool,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         configurator: AdminSettingsConfigurator \u003d AdminSettingsConfigurator.shared) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // Set frame of footer view with non-zero height so that buttons can received taps."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        footerView \u003d AdminSettingsFooterView(frame: CGRect(x: 0, y: 0, width: 0,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                          height: ButtonConstants.mediumButtonHeight * 2),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             isCancelShown: isDismissibleView)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure(id: id, type: type, configurator: configurator)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fatalError(\"This should not be called without Storyboard.\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configure(id: String,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           type: SettingsType,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           configurator: AdminSettingsConfigurator \u003d AdminSettingsConfigurator.shared) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configurator.configure(id: id, type: type, viewController: self)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        footerView.delegate \u003d self"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setupTableView()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.reload()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setupTableView() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableView.backgroundColor \u003d UIColor.Custom.paleGray"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableView.delegate \u003d self"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableView.register(AdminSettingsCell.self,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           forCellReuseIdentifier: ReuseIdentifiers.settingsCellIdentifier)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableView.tableFooterView \u003d footerView"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "private class AdminSettingsDataSource: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let header: String"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let cellViewModels: [AdminSettingsViewModel.SettingsFieldViewModel]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var delegate: AdminSettingsCellDelegate?"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(viewModel: AdminSettingsViewModel) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        cellViewModels \u003d viewModel.fields"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        header \u003d viewModel.header"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return cellViewModels.count"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let cell \u003d tableView.dequeueReusableCell(withIdentifier: ReuseIdentifiers.settingsCellIdentifier,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                 for: indexPath)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let fieldCell \u003d cell as? AdminSettingsCell else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Invalid admin settings table view cell.\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewModel \u003d cellViewModels[indexPath.row]"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fieldCell.set(title: viewModel.title, fieldPlaceholer: viewModel.placeholder, type: viewModel.type)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fieldCell.delegate \u003d delegate"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fieldCell.selectionStyle \u003d .none"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -\u003e CGFloat {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return UITableView.automaticDimension"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return section \u003d\u003d 0 ? header : nil"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - AdminSettingsCellDelegate"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension AdminSettingsViewController: AdminSettingsCellDelegate {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func newInput(_ input: String?, for fieldType: AdminSettingsViewModel.FieldType) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        switch fieldType {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .name:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            updatedName \u003d input"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .location:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            updatedLocation \u003d input"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .details:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            updatedDetails \u003d input"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - AdminSettingsFooterViewDelegate"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension AdminSettingsViewController: AdminSettingsFooterViewDelegate {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func saveButtonDidTap() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.update(name: updatedName, location: updatedLocation, details: updatedDetails)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func cancelButtonDidTap() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateBack()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - AdminSettingsPresenterOutput"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension AdminSettingsViewController: AdminSettingsViewControllerInput {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // TODO: Combine all to one display func"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func display(viewModel: AdminSettingsViewModel) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableViewDataSource \u003d AdminSettingsDataSource(viewModel: viewModel)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 152
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/AdminSettings/ViewModel/AdminSettingsViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AdminSettingsViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum SettingsType {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    case stall"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    case establishment"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "struct AdminSettingsViewModel {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    enum FieldType {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case location"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case details"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    struct SettingsFieldViewModel {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let title: String"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let placeholder: String"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let type: FieldType"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let header: String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let fields: [SettingsFieldViewModel]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 31
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/AdminSettings/Worker/AdminSettingsWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AdminSettingsWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class AdminSettingsWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 12
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Login/Configurator/LoginConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  LoginConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class LoginConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let shared: LoginConfigurator \u003d LoginConfigurator()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func configure(viewController: LoginViewController,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let router \u003d LoginRouter(viewController: viewController)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let presenter \u003d LoginPresenter(output: viewController)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let interactor \u003d LoginInteractor(output: presenter, injector: injector)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 29
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Login/Interactor/LoginInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  LoginInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol LoginInteractorInput: LoginViewControllerOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol LoginInteractorOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func presentDefaultScreen()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentLoginFailure()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStall(withId id: String)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentEstablishment(withId id: String)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class LoginInteractor {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let authManager: AuthManager"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let output: LoginInteractorOutput"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let worker: LoginWorker"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: LoginInteractorOutput, injector: DependencyInjector, worker: LoginWorker \u003d LoginWorker()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - LoginInteractorInput"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension LoginInteractor: LoginViewControllerOutput {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleLogin(username: String, password: String) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard deps.authManager.login(withUsername: username, password: password) !\u003d nil else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            output.presentLoginFailure()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let (id, accountType) \u003d deps.authManager.getCurrentStallOrEstablishment() else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Access control was not set.\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        switch accountType {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .stall:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            output.presentStall(withId: id)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .establishment:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            output.presentEstablishment(withId: id)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func initializeScreen() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.presentDefaultScreen()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Dependency injection"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate func dependencies() -\u003e LoginInteractor.Dependencies {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return LoginInteractor.Dependencies(storageManager: storageManager,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                            authManager: authManager)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 3,
      "Caryn Heng": 70
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Login/Presenter/LoginPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  LoginPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol LoginPresenterInput: LoginInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol LoginPresenterOutput: class {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayLoginContainer(viewModel: LoginViewModel)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayLoginError()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayStall(withId id: String)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayEstablishment(withId id: String)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class LoginPresenter {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private(set) unowned var output: LoginPresenterOutput"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: LoginPresenterOutput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - LoginPresenterInput"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension LoginPresenter: LoginPresenterInput {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func presentDefaultScreen() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewModel \u003d LoginViewModel()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayLoginContainer(viewModel: viewModel)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentLoginFailure() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayLoginError()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStall(withId id: String) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayStall(withId: id)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentEstablishment(withId id: String) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayEstablishment(withId: id)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 1,
      "Caryn Heng": 51
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Login/Router/LoginRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  LoginRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol LoginRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewController: LoginViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToStallView(stallId: String)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToEstablishmentView(estId: String)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class LoginRouter {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var viewController: LoginViewController?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(viewController: LoginViewController?) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - LoginRouterProtocol"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension LoginRouter: LoginRouterProtocol {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController?.dismiss(animated: true)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToStallView(stallId: String) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stallRootVC \u003d StallRootViewController(stallId: stallId)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController?.present(stallRootVC, animated: true)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToEstablishmentView(estId: String) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let establishmentRootVC \u003d EstablishmentRootViewController(estId: estId)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController?.present(establishmentRootVC, animated: true)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 41,
      "E-Liang Tan": 2
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Login/View/LoginContainerView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  LoginContainerView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol LoginContainerViewDelegate: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapCancel()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapLogin(username: String, password: String)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class LoginContainerView: UIView {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let usernameTextField \u003d UITextField()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let passwordTextField \u003d UITextField()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let cancelButton: UIButton \u003d {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleCancelPress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let loginButton: UIButton \u003d {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleLoginPress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var delegate: LoginContainerViewDelegate?"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewModel: LoginViewModel? {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            cancelButton.setTitle(viewModel?.cancelButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            loginButton.setTitle(viewModel?.loginButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            usernameTextField.placeholder \u003d viewModel?.usernamePlaceholder"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            passwordTextField.placeholder \u003d viewModel?.passwordPlaceholder"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setUpTextFields()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setUpButtons()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setUpTextFields() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(usernameTextField)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(passwordTextField)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        usernameTextField.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalToSuperview().offset(LoginConstants.textFieldMargin)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview().offset(LoginConstants.textFieldMargin)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview().offset(-LoginConstants.textFieldMargin)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(LoginConstants.textFieldHeight)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        passwordTextField.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(usernameTextField.snp.bottom).offset(LoginConstants.textFieldMargin)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalTo(usernameTextField)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalTo(usernameTextField)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(usernameTextField)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        usernameTextField.delegate \u003d self"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        usernameTextField.borderStyle \u003d .none"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        usernameTextField.backgroundColor \u003d LoginConstants.textFieldBackgroundColor"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        usernameTextField.returnKeyType \u003d .next"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        usernameTextField.autocapitalizationType \u003d .none"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        usernameTextField.returnKeyType \u003d .next"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        passwordTextField.delegate \u003d self"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        passwordTextField.borderStyle \u003d .none"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        passwordTextField.backgroundColor \u003d LoginConstants.textFieldBackgroundColor"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        passwordTextField.autocapitalizationType \u003d .none"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        passwordTextField.returnKeyType \u003d .done"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        passwordTextField.isSecureTextEntry \u003d true"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setUpButtons() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(cancelButton)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(loginButton)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        cancelButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview().dividedBy(2)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(passwordTextField.snp.bottom).offset(LoginConstants.textFieldMargin)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loginButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview().dividedBy(2)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(passwordTextField.snp.bottom).offset(LoginConstants.textFieldMargin)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func focusInputField() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        usernameTextField.becomeFirstResponder()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func handleCancelPress(sender: Any) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.didTapCancel()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func handleLoginPress(sender: Any) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.didTapLogin(username: usernameTextField.text ?? \"\","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                              password: passwordTextField.text ?? \"\")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - UITextFieldDelegate"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension LoginContainerView: UITextFieldDelegate {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func textFieldShouldReturn(_ textField: UITextField) -\u003e Bool {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if textField \u003d\u003d usernameTextField {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            passwordTextField.becomeFirstResponder()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            passwordTextField.resignFirstResponder()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            handleLoginPress(sender: textField)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 131
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Login/View/LoginViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  LoginViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import SnapKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol LoginViewControllerInput: LoginPresenterOutput {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol LoginViewControllerOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func initializeScreen()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleLogin(username: String, password: String)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class LoginViewController: UIViewController {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var output: LoginViewControllerOutput?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var router: LoginRouterProtocol?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var loginContainerView \u003d LoginContainerView()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(configurator: LoginConfigurator \u003d LoginConfigurator.shared) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure(configurator: configurator)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Configurator"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configure(configurator: LoginConfigurator \u003d LoginConfigurator.shared) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configurator.configure(viewController: self)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        restorationIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        restorationClass \u003d type(of: self)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidAppear(_ animated: Bool) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewDidAppear(animated)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loginContainerView.focusInputField()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.backgroundColor \u003d UIColor.Custom.palePurple"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setUpLoginContainer()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func setUpLoginContainer() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.addSubview(loginContainerView)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loginContainerView.delegate \u003d self"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loginContainerView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.lessThanOrEqualTo(LoginConstants.maxContainerWidth)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.greaterThanOrEqualToSuperview().offset(LoginConstants.minContainerMargin).priority(999)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.greaterThanOrEqualToSuperview().offset(-LoginConstants.minContainerMargin).priority(999)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.center.equalToSuperview()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(LoginConstants.containerHeight)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loginContainerView.backgroundColor \u003d LoginConstants.containerColor"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loginContainerView.layer.cornerRadius \u003d LoginConstants.containerCornerRadius"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loginContainerView.clipsToBounds \u003d true"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.initializeScreen()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - LoginContainerViewDelegate"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension LoginViewController: LoginContainerViewDelegate {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapLogin(username: String, password: String) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.handleLogin(username: username, password: password)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapCancel() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateBack()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - LoginPresenterOutput"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension LoginViewController: LoginViewControllerInput {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayLoginContainer(viewModel: LoginViewModel) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loginContainerView.viewModel \u003d viewModel"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayLoginError() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let errorVC \u003d CustomAlertViewController(withTitle: LoginConstants.loginErrorTitle,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                withMessage: LoginConstants.loginErrorMessage,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                buttonText: nil,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                alertType: .error)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        present(errorVC, animated: true)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayStall(withId id: String) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateToStallView(stallId: id)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayEstablishment(withId id: String) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateToEstablishmentView(estId: id)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension LoginViewController: UIViewControllerRestoration {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static func viewController(withRestorationIdentifierPath path: [String], coder: NSCoder) -\u003e UIViewController? {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return self.init()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 2,
      "Caryn Heng": 115
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Login/ViewModel/LoginViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  LoginViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "struct LoginViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let cancelButtonTitle \u003d LoginConstants.cancelButtonTitle"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let loginButtonTitle \u003d LoginConstants.loginButtonTitle"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let usernamePlaceholder \u003d LoginConstants.usernamePlaceholder"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let passwordPlaceholder \u003d LoginConstants.passwordPlaceholder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 16
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Login/Worker/LoginWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  LoginWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class LoginWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 12
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Splash/Configurator/SplashConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  SplashConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class SplashConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let shared: SplashConfigurator \u003d SplashConfigurator()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func configure(viewController: SplashViewController) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let router \u003d SplashRouter(viewController: viewController)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let presenter \u003d SplashPresenter(output: viewController)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let interactor \u003d SplashInteractor(output: presenter)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 1,
      "E-Liang Tan": 21
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Splash/Interactor/SplashInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  SplashInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol SplashInteractorInput: SplashViewControllerOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol SplashInteractorOutput {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func presentInit()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class SplashInteractor {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let output: SplashInteractorOutput"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(output: SplashInteractorOutput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - SplashInteractorInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension SplashInteractor: SplashViewControllerOutput {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func initializeScreen() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.presentInit()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 32
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Splash/Presenter/SplashPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  SplashPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol SplashPresenterInput: SplashInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol SplashPresenterOutput: class {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func reloadDisplay(viewModel: SplashViewModel)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class SplashPresenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private(set) unowned var output: SplashPresenterOutput"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(output: SplashPresenterOutput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - SplashPresenterInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension SplashPresenter: SplashPresenterInput {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func presentInit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let viewModel \u003d SplashViewModel()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.reloadDisplay(viewModel: viewModel)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 1,
      "E-Liang Tan": 32
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Splash/Router/SplashRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  SplashRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol SplashRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var viewController: SplashViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func navigateToCustomerMenu()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToLoginScreen()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class SplashRouter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var viewController: SplashViewController?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(viewController: SplashViewController?) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - SplashRouterProtocol"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension SplashRouter: SplashRouterProtocol {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func navigateToCustomerMenu() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let customerRootVC \u003d CustomerRootViewController()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        customerRootVC.modalTransitionStyle \u003d .crossDissolve"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController?.present(customerRootVC, animated: true)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToLoginScreen() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let loginVC \u003d LoginViewController()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loginVC.modalTransitionStyle \u003d .flipHorizontal"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController?.present(loginVC, animated: true)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 6,
      "E-Liang Tan": 34
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Splash/View/SplashViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  SplashViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import SnapKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol SplashViewControllerInput: SplashPresenterOutput {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol SplashViewControllerOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func initializeScreen()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class SplashViewController: UIViewController {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var output: SplashViewControllerOutput?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var router: SplashRouterProtocol?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var startButton: UIButton \u003d {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitleColor(UIColor.Custom.darkPurple, for: .normal)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        button.addTarget(self, action: #selector(handleStartPress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var tapRecognizer: UITapGestureRecognizer \u003d {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UITapGestureRecognizer(target: self,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            action: #selector(handleTapToLogin(sender:)))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.numberOfTapsRequired \u003d SplashConstants.numTapsToLoginScreen"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var tapToLoginArea: UIView \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let tapArea \u003d UIView()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        tapArea.backgroundColor \u003d .clear"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return tapArea"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(configurator: SplashConfigurator \u003d SplashConfigurator.shared) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configure(configurator: configurator)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configure()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Configurator"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configure(configurator: SplashConfigurator \u003d SplashConfigurator.shared) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configurator.configure(viewController: self)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        restorationIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        restorationClass \u003d type(of: self)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addGestureRecognizer(tapRecognizer)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.backgroundColor \u003d UIColor.Custom.palePurple"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        view.addSubview(startButton)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.addSubview(tapToLoginArea)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.initializeScreen()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        startButton.snp.makeConstraints { [unowned self] make in"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            make.size.equalTo(self.view)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tapToLoginArea.snp.makeConstraints { [unowned self] make in"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.size.equalTo(CGSize(width: SplashConstants.tapAreaWidth,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                     height: SplashConstants.tapAreaHeight))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(self.view)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalTo(self.view)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: -"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func handleStartPress(sender: UIButton) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        router?.navigateToCustomerMenu()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func handleTapToLogin(sender: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let location \u003d sender.location(in: tapToLoginArea)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard tapToLoginArea.bounds.contains(location) else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateToLoginScreen()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - SplashPresenterOutput"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension SplashViewController: SplashViewControllerInput {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func reloadDisplay(viewModel: SplashViewModel) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        startButton.setTitle(viewModel.startButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - UIViewControllerRestoration"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension SplashViewController: UIViewControllerRestoration {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static func viewController(withRestorationIdentifierPath path: [String], coder: NSCoder) -\u003e UIViewController? {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return UIApplication.shared.keyWindow?.rootViewController"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 23,
      "Caryn Heng": 23,
      "E-Liang Tan": 75
    }
  },
  {
    "path": "NAME/Scenes/AdminCommon/Splash/ViewModel/SplashViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  SplashViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "struct SplashViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let startButtonTitle \u003d \"TOUCH TO BEGIN\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 13
    }
  },
  {
    "path": "NAME/Scenes/AdminEstablishment/EstablishmentRoot/Configurator/EstablishmentRootConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  EstablishmentRootConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class EstablishmentRootConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let shared: EstablishmentRootConfigurator \u003d EstablishmentRootConfigurator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func configure(viewController: EstablishmentRootViewController,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   estId: String,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let router \u003d EstablishmentRootRouter(viewController: viewController)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let presenter \u003d EstablishmentRootPresenter(output: viewController)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let interactor \u003d EstablishmentRootInteractor(output: presenter,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                     estId: estId,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                     injector: injector)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 28
    }
  },
  {
    "path": "NAME/Scenes/AdminEstablishment/EstablishmentRoot/Interactor/EstablishmentRootInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  EstablishmentRootInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol EstablishmentRootInteractorInput: EstablishmentRootViewControllerOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol EstablishmentRootInteractorOutput {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func present(estId: String)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentLogout()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class EstablishmentRootInteractor {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let authManager: AuthManager"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let output: EstablishmentRootInteractorOutput"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let worker: EstablishmentRootWorker"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let estId: String"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: EstablishmentRootInteractorOutput,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         estId: String,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         injector: DependencyInjector \u003d appDefaultInjector,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         worker: EstablishmentRootWorker \u003d EstablishmentRootWorker()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.estId \u003d estId"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - EstablishmentRootInteractorInput"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension EstablishmentRootInteractor: EstablishmentRootInteractorInput {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func loadEstablishment() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.present(estId: estId)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func logout() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        deps.authManager.logout()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.presentLogout()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Dependency Injection"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate func dependencies() -\u003e EstablishmentRootInteractor.Dependencies {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return EstablishmentRootInteractor.Dependencies(authManager: authManager)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 60
    }
  },
  {
    "path": "NAME/Scenes/AdminEstablishment/EstablishmentRoot/Presenter/EstablishmentRootPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  EstablishmentRootPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol EstablishmentRootPresenterInput: EstablishmentRootInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol EstablishmentRootPresenterOutput: class {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func display(estId: String)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayLogout()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class EstablishmentRootPresenter {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private(set) unowned var output: EstablishmentRootPresenterOutput"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: EstablishmentRootPresenterOutput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - EstablishmentRootPresenterInput"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension EstablishmentRootPresenter: EstablishmentRootPresenterInput {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func present(estId: String) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.display(estId: estId)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentLogout() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayLogout()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 1,
      "Caryn Heng": 36
    }
  },
  {
    "path": "NAME/Scenes/AdminEstablishment/EstablishmentRoot/Router/EstablishmentRootRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  EstablishmentRootRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol EstablishmentRootRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewController: EstablishmentRootViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func stallListViewController(estId: String) -\u003e UIViewController"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func establishmentSettingsViewController(estId: String) -\u003e UIViewController"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class EstablishmentRootRouter {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var viewController: EstablishmentRootViewController?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(viewController: EstablishmentRootViewController?) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - EstablishmentRootRouterProtocol"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension EstablishmentRootRouter: EstablishmentRootRouterProtocol {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController?.dismiss(animated: true)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func stallListViewController(estId: String) -\u003e UIViewController {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stallListVC \u003d StallListViewController(estId: estId, isEstablishmentView: true, mediator: nil)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return UINavigationController(rootViewController: stallListVC)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func establishmentSettingsViewController(estId: String) -\u003e UIViewController {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return UINavigationController(rootViewController: AdminSettingsViewController(id: estId,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                                                      type: .establishment,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                                                      isDismissibleView: false))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 44,
      "E-Liang Tan": 1
    }
  },
  {
    "path": "NAME/Scenes/AdminEstablishment/EstablishmentRoot/View/EstablishmentRootViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  EstablishmentRootViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol EstablishmentRootViewControllerInput: EstablishmentRootPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol EstablishmentRootViewControllerOutput {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func loadEstablishment()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func logout()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class EstablishmentRootViewController: UITabBarController {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var output: EstablishmentRootViewControllerOutput?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var router: EstablishmentRootRouterProtocol?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(estId: String,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         configurator: EstablishmentRootConfigurator \u003d EstablishmentRootConfigurator.shared) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure(configurator: configurator, estId: estId)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configure(configurator: EstablishmentRootConfigurator \u003d EstablishmentRootConfigurator.shared,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           estId: String) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configurator.configure(viewController: self, estId: estId)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.loadEstablishment()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setUpTabs(estId: String) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let router \u003d router else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            print(\"Router required to get child VCs\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stallListVC \u003d router.stallListViewController(estId: estId)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        stallListVC.title \u003d EstablishmentRootConstants.stallListTabBarTitle"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let settingsVC \u003d router.establishmentSettingsViewController(estId: estId)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        settingsVC.title \u003d EstablishmentRootConstants.settingsTabBarTitle"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Dummy view controller that should never be displayed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // as we should navigate back when the tab is opened."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let logoutVC \u003d UIViewController()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        logoutVC.title \u003d EstablishmentRootConstants.logoutTabBarTitle"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        setViewControllers([stallListVC, settingsVC, logoutVC], animated: false)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func tabBar(_ tabBar: UITabBar, didSelect item: UITabBarItem) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if item \u003d\u003d tabBar.items?.last {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            output?.logout()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - EstablishmentRootPresenterOutput"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension EstablishmentRootViewController: EstablishmentRootViewControllerInput {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func display(estId: String) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setUpTabs(estId: estId)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayLogout() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateBack()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 59,
      "E-Liang Tan": 22
    }
  },
  {
    "path": "NAME/Scenes/AdminEstablishment/EstablishmentRoot/ViewModel/EstablishmentRootViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  EstablishmentRootViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "struct EstablishmentRootViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 12
    }
  },
  {
    "path": "NAME/Scenes/AdminEstablishment/EstablishmentRoot/Worker/EstablishmentRootWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  EstablishmentRootWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class EstablishmentRootWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 12
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/Configurator/KitchenBacklogConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class KitchenBacklogConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let shared: KitchenBacklogConfigurator \u003d KitchenBacklogConfigurator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func configure(viewController: KitchenBacklogViewController,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let toChildrenMediator \u003d KitchenBacklogIntersceneMediator()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let router \u003d KitchenBacklogRouter(viewController: viewController,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                          mediator: toChildrenMediator)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let presenter \u003d KitchenBacklogPresenter(output: viewController)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let interactor \u003d KitchenBacklogInteractor(output: presenter,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                  injector: injector,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                  toChildrenMediator: toChildrenMediator)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        toChildrenMediator.kitchenBacklogInteractor \u003d interactor"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 30
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/Interactor/KitchenBacklogInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: Interscene interactor IO"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogFromChildrenInput: class {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleAllOrderItemsReady()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogToChildrenOutput: class {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var kitchenBacklogInteractor: KitchenBacklogFromChildrenInput? { get set }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: Intrascene interactor IO"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogInteractorInput: KitchenBacklogViewControllerOutput {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogInteractorOutput {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentOrders(preparedOrders: [Order], unpreparedOrders: [Order])"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class KitchenBacklogInteractor: KitchenBacklogFromChildrenInput {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let output: KitchenBacklogInteractorOutput"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let worker: KitchenBacklogWorker"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let toChildrenMediator: KitchenBacklogIntersceneMediator"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var loadedPreparedOrders: [Order] \u003d []"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var loadedUnpreparedOrders: [Order] \u003d []"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: KitchenBacklogInteractorOutput,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         injector: DependencyInjector,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         toChildrenMediator: KitchenBacklogIntersceneMediator,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         worker: KitchenBacklogWorker \u003d KitchenBacklogWorker()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.toChildrenMediator \u003d toChildrenMediator"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleAllOrderItemsReady() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        refreshOrders()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - KitchenBacklogInteractorInput"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension KitchenBacklogInteractor: KitchenBacklogViewControllerOutput {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func reloadOrders() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // TODO: refreshOrders should be the same as reload orders. But before the network is set up to"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // receive orders, this method will be used to mark all orders as received for now."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let orders \u003d deps.storageManager.allOrders()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            orders.forEach { $0.orderItems"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                    .forEach { $0.orderHistories.append( OrderHistory(state: .received, timestamp: Date()) ) }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        refreshOrders()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func refreshOrders() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let orders \u003d deps.storageManager.allOrders()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loadedPreparedOrders \u003d orders.filter { $0.isOrderReady }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loadedUnpreparedOrders \u003d orders.filter { !$0.isOrderReady \u0026\u0026 !$0.isOrderCompleted }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.presentOrders(preparedOrders: loadedPreparedOrders,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                             unpreparedOrders: loadedUnpreparedOrders)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleOrderCompleted(at index: Int) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let order \u003d loadedPreparedOrders[index]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            order.readyStateOrderItems"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .forEach { $0.orderHistories.append(OrderHistory(state: .completed, timestamp: Date())) }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        refreshOrders()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleOrderReady(at index: Int) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let order \u003d loadedUnpreparedOrders[index]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            order.receivedStateOrderItems"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .forEach { $0.orderHistories.append(OrderHistory(state: .ready, timestamp: Date())) }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        refreshOrders()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Dependency injection"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate func dependencies() -\u003e KitchenBacklogInteractor.Dependencies {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return KitchenBacklogInteractor.Dependencies(storageManager: storageManager)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 105
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/Interactor/KitchenBacklogInteractorMediator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogInteractorMediator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "typealias KitchenBacklogIntersceneMediatorOrderInput \u003d OrderToParentOutput"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "typealias KitchenBacklogIntersceneMediatorOrderOutput \u003d OrderFromParentInput"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "typealias KitchenBacklogIntersceneMediatorKitchenBacklogInput \u003d KitchenBacklogToChildrenOutput"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "typealias KitchenBacklogIntersceneMediatorKitchenBacklogOutput \u003d KitchenBacklogFromChildrenInput"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class KitchenBacklogIntersceneMediator: KitchenBacklogIntersceneMediatorOrderInput,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "KitchenBacklogIntersceneMediatorKitchenBacklogInput {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var orderInteractor: KitchenBacklogIntersceneMediatorOrderOutput?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var kitchenBacklogInteractor: KitchenBacklogIntersceneMediatorKitchenBacklogOutput?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleOrderReady() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        kitchenBacklogInteractor?.handleAllOrderItemsReady()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 23
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/Presenter/KitchenBacklogPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogPresenterInput: KitchenBacklogInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogPresenterOutput: class {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayOrders(viewModel: KitchenBacklogViewModel)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class KitchenBacklogPresenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private(set) unowned var output: KitchenBacklogPresenterOutput"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: KitchenBacklogPresenterOutput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - KitchenBacklogPresenterInput"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension KitchenBacklogPresenter: KitchenBacklogPresenterInput {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentOrders(preparedOrders: [Order], unpreparedOrders: [Order]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewModel \u003d KitchenBacklogViewModel(preparedOrders: makeOrderViewModels(forOrders: preparedOrders),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                unpreparedOrders: makeOrderViewModels(forOrders: unpreparedOrders))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayOrders(viewModel: viewModel)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func makeOrderViewModels(forOrders orders: [Order]) -\u003e [KitchenBacklogViewModel.OrderViewModel] {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return orders.map {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            KitchenBacklogViewModel.OrderViewModel(orderId: $0.id,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                   title: $0.queueNumber.formattedAsQueueNumberTitle(),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                   timeStamp: $0.orderReceivedTimeStamp ?? Date())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 43
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/Router/KitchenBacklogRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewController: KitchenBacklogViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func orderViewController(orderId: String) -\u003e UIViewController"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class KitchenBacklogRouter {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var viewController: KitchenBacklogViewController?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var mediator: KitchenBacklogIntersceneMediator?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(viewController: KitchenBacklogViewController?,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         mediator: KitchenBacklogIntersceneMediator?) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.mediator \u003d mediator"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - KitchenBacklogRouterProtocol"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension KitchenBacklogRouter: KitchenBacklogRouterProtocol {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func orderViewController(orderId: String) -\u003e UIViewController {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return OrderViewController(orderId: orderId, mediator: mediator)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 35
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/View/KitchenBacklogCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogCellDelegate: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapCompleted(forCell cell: UICollectionViewCell)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapAllReady(forCell cell: UICollectionViewCell)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class KitchenBacklogCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var isOrderReady \u003d false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var orderHeaderView \u003d KitchenBacklogCellHeaderView()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var orderView: UIView?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var activeButton: UIButton {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return isOrderReady ? orderCompleteButton : allReadyButton"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var allReadyButton: UIButton \u003d {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleAllReadyPress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitle(KitchenBacklogConstants.orderReadyButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.titleLabel?.font \u003d .preferredFont(forTextStyle: .title3)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.backgroundColor \u003d UIColor.Custom.purple"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.layer.cornerRadius \u003d CornerRadiusConstants.standardRadius"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var orderCompleteButton: UIButton \u003d {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleCompletedPress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitle(KitchenBacklogConstants.orderCompleteButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.titleLabel?.font \u003d .preferredFont(forTextStyle: .title3)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.backgroundColor \u003d UIColor.Custom.green"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.layer.cornerRadius \u003d CornerRadiusConstants.standardRadius"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var timeReceived: Date?"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var delegate: KitchenBacklogCellDelegate?"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        layer.cornerRadius \u003d CornerRadiusConstants.standardRadius"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        backgroundColor \u003d UIColor.Custom.paleGray"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func set(headerTitle: String, isOrderReady: Bool, timeReceived: Date, orderView: UIView?) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderHeaderView.set(title: headerTitle)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.orderView \u003d orderView"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.isOrderReady \u003d isOrderReady"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.timeReceived \u003d timeReceived"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        removeSubviews()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubviews()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func updateTimer() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if !isOrderReady {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            orderHeaderView.set(timer: timeReceived?.formattedAsTimeFromNow() ?? \"\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            orderHeaderView.set(timer: \"\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func addSubviews() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(orderHeaderView)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(activeButton)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let orderView \u003d orderView else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                assertionFailure(\"Order view not set.\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(orderView)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func removeSubviews() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        subviews.forEach { $0.removeFromSuperview() }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderHeaderView.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(self)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalTo(self)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(OrderConstants.headerHeight)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        activeButton.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(ButtonConstants.mediumButtonHeight)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalToSuperview()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderView?.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(orderHeaderView.snp.bottom)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalTo(activeButton.snp.top).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func prepareForReuse() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.prepareForReuse()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderView?.removeFromSuperview()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderView \u003d nil"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func handleAllReadyPress(sender: Any) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.didTapAllReady(forCell: self)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func handleCompletedPress(sender: Any) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.didTapCompleted(forCell: self)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 129
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/View/KitchenBacklogCellHeaderView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogCellHeaderView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 5/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class KitchenBacklogCellHeaderView: UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let titleLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d UIColor.Custom.darkPurple"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d .preferredFont(forTextStyle: .title2)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let timerLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d .black"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d .preferredFont(forTextStyle: .title3)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textAlignment \u003d .right"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var stackView: UIStackView \u003d {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: [titleLabel, timerLabel])"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .horizontal"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .fillEqually"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func set(title: String) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        titleLabel.text \u003d title"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func set(timer: String) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        timerLabel.text \u003d timer"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubviews()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func addSubviews() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(stackView)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalToSuperview()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview().offset(OrderConstants.headerPadding)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview().offset(-OrderConstants.headerPadding)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 65
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/View/KitchenBacklogViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogViewControllerInput: KitchenBacklogPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol KitchenBacklogViewControllerOutput {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func reloadOrders()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleOrderCompleted(at index: Int)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleOrderReady(at index: Int)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class KitchenBacklogViewController: UICollectionViewController {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var output: KitchenBacklogViewControllerOutput?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var router: KitchenBacklogRouterProtocol?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let clockView \u003d KitchenClockView()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var timer: Timer?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var collectionViewDataSource: KitchenBacklogDataSource? {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionViewDataSource?.delegate \u003d self"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionView.dataSource \u003d collectionViewDataSource"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionView.reloadData()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(configurator: KitchenBacklogConfigurator \u003d KitchenBacklogConfigurator.shared) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let layout \u003d UICollectionViewFlowLayout()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        layout.scrollDirection \u003d .horizontal"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(collectionViewLayout: layout)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure(configurator: configurator)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configure(configurator: KitchenBacklogConfigurator \u003d KitchenBacklogConfigurator.shared) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configurator.configure(viewController: self)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        restorationIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        restorationClass \u003d type(of: self)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionView.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setupCollectionView()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.addSubview(clockView)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        getOrders()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewWillAppear(_ animated: Bool) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setupTimer()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidDisappear(_ animated: Bool) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        invalidateTimer()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setupCollectionView() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionView.delegate \u003d self"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionView.bounces \u003d true"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionView.alwaysBounceHorizontal \u003d true"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionView.register(KitchenBacklogCell.self,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                forCellWithReuseIdentifier: ReuseIdentifiers.orderCellIdentifier)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        clockView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.centerX.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalTo(KitchenBacklogConstants.clockWidth)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(KitchenBacklogConstants.clockHeight)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(clockView.snp.bottom)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalToSuperview()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func getOrders() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.reloadOrders()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Timer Helpers"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setupTimer() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        invalidateTimer()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        timer \u003d Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] _ in"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            self.clockView.updateTime()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let visibleCells \u003d self.collectionView.indexPathsForVisibleItems"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .compactMap { self.collectionView.cellForItem(at: $0) as? KitchenBacklogCell }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            self.collectionViewDataSource?.updateCellTimers(for: visibleCells)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let timer \u003d timer else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Timer was not set\")"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // Add timer to common run loop so that it will still fire when scrolling in collection view."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        RunLoop.current.add(timer, forMode: .common)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func invalidateTimer() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        timer?.invalidate()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        timer \u003d nil"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Child View Controller Helpers"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func getNewOrderViewController(orderId: String) -\u003e UIViewController {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let router \u003d router else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return UIViewController()"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewController \u003d router.orderViewController(orderId: orderId)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addChildContentViewController(viewController)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return viewController"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func removeAllChildViewControllers() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        children.forEach { removeChildContentViewController($0) }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func addChildContentViewController(_ childViewController: UIViewController) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addChild(childViewController)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        childViewController.didMove(toParent: self)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func removeChildContentViewController(_ childViewController: UIViewController) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        childViewController.willMove(toParent: nil)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        childViewController.view.removeFromSuperview()"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        childViewController.removeFromParent()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - OrderViewCellDelegate"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension KitchenBacklogViewController: KitchenBacklogCellDelegate {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapCompleted(forCell cell: UICollectionViewCell) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let indexPath \u003d getIndexPath(for: cell)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.handleOrderCompleted(at: indexPath.row)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapAllReady(forCell cell: UICollectionViewCell) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let indexPath \u003d getIndexPath(for: cell)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.handleOrderReady(at: indexPath.row)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func getIndexPath(for cell: UICollectionViewCell) -\u003e IndexPath {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let indexPath \u003d collectionView.indexPath(for: cell) else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Cannot locate index path of order cell.\")"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return IndexPath()"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return indexPath"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - UICollectionViewDataSource"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "private class KitchenBacklogDataSource: NSObject, UICollectionViewDataSource {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private struct Section {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let cellViews: [UIView?]"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let cellViewModel: [KitchenBacklogViewModel.OrderViewModel]"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let sections: [Section]"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var delegate: KitchenBacklogCellDelegate?"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(preparedViews: [UIView?],"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         preparedViewModels: [KitchenBacklogViewModel.OrderViewModel],"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         unpreparedViews: [UIView?],"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         unpreparedViewModels: [KitchenBacklogViewModel.OrderViewModel]) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        sections \u003d [Section(cellViews: preparedViews, cellViewModel: preparedViewModels),"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                    Section(cellViews: unpreparedViews, cellViewModel: unpreparedViewModels)]"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func numberOfSections(in collectionView: UICollectionView) -\u003e Int {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return sections.count"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return sections[section].cellViews.count"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                        cellForItemAt indexPath: IndexPath) -\u003e UICollectionViewCell {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let cell \u003d collectionView.dequeueReusableCell(withReuseIdentifier: ReuseIdentifiers.orderCellIdentifier,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                      for: indexPath)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let orderCell \u003d cell as? KitchenBacklogCell else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                assertionFailure(\"Invalid collection view cell.\")"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return cell"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewModel \u003d sections[indexPath.section].cellViewModel[indexPath.row]"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderCell.set(headerTitle: viewModel.title,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      isOrderReady: indexPath.section \u003d\u003d 0,"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      timeReceived: viewModel.timeStamp,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      orderView: sections[indexPath.section].cellViews[indexPath.row])"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderCell.updateTimer()"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderCell.delegate \u003d delegate"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func updateCellTimers(for cells: [KitchenBacklogCell]) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        cells.forEach { $0.updateTimer() }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - UICollectionViewDelegateFlowLayout"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension KitchenBacklogViewController: UICollectionViewDelegateFlowLayout {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                        layout collectionViewLayout: UICollectionViewLayout,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                        sizeForItemAt indexPath: IndexPath) -\u003e CGSize {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let safeAreaHeight \u003d view.safeAreaLayoutGuide.layoutFrame.size.height - KitchenBacklogConstants.clockHeight"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return CGSize(width: KitchenBacklogConstants.orderWidth,"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      height: safeAreaHeight - 2 * KitchenBacklogConstants.orderMargins)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                        layout collectionViewLayout: UICollectionViewLayout,"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                        minimumLineSpacingForSectionAt section: Int) -\u003e CGFloat {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return KitchenBacklogConstants.spaceBetweenOrders"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                        layout collectionViewLayout: UICollectionViewLayout,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                        insetForSectionAt section: Int) -\u003e UIEdgeInsets {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return UIEdgeInsets(top: 0, left: KitchenBacklogConstants.orderMargins, bottom: 0, right: 0)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - KitchenBacklogPresenterOutput"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension KitchenBacklogViewController: KitchenBacklogViewControllerInput {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayOrders(viewModel: KitchenBacklogViewModel) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // Remove all old child view controllers"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        removeAllChildViewControllers()"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let preparedViews \u003d viewModel.preparedOrders"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            .map { getNewOrderViewController(orderId: $0.orderId).view }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let unpreparedViews \u003d viewModel.unpreparedOrders"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            .map { getNewOrderViewController(orderId: $0.orderId).view }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionViewDataSource \u003d KitchenBacklogDataSource(preparedViews: preparedViews,"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                            preparedViewModels: viewModel.preparedOrders,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                            unpreparedViews: unpreparedViews,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                            unpreparedViewModels: viewModel.unpreparedOrders)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension KitchenBacklogViewController: UIViewControllerRestoration {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static func viewController(withRestorationIdentifierPath path: [String], coder: NSCoder) -\u003e UIViewController? {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return self.init()"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 275
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/View/KitchenClockView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenClockView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class KitchenClockView: UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let label: UILabel \u003d {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d .white"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textAlignment \u003d .center"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d UIFont.preferredFont(forTextStyle: .title2)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        styleClock()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(label)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        updateTime()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fatalError(\"This should not be called without Storyboard.\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.snp_makeConstraints { make in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalTo(safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalTo(safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalTo(safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func updateTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let now \u003d Date()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.text \u003d now.formattedAsTime()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func styleClock() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        backgroundColor \u003d UIColor.Custom.deepPurple"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        clipsToBounds \u003d true"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        layer.cornerRadius \u003d CornerRadiusConstants.standardRadius"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        layer.maskedCorners \u003d [.layerMaxXMaxYCorner, .layerMinXMaxYCorner]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 54
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/ViewModel/KitchenBacklogViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "struct KitchenBacklogViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    struct OrderViewModel {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let orderId: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let title: String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let timeStamp: Date"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let preparedOrders: [OrderViewModel]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let unpreparedOrders: [OrderViewModel]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 19
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/KitchenBacklog/Worker/KitchenBacklogWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  KitchenBacklogWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class KitchenBacklogWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getOrders() -\u003e [Order] {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // TODO: Get orders from network filtered for this particular stall"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return []"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 16
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/Order/Configurator/OrderConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  OrderConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class OrderConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let shared: OrderConfigurator \u003d OrderConfigurator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func configure(orderId: String,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   viewController: OrderViewController,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   toParentMediator: OrderToParentOutput?,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let router \u003d OrderRouter(viewController: viewController)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let presenter \u003d OrderPresenter(output: viewController)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let interactor \u003d OrderInteractor(output: presenter,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                         orderId: orderId,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                         injector: injector,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                         toParentMediator: toParentMediator)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        toParentMediator?.orderInteractor \u003d interactor"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 31
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/Order/Interactor/OrderInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  OrderInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: Interscene interactor IO"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderFromParentInput: class {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderToParentOutput: class {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var orderInteractor: OrderFromParentInput? { get set }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleOrderReady()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: Intrascene interactor IO"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderInteractorInput: OrderViewControllerOutput {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderInteractorOutput {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentOrder(orderId: String,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      queueNumber: Int,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      preparedOrderItems: [OrderItem],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      unpreparedOrderItems: [OrderItem])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class OrderInteractor: OrderFromParentInput {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let output: OrderInteractorOutput"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let worker: OrderWorker"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private weak var toParentMediator: OrderToParentOutput?"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var loadedOrderId: String"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var loadedPreparedOrderItems: [OrderItem] \u003d []"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var loadedUnpreparedOrderItems: [OrderItem] \u003d []"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: OrderInteractorOutput,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         orderId: String,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         injector: DependencyInjector,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         toParentMediator: OrderToParentOutput?,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         worker: OrderWorker \u003d OrderWorker()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loadedOrderId \u003d orderId"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.toParentMediator \u003d toParentMediator"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - OrderInteractorInput"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension OrderInteractor: OrderViewControllerOutput {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func reloadOrder() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let order \u003d deps.storageManager.getOrder(id: loadedOrderId) else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loadedPreparedOrderItems \u003d order.readyStateOrderItems"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        loadedUnpreparedOrderItems \u003d order.receivedStateOrderItems"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.presentOrder(orderId: loadedOrderId,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                            queueNumber: order.queueNumber,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                            preparedOrderItems: loadedPreparedOrderItems,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                            unpreparedOrderItems: loadedUnpreparedOrderItems)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleOrderItemReady(at index: Int) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let orderItem \u003d loadedUnpreparedOrderItems[index]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            orderItem.orderHistories.append(OrderHistory(state: .ready, timestamp: Date()))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if loadedUnpreparedOrderItems.count \u003c\u003d 1 {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            toParentMediator?.handleOrderReady()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            reloadOrder()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Dependency injection"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate func dependencies() -\u003e OrderInteractor.Dependencies {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return OrderInteractor.Dependencies(storageManager: storageManager)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 95
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/Order/Presenter/OrderPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  OrderPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderPresenterInput: OrderInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderPresenterOutput: class {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayOrder(viewModel: OrderViewModel)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class OrderPresenter {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private(set) unowned var output: OrderPresenterOutput"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: OrderPresenterOutput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - OrderPresenterInput"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension OrderPresenter: OrderPresenterInput {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentOrder(orderId: String,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      queueNumber: Int,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      preparedOrderItems: [OrderItem],"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                      unpreparedOrderItems: [OrderItem]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewModel \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            OrderViewModel(id: orderId,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           preparedOrderItems: generateOrderItemViewModels(forOrderItems: preparedOrderItems),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           unpreparedOrderItems: generateOrderItemViewModels(forOrderItems: unpreparedOrderItems))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayOrder(viewModel: viewModel)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func generateOrderItemViewModels(forOrderItems orderItems: [OrderItem])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        -\u003e [OrderViewModel.OrderItemViewModel] {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return orderItems.map {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            OrderViewModel.OrderItemViewModel(name: $0.menuItem?.name ?? \"\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                              quantity: String($0.quantity),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                              diningOption: formatDiningOption($0.diningOption),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                              options: generateOrderItemOptionsString(Array($0.options)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                              addons: $0.addons"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                .compactMap { $0.name }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                .joined(separator: \"\\n\"),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                              comment: $0.comment)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func generateOrderItemOptionsString(_ options: [OrderItemOption]) -\u003e String {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let optionStrings \u003d options.compactMap { option -\u003e String? in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let quantity \u003d 1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            guard let optionTitle \u003d option.menuItemOption?.name else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                assertionFailure(\"Your menu item option does not exist!\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            switch option.value {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            case .boolean(false), .quantity(0), .multipleResponse([]):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            case .boolean(true):"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return formatOptionString(quantity: quantity, optionTitle: optionTitle)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            case .quantity(let newQuantity):"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return formatOptionString(quantity: newQuantity, optionTitle: optionTitle)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .multipleChoice(let choiceIndex):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard case let .multipleChoice(choices)? \u003d option.menuItemOption?.options else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return nil"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return formatOptionString(quantity: quantity,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                          optionTitle: optionTitle,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                          choice: choices[choiceIndex].name)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            case .multipleResponse(let selectedChoices):"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                guard case let .multipleResponse(choices)? \u003d option.menuItemOption?.options else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return nil"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return selectedChoices.map {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                    formatOptionString(quantity: quantity,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                       optionTitle: optionTitle,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                       choice: choices[$0].name)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                }.joined(separator: \"\\n\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return optionStrings.joined(separator: \"\\n\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func formatOptionString(quantity: Int, optionTitle: String, choice: String?\u003dnil) -\u003e String {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let choice \u003d choice else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return \"\\(quantity)x \\(optionTitle)\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return \"\\(quantity)x \\(optionTitle): \\(choice)\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func formatDiningOption(_ diningOption: OrderItem.DiningOption) -\u003e String {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        switch diningOption {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .eatin:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return OrderConstants.eatInDiningOptionTitle"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .takeaway:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return OrderConstants.takeAwayDiningOptionTitle"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 8,
      "Derek": 1,
      "Caryn Heng": 96
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/Order/Router/OrderRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  OrderRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewController: OrderViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class OrderRouter {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var viewController: OrderViewController?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(viewController: OrderViewController?) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - OrderRouterProtocol"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension OrderRouter: OrderRouterProtocol {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 27
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/Order/View/OrderItemDetailsView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  OrderItemDetailsView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 12/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class OrderItemDetailsView: UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let diningOptionLabel \u003d UILabel()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let nameLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d .boldSystemFont(ofSize: OrderConstants.orderItemTitleFontSize)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textAlignment \u003d .left"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let optionsHeaderLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.text \u003d OrderConstants.optionsHeaderTitle"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d .preferredFont(forTextStyle: .headline)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d OrderConstants.orderDetailsFontColor"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let optionsLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.numberOfLines \u003d 0"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d OrderConstants.orderDetailsFontColor"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textAlignment \u003d .left"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let addonsHeaderLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.text \u003d OrderConstants.addonsHeaderTitle"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d .preferredFont(forTextStyle: .headline)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d OrderConstants.orderDetailsFontColor"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let addonsLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.numberOfLines \u003d 0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d OrderConstants.orderDetailsFontColor"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textAlignment \u003d .left"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let commentsHeaderLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.text \u003d OrderConstants.commentsHeaderTitle"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d .preferredFont(forTextStyle: .headline)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d OrderConstants.orderDetailsFontColor"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let commentsLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.numberOfLines \u003d 0"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d OrderConstants.orderDetailsFontColor"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textAlignment \u003d .left"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Stack views"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var optionsStackView: UIStackView \u003d {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: [optionsHeaderLabel, optionsLabel])"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .vertical"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .equalSpacing"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var addonsStackView: UIStackView \u003d {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: [addonsHeaderLabel, addonsLabel])"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .vertical"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .equalSpacing"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var commentsStackView: UIStackView \u003d {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: [commentsHeaderLabel, commentsLabel])"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .vertical"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .equalSpacing"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var contentStackView: UIStackView \u003d {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let arrangedSubviews \u003d [diningOptionLabel, nameLabel, optionsStackView, addonsStackView, commentsStackView]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: arrangedSubviews)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .vertical"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .equalSpacing"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.spacing \u003d ConstraintConstants.standardValue"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func set(name: String, diningOption: String, options: String, addons: String, comment: String) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        nameLabel.text \u003d name"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        diningOptionLabel.text \u003d diningOption"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        optionsLabel.text \u003d options"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addonsLabel.text \u003d addons"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        commentsLabel.text \u003d comment"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setupView()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setupView() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(contentStackView)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        hideEmptySubviews()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func hideEmptySubviews() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        hideViewIfEmptyLabel(view: optionsStackView, label: optionsLabel)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        hideViewIfEmptyLabel(view: addonsStackView, label: addonsLabel)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        hideViewIfEmptyLabel(view: commentsStackView, label: commentsLabel)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func hideViewIfEmptyLabel(view: UIView, label: UILabel) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.isHidden \u003d (label.text \u003d\u003d \"\")"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        contentStackView.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.edges.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 133
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/Order/View/OrderItemViewCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  OrderItemTableViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderItemViewCellDelegate: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapReady(forCell cell: UITableViewCell)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class OrderItemViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var isItemPrepared \u003d false {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let arrangedSubviews \u003d isItemPrepared ? [itemStackView] : [itemStackView, readyButton]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let stackView \u003d UIStackView(arrangedSubviews: arrangedSubviews)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            stackView.axis \u003d .vertical"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            stackView.distribution \u003d .equalSpacing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            stackView.alignment \u003d .center"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            stackView.spacing \u003d OrderConstants.orderItemPadding"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            contentStackView \u003d stackView"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var delegate: OrderItemViewCellDelegate?"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let quantitylabel: UILabel \u003d {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d UIColor.Custom.darkPurple"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textAlignment \u003d .center"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d .preferredFont(forTextStyle: .title3)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var readyButton: UIButton \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleReadyPress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitle(OrderConstants.itemReadyButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.backgroundColor \u003d UIColor.Custom.purple"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.titleLabel?.font \u003d .preferredFont(forTextStyle: .headline)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.layer.cornerRadius \u003d ButtonConstants.mediumButtonHeight / 2.0"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Stack views"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var detailLabelsContainer \u003d OrderItemDetailsView()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    /// The order item view (LHS + RHS) excluding the ready button."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var itemStackView: UIStackView \u003d {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: [quantitylabel, detailLabelsContainer])"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .horizontal"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .equalSpacing"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    /// All the contents of a cell."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var contentStackView \u003d UIStackView()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func set(quantity: String,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "             name: String,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "             diningOption: String,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "             options: String,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "             addons: String,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "             comment: String,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "             isItemPrepared: Bool) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        quantitylabel.text \u003d String(quantity)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.isItemPrepared \u003d isItemPrepared"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        detailLabelsContainer.set(name: name,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                  diningOption: diningOption,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                  options: options,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                  addons: addons,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                  comment: comment)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setupView()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setupView() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if isItemPrepared {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            contentView.alpha \u003d 0.5"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            readyButton.removeFromSuperview()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        contentView.addSubview(contentStackView)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        contentStackView.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalToSuperview().offset(OrderConstants.orderItemPadding)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview().offset(OrderConstants.orderItemPadding)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview().offset(-OrderConstants.orderItemPadding)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalToSuperview().offset(-OrderConstants.orderItemPadding)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        itemStackView.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        quantitylabel.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .multipliedBy(OrderConstants.leftPanelRatio)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        detailLabelsContainer.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .multipliedBy(1 - OrderConstants.leftPanelRatio)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        readyButton.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(ButtonConstants.mediumButtonHeight)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            guard readyButton.superview !\u003d nil else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview().offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview().offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func handleReadyPress(sender: Any) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.didTapReady(forCell: self)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 126
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/Order/View/OrderViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  OrderViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderViewControllerInput: OrderPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol OrderViewControllerOutput {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func reloadOrder()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleOrderItemReady(at index: Int)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class OrderViewController: UITableViewController {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var output: OrderViewControllerOutput?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var router: OrderRouterProtocol?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var tableViewDataSource: OrderViewDataSource? {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            tableViewDataSource?.delegate \u003d self"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            tableView.dataSource \u003d tableViewDataSource"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            tableView.reloadData()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(orderId: String,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         mediator: OrderToParentOutput?,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         configurator: OrderConfigurator \u003d OrderConfigurator.shared) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(style: .plain)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure(orderId: orderId, mediator: mediator, configurator: configurator)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        assertionFailure(\"This should not be called without Storyboard.\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configure(orderId: String,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           mediator: OrderToParentOutput?,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           configurator: OrderConfigurator \u003d OrderConfigurator.shared) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configurator.configure(orderId: orderId, viewController: self, toParentMediator: mediator)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setupTableView()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.reloadOrder()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setupTableView() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableView.backgroundColor \u003d UIColor.Custom.paleGray"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableView.delegate \u003d self"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableView.register(OrderItemViewCell.self,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           forCellReuseIdentifier: ReuseIdentifiers.orderItemCellIdentifier)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableView.tableFooterView \u003d UIView() // Necessary to remove extra rows in the tableview"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - OrderItemViewCellDelegate"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension OrderViewController: OrderItemViewCellDelegate {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapReady(forCell cell: UITableViewCell) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let indexPath \u003d tableView.indexPath(for: cell) else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Cannot locate index path of cell to be deleted.\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.handleOrderItemReady(at: indexPath.row)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - UITableViewDataSource"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "private class OrderViewDataSource: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private struct SectionViewModel {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let title: String?"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let cellViewModel: [OrderViewModel.OrderItemViewModel]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let sectionViewModels: [SectionViewModel]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var delegate: OrderItemViewCellDelegate?"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(preparedItemViewModels: [OrderViewModel.OrderItemViewModel],"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         unpreparedItemViewModels: [OrderViewModel.OrderItemViewModel]) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let unpreparedSectionViewModels \u003d SectionViewModel(title: nil, cellViewModel: unpreparedItemViewModels)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let preparedSectionViewModels \u003d SectionViewModel(title: OrderConstants.preparedItemsSectionTitle,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                         cellViewModel: preparedItemViewModels)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        sectionViewModels \u003d [unpreparedSectionViewModels, preparedSectionViewModels]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return sectionViewModels.count"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return sectionViewModels[section].cellViewModel.count"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let cell \u003d tableView.dequeueReusableCell(withIdentifier: ReuseIdentifiers.orderItemCellIdentifier,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                 for: indexPath)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let itemCell \u003d cell as? OrderItemViewCell else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Invalid table view cell.\")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let viewModel \u003d sectionViewModels[indexPath.section].cellViewModel[indexPath.row]"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        itemCell.set(quantity: viewModel.quantity,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                     name: viewModel.name,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                     diningOption: viewModel.diningOption,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                     options: viewModel.options,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                     addons: viewModel.addons,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                     comment: viewModel.comment,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                     isItemPrepared: indexPath.section \u003d\u003d 1)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        itemCell.delegate \u003d delegate"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        cell.backgroundColor \u003d UIColor.Custom.paleGray"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        cell.selectionStyle \u003d .none"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -\u003e CGFloat {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return UITableView.automaticDimension"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return self.tableView(tableView, numberOfRowsInSection: section) \u003e 0 ?"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            sectionViewModels[section].title : nil"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - OrderPresenterOutput"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension OrderViewController: OrderViewControllerInput {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayOrder(viewModel: OrderViewModel) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        tableViewDataSource \u003d OrderViewDataSource(preparedItemViewModels: viewModel.preparedOrderItems,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                  unpreparedItemViewModels: viewModel.unpreparedOrderItems)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 144
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/Order/ViewModel/OrderViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  OrderViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "struct OrderViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    struct OrderItemViewModel {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let quantity: String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let diningOption: String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let options: String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let addons: String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let comment: String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let id: String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let preparedOrderItems: [OrderItemViewModel]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let unpreparedOrderItems: [OrderItemViewModel]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 24
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/Order/Worker/OrderWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  OrderWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class OrderWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 13
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/StallRoot/Configurator/StallRootConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallRootConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class StallRootConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let shared: StallRootConfigurator \u003d StallRootConfigurator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func configure(viewController: StallRootViewController,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   stallId: String,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let router \u003d StallRootRouter(viewController: viewController)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let presenter \u003d StallRootPresenter(output: viewController)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let interactor \u003d StallRootInteractor(output: presenter,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             stallId: stallId,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             injector: injector)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 28
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/StallRoot/Interactor/StallRootInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallRootInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallRootInteractorInput: StallRootViewControllerOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallRootInteractorOutput {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func present(stallId: String)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentLogout()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class StallRootInteractor {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let authManager: AuthManager"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let output: StallRootInteractorOutput"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let worker: StallRootWorker"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let stallId: String"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: StallRootInteractorOutput,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         stallId: String,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         injector: DependencyInjector \u003d appDefaultInjector,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         worker: StallRootWorker \u003d StallRootWorker()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.stallId \u003d stallId"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - StallRootInteractorInput"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension StallRootInteractor: StallRootInteractorInput {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func loadStall() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.present(stallId: stallId)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func logout() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        deps.authManager.logout()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.presentLogout()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Dependency Injection"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate func dependencies() -\u003e StallRootInteractor.Dependencies {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return StallRootInteractor.Dependencies(authManager: authManager)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 60
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/StallRoot/Presenter/StallRootPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallRootPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallRootPresenterInput: StallRootInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallRootPresenterOutput: class {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func display(stallId: String)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayLogout()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class StallRootPresenter {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private(set) unowned var output: StallRootPresenterOutput"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: StallRootPresenterOutput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - StallRootPresenterInput"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension StallRootPresenter: StallRootPresenterInput {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func present(stallId: String) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.display(stallId: stallId)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentLogout() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayLogout()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 37
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/StallRoot/Router/StallRootRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallRootRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallRootRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewController: StallRootViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func menuViewController(stallId: String) -\u003e UIViewController"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func kitchenViewController(stallId: String) -\u003e UIViewController"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func stallSettingsViewController(stallId: String) -\u003e UIViewController"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class StallRootRouter {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var viewController: StallRootViewController?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(viewController: StallRootViewController?) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - StallRootRouterProtocol"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension StallRootRouter: StallRootRouterProtocol {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController?.dismiss(animated: true)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func menuViewController(stallId: String) -\u003e UIViewController {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let menuVC \u003d MenuViewController(stallId: stallId, isEditable: true, mediator: nil)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return UINavigationController(rootViewController: menuVC)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func kitchenViewController(stallId: String) -\u003e UIViewController {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // TODO: Pass stallId into child"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return KitchenBacklogViewController()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func stallSettingsViewController(stallId: String) -\u003e UIViewController {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return AdminSettingsViewController(id: stallId, type: .stall, isDismissibleView: false)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 46,
      "E-Liang Tan": 3
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/StallRoot/View/StallRootViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallRootViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallRootViewControllerInput: StallRootPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallRootViewControllerOutput {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func loadStall()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func logout()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class StallRootViewController: UITabBarController {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var output: StallRootViewControllerOutput?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var router: StallRootRouterProtocol?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(stallId: String, configurator: StallRootConfigurator \u003d StallRootConfigurator.shared) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure(configurator: configurator, stallId: stallId)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configure(configurator: StallRootConfigurator \u003d StallRootConfigurator.shared,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           stallId: String) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configurator.configure(viewController: self, stallId: stallId)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.loadStall()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setUpTabs(stallId: String) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let router \u003d router else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            print(\"Router required to get child VCs\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let menuVC \u003d router.menuViewController(stallId: stallId)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        menuVC.title \u003d StallRootConstants.menuTabBarTitle"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let kitchenVC \u003d router.kitchenViewController(stallId: stallId)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        kitchenVC.title \u003d StallRootConstants.kitchenTabBarTitle"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let settingsVC \u003d router.stallSettingsViewController(stallId: stallId)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        settingsVC.title \u003d StallRootConstants.settingsTabBarTitle"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Dummy view controller that should never be displayed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // as we should navigate back when the tab is opened."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let logoutVC \u003d UIViewController()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        logoutVC.title \u003d StallRootConstants.logoutTabBarTitle"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        setViewControllers([menuVC, kitchenVC, settingsVC, logoutVC], animated: false)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func tabBar(_ tabBar: UITabBar, didSelect item: UITabBarItem) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if item \u003d\u003d tabBar.items?.last {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            output?.logout()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - StallRootPresenterOutput"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension StallRootViewController: StallRootViewControllerInput {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func display(stallId: String) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setUpTabs(stallId: stallId)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayLogout() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateBack()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 59,
      "E-Liang Tan": 24
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/StallRoot/ViewModel/StallRootViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallRootViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "struct StallRootViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 13
    }
  },
  {
    "path": "NAME/Scenes/AdminStall/StallRoot/Worker/StallRootWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallRootWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class StallRootWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 12
    }
  },
  {
    "path": "NAME/Scenes/Common/CustomAlert/Configurator/CustomAlertConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  CustomAlertConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class CustomAlertConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let shared: CustomAlertConfigurator \u003d CustomAlertConfigurator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func configure(viewController: CustomAlertViewController) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let router \u003d CustomAlertRouter(viewController: viewController)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let presenter \u003d CustomAlertPresenter(output: viewController)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let interactor \u003d CustomAlertInteractor(output: presenter)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 24
    }
  },
  {
    "path": "NAME/Scenes/Common/CustomAlert/Interactor/CustomAlertInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  CustomAlertInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol CustomAlertInteractorInput: CustomAlertViewControllerOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol CustomAlertInteractorOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class CustomAlertInteractor {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let output: CustomAlertInteractorOutput"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    let worker: CustomAlertWorker"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: CustomAlertInteractorOutput, worker: CustomAlertWorker \u003d CustomAlertWorker()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - CustomAlertInteractorInput"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension CustomAlertInteractor: CustomAlertViewControllerOutput {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 31
    }
  },
  {
    "path": "NAME/Scenes/Common/CustomAlert/Presenter/CustomAlertPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  CustomAlertPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol CustomAlertPresenterInput: CustomAlertInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol CustomAlertPresenterOutput: class {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class CustomAlertPresenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private(set) unowned var output: CustomAlertPresenterOutput"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(output: CustomAlertPresenterOutput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - CustomAlertPresenterInput"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension CustomAlertPresenter: CustomAlertPresenterInput {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 29
    }
  },
  {
    "path": "NAME/Scenes/Common/CustomAlert/Router/CustomAlertRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  CustomAlertRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol CustomAlertRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewController: CustomAlertViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class CustomAlertRouter {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var viewController: CustomAlertViewController?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(viewController: CustomAlertViewController?) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - CustomAlertRouterProtocol"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension CustomAlertRouter: CustomAlertRouterProtocol {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateBack() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController?.dismiss(animated: true)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 32
    }
  },
  {
    "path": "NAME/Scenes/Common/CustomAlert/View/CustomAlertViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  CustomAlertViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol CustomAlertViewControllerInput: CustomAlertPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol CustomAlertViewControllerOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class CustomAlertViewController: UIViewController {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var output: CustomAlertViewControllerOutput?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var router: CustomAlertRouterProtocol?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var alertType: CustomAlertViewModel.AlertType"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var imageView: UIImageView \u003d {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        switch alertType {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .error:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let image \u003d UIImage(named: ImageConstants.sadMascotName)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let imageView \u003d UIImageView(image: image)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            imageView.clipsToBounds \u003d true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            imageView.contentMode \u003d .scaleAspectFit"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return imageView"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var titleLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.numberOfLines \u003d 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.font \u003d .boldSystemFont(ofSize: CustomAlertConstants.titleFontSize)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d UIColor.Custom.deepPurple"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textAlignment \u003d .left"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var messageLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.numberOfLines \u003d 0"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        label.textColor \u003d .darkGray"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var doneButton: UIButton \u003d {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.backgroundColor \u003d UIColor.Custom.purple"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.layer.cornerRadius \u003d CornerRadiusConstants.standardRadius"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitle(CustomAlertConstants.doneButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleDonePress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Container Views"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var messageView \u003d UIView()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var detailStackView: UIStackView \u003d {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: [imageView, messageView])"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .horizontal"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .fill"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.spacing \u003d ConstraintConstants.standardValue"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var stackView: UIStackView \u003d {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: [detailStackView, doneButton])"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .vertical"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .equalSpacing"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.spacing \u003d 20"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let containerView: UIView \u003d {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let view \u003d UIView()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.backgroundColor \u003d UIColor.Custom.palePurple"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.layer.cornerRadius \u003d CornerRadiusConstants.standardRadius"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return view"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let backgroundView: UIView \u003d {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let view \u003d UIView()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.backgroundColor \u003d .gray"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.alpha \u003d 0.5"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return view"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(withTitle title: String,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         withMessage message: String,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         buttonText: String?,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         alertType: CustomAlertViewModel.AlertType,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         configurator: CustomAlertConfigurator \u003d CustomAlertConfigurator.shared) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.alertType \u003d alertType"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        titleLabel.text \u003d title"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        messageLabel.text \u003d message"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if let buttonText \u003d buttonText {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            doneButton.setTitle(buttonText, for: .normal)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        modalPresentationStyle \u003d .overFullScreen"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure(configurator: configurator)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        fatalError(\"This should not be called without Storyboard.\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configure(configurator: CustomAlertConfigurator \u003d CustomAlertConfigurator.shared) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configurator.configure(viewController: self)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubviews()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstaints()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func addSubviews() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.addSubview(backgroundView)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.addSubview(containerView)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        containerView.addSubview(stackView)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        messageView.addSubview(titleLabel)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        messageView.addSubview(messageLabel)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstaints() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        backgroundView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.edges.equalToSuperview()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        containerView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.center.equalToSuperview()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalTo(CustomAlertConstants.alertWidth)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalToSuperview().offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview().offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview().offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalToSuperview().offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        doneButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(ButtonConstants.mediumButtonHeight)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview()"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview()"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        imageView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(CustomAlertConstants.imageViewHeight)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalTo(CustomAlertConstants.imageViewHeight)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        messageView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalToSuperview().offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalToSuperview().offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        titleLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        messageLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(titleLabel.snp.bottom).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func handleDonePress(sender: Any) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateBack()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - CustomAlertPresenterOutput"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension CustomAlertViewController: CustomAlertViewControllerInput {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 189
    }
  },
  {
    "path": "NAME/Scenes/Common/CustomAlert/ViewModel/CustomAlertViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  CustomAlertViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "struct CustomAlertViewModel {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    enum AlertType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case error"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 13
    }
  },
  {
    "path": "NAME/Scenes/Common/CustomAlert/Worker/CustomAlertWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  CustomAlertWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class CustomAlertWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 12
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/Configurator/MenuConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class MenuConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static let shared: MenuConfigurator \u003d MenuConfigurator()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func configure(stallId: String?,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                   isEditable: Bool,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   viewController: MenuViewController,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                   toParentMediator: MenuToParentOutput?,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let toChildrenMediator \u003d MenuIntersceneMediator()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let router \u003d MenuRouter(viewController: viewController,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                mediator: toChildrenMediator)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let presenter \u003d MenuPresenter(output: viewController)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let interactor \u003d MenuInteractor(stallId: stallId,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                        isEditable: isEditable,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                        output: presenter,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                        injector: injector,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                        toParentMediator: toParentMediator,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                        toChildrenMediator: toChildrenMediator)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        toParentMediator?.menuInteractor \u003d interactor"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        toChildrenMediator.selfInteractor \u003d interactor"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 5,
      "E-Liang Tan": 32
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/Interactor/MenuInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Interscene interactor IO"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuFromParentInput: class {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var stall: Stall? { get set }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuToParentOutput: class {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var menuInteractor: MenuFromParentInput? { get set }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuFromChildrenInput: class {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func handleNewMenuItem(id: String)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuToChildrenOutput: class {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var selfInteractor: MenuFromChildrenInput? { get set }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Intrascene interactor IO"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuInteractorInput: MenuViewControllerOutput {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuInteractorOutput {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func present(stall: Stall?, isEditable: Bool)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func present(actions: [MenuCategoryAction], forCategoryAt index: Int, name: String)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func presentDetail(forMenuItemId id: String?, isEditable: Bool)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class MenuInteractor: MenuFromParentInput {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let output: MenuInteractorOutput"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let worker: MenuWorker"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private weak var toParentMediator: MenuToParentOutput?"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let toChildrenMediator: MenuIntersceneMediator"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var stall: Stall? {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            reload()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let isEditable: Bool"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var lastCategoryIndexSelected: Int?"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(stallId: String?,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         isEditable: Bool,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         output: MenuInteractorOutput,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         injector: DependencyInjector,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         toParentMediator: MenuToParentOutput?,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         toChildrenMediator: MenuIntersceneMediator,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         worker: MenuWorker \u003d MenuWorker()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.isEditable \u003d isEditable"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.toParentMediator \u003d toParentMediator"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.toChildrenMediator \u003d toChildrenMediator"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setStall(withId: stallId)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setStall(withId id: String?) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let id \u003d id else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stall \u003d deps.storageManager.getStall(id: id)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - MenuInteractorInput"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuInteractor: MenuInteractorInput {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: Menu item actions"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add(menuItemIds: [String], toCategory categoryIndex: Int) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let menu \u003d stall?.menu, isEditable else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            menu.add(menuItemIds: menuItemIds, toCategory: categoryIndex)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.present(stall: stall, isEditable: isEditable)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func remove(menuItemIds: [String], fromCategory categoryIndex: Int) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let menu \u003d stall?.menu, isEditable else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            menu.remove(menuItemIds: menuItemIds, fromCategory: categoryIndex)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.present(stall: stall, isEditable: isEditable)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: Category actions"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func getLegalActions(forCategoryAt index: Int) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let category \u003d stall?.menu?.categories[index], isEditable else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        var actions: [MenuCategoryAction] \u003d [.insertLeft]"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if !category.isUncategorized {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            actions.append(.insertRight)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            actions.append(.rename)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            if category.items.isEmpty {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                actions.append(.remove)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.present(actions: actions, forCategoryAt: index, name: category.name)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func insert(newCategoryName: String, besideCategoryAt index: Int, onLeft: Bool) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let menu \u003d stall?.menu, isEditable else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        try? deps.storageManager.writeTransaction { manager in"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let category \u003d MenuCategory()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            category.name \u003d newCategoryName"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            manager.add(category, update: true)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            menu.add(category: category, at: index + (onLeft ? 0 : 1))"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        reload()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func rename(categoryAt index: Int, to name: String) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let category \u003d stall?.menu?.categories[index], isEditable else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            category.name \u003d name"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        reload()"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func remove(categoryAt index: Int) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let menu \u003d stall?.menu, isEditable else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            menu.remove(categoryAt: index)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        reload()"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: Misc"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func select(menuItemId: String?, categoryIndex: Int) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        lastCategoryIndexSelected \u003d categoryIndex"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.presentDetail(forMenuItemId: menuItemId, isEditable: isEditable)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reload() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.present(stall: stall, isEditable: isEditable)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - MenuFromChildrenInput"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuInteractor: MenuFromChildrenInput {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func handleNewMenuItem(id: String) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let item \u003d deps.storageManager.getMenuEditable(id: id) else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            print(\"Could not find created item\")"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard isEditable,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let menu \u003d stall?.menu,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let lastCategoryIndexSelected \u003d lastCategoryIndexSelected else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                return"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            menu.add(newMenuEditable: item)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            menu.add(menuItemIds: [id], toCategory: lastCategoryIndexSelected)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        reload()"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - Dependency injection"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    fileprivate func dependencies() -\u003e MenuInteractor.Dependencies {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return MenuInteractor.Dependencies(storageManager: storageManager)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 3,
      "Caryn Heng": 13,
      "E-Liang Tan": 195
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/Interactor/MenuIntersceneMediator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuIntersceneMediator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 21/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias MenuIntersceneMediatorSelfInput \u003d MenuToChildrenOutput"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias MenuIntersceneMediatorSelfOutput \u003d MenuFromChildrenInput"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias MenuIntersceneMediatorMenuDetailInput \u003d MenuDetailToParentOutput"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias MenuIntersceneMediatorMenuDetailOutput \u003d MenuDetailFromParentInput"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class MenuIntersceneMediator: MenuIntersceneMediatorSelfInput,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "MenuIntersceneMediatorMenuDetailInput {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var selfInteractor: MenuIntersceneMediatorSelfOutput?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var menuDetailInteractor: MenuIntersceneMediatorMenuDetailOutput?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func handleNewMenuItem(id: String) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        selfInteractor?.handleNewMenuItem(id: id)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 23
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/Presenter/MenuPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuPresenterInput: MenuInteractorOutput {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuPresenterOutput: class {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func displayMenu(viewModel: MenuViewModel, isEditable: Bool)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func display(actions: [MenuCategoryAction], forCategoryAt index: Int, name: String)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func displayDetail(forMenuItemId id: String?, isEditable: Bool)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class MenuPresenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private(set) unowned var output: MenuPresenterOutput"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(output: MenuPresenterOutput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - MenuPresenterInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuPresenter: MenuPresenterInput {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func viewModel(forCategory category: MenuCategory) -\u003e MenuViewModel.MenuCategoryViewModel {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let itemVMs \u003d category.items.map { item in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            MenuViewModel.MenuItemViewModel(id: item.id,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            name: item.name,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                            imageURL: item.imageURL,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                            price: item.price,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                            discounts: []) // TODO: Add discounts"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return MenuViewModel.MenuCategoryViewModel(name: category.name, items: itemVMs)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func viewModel(forMenu menu: Menu?) -\u003e [MenuViewModel.MenuCategoryViewModel] {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let menu \u003d menu else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return []"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let categoryVMs \u003d menu.categories.map { viewModel(forCategory: $0) }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return categoryVMs"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func viewModel(forStall stall: Stall?) -\u003e MenuViewModel {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let stall \u003d stall else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return MenuViewModel(stall: MenuViewModel.MenuStallViewModel(name: \"\"),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                 categories: [])"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let stallVM \u003d MenuViewModel.MenuStallViewModel(name: stall.name)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let categoryVMs \u003d viewModel(forMenu: stall.menu)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return MenuViewModel(stall: stallVM, categories: categoryVMs)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func present(stall: Stall?, isEditable: Bool) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.displayMenu(viewModel: viewModel(forStall: stall), isEditable: isEditable)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func present(actions: [MenuCategoryAction], forCategoryAt index: Int, name: String) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.display(actions: actions, forCategoryAt: index, name: name)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func presentDetail(forMenuItemId id: String?, isEditable: Bool) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.displayDetail(forMenuItemId: id, isEditable: isEditable)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 2,
      "E-Liang Tan": 67
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/Router/MenuRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var viewController: MenuViewController? { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func navigateToMenuDetail(menuId: String?, isEditable: Bool)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class MenuRouter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var viewController: MenuViewController?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    unowned var mediator: MenuIntersceneMediator"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(viewController: MenuViewController?,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         mediator: MenuIntersceneMediator) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.mediator \u003d mediator"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - MenuRouterProtocol"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuRouter: MenuRouterProtocol {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Navigation"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func navigateToMenuDetail(menuId: String?, isEditable: Bool) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let menuDetailViewController \u003d MenuDetailViewController(menuId: menuId,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                                isEditable: isEditable,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                                toParentMediator: mediator)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController?.present(menuDetailViewController, animated: true)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 1,
      "E-Liang Tan": 39
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/View/CategorySelector.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  CategorySelector.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CategorySelectorDelegate: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Called when a category is selected."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///     - selector: Calling selector"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///     - category: Name of the category that was tapped"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///     - index: Index of the category that was tapped"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///     - wasAlreadySelected: Whether the category was selected again (i.e. was already"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///         selected before this delegate method was triggered)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func categorySelector(_ selector: CategorySelector,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                          didSelectCategory category: String,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                          at index: Int,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                          wasAlreadySelected: Bool)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "private class CategoryButton: UIButton {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var category: (name: String, index: Int) \u003d (\"\", -1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            updateDisplayFromState()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override var isSelected: Bool {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            updateDisplayFromState()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var isRemoveTarget: Bool {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            updateDisplayFromState()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        isRemoveTarget \u003d false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        isSelected \u003d false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setTitleColor(UIColor.Custom.deepPurple, for: .normal)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setTitleColor(.white, for: .selected)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        layer.cornerRadius \u003d CornerRadiusConstants.subtleRadius"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        contentEdgeInsets \u003d .init(top: 10, left: 10, bottom: 10, right: 10)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func updateDisplayFromState() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if isRemoveTarget {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            backgroundColor \u003d UIColor.Custom.salmonRed"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            setTitleColor(.white, for: .normal)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            setTitle(\"Remove\", for: .normal)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        } else if isSelected {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            backgroundColor \u003d UIColor.Custom.purple"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            setTitle(category.name, for: .normal)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            backgroundColor \u003d UIColor.Custom.lightGray"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            setTitleColor(UIColor.Custom.deepPurple, for: .normal)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            setTitle(category.name, for: .normal)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class CategorySelector: UIScrollView {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let categorySelector: UIStackView \u003d {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let selector \u003d PassthroughStackView()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        selector.spacing \u003d ConstraintConstants.standardValue"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return selector"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var selectorDelegate: CategorySelectorDelegate?"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var categories: [String] \u003d [] {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            categorySelector.subviews.forEach { $0.removeFromSuperview() }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            for (index, category) in categories.enumerated() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                let button \u003d CategoryButton()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                button.category \u003d (category, index)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                button.addTarget(self, action: #selector(didSelectCategory(sender:)), for: .touchDown)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                categorySelector.addArrangedSubview(button)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                if let selectedIndex \u003d selectedIndex, selectedIndex \u003d\u003d index {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                    button.isSelected \u003d true"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var selectedIndex: Int? {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            if let oldValue \u003d oldValue,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                oldValue \u003c categorySelector.arrangedSubviews.count,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                let button \u003d categorySelector.arrangedSubviews[oldValue] as? CategoryButton {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                button.isSelected \u003d false"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                button.isRemoveTarget \u003d false"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            if let selectedIndex \u003d selectedIndex,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                selectedIndex \u003c categorySelector.arrangedSubviews.count,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                let button \u003d categorySelector.arrangedSubviews[selectedIndex] as? CategoryButton {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                button.isSelected \u003d !isRemoving"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                button.isRemoveTarget \u003d isRemoving"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                scrollRectToVisible(button.frame, animated: false)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var isRemoving: Bool {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let removeIndex \u003d selectedIndex"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            selectedIndex \u003d removeIndex"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var isSelectionEnabled: Bool {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            for case let button as CategoryButton in categorySelector.arrangedSubviews {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                button.isEnabled \u003d isSelectionEnabled"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var selectedButton: UIView? {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let index \u003d selectedIndex else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return categorySelector.arrangedSubviews[index]"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        isRemoving \u003d false"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        isSelectionEnabled \u003d true"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        alwaysBounceHorizontal \u003d true"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        showsHorizontalScrollIndicator \u003d true"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        addSubview(categorySelector)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categorySelector.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            make.edges.equalToSuperview()"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func categoryInfo(atPoint point: CGPoint) -\u003e (index: Int, isRemove: Bool)? {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let categoryButton \u003d categorySelector.hitTest(point, with: nil) as? CategoryButton else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let categoryIndex \u003d categoryButton.category.index"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard 0..\u003ccategories.count ~\u003d categoryIndex else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        var isRemove \u003d false"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if let selectedIndex \u003d selectedIndex {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            isRemove \u003d isRemoving \u0026\u0026 selectedIndex \u003d\u003d categoryIndex"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return (categoryIndex, isRemove)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func didSelectCategory(sender: CategoryButton) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let previousIndex \u003d selectedIndex ?? Int.min // Use an impossible value if nothing selected"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        selectedIndex \u003d sender.category.index"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if let selectedIndex \u003d selectedIndex {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            selectorDelegate?.categorySelector(self,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                               didSelectCategory: sender.category.name,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                               at: selectedIndex,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                               wasAlreadySelected: previousIndex \u003d\u003d selectedIndex)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 8,
      "E-Liang Tan": 176
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/View/MenuAddCollectionViewCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuAddCollectionViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 21/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class MenuAddCollectionViewCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let label: UILabel \u003d {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        label.text \u003d \"+\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        label.font \u003d .preferredFont(forTextStyle: .title1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        label.textAlignment \u003d .center"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        addSubview(label)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        label.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            make.edges.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 35
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/View/MenuCategoryHeaderView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuCategoryHeaderView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class MenuCategoryHeaderView: UICollectionReusableView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let label \u003d UILabel()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // Apparently the headerview is above the scrollbar of the collection view"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // so this will be the workaround until it\u0027s solved :("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override var layer: CALayer {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let layer \u003d super.layer"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        layer.zPosition \u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return layer"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        backgroundColor \u003d UIColor.Custom.paleGray"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        addSubview(label)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        label.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.edges.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var text: String? {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return label.text"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            label.text \u003d newValue"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 5,
      "Caryn Heng": 10,
      "E-Liang Tan": 30
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/View/MenuDataSource.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuDataSource.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class MenuDataSource: NSObject, UICollectionViewDataSource {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private unowned var collectionView: UICollectionView"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let itemCellIdentifier: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let addCellIdentifier: String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let headerIdentifier: String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private var frozenSectionIndex: Int?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let categoryViewModels: [MenuViewModel.MenuCategoryViewModel]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let showAddButton: Bool"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(collectionView: UICollectionView,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         categories: [MenuViewModel.MenuCategoryViewModel],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         showAddButton: Bool,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         itemCellIdentifier: String,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         addCellIdentifier: String,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         headerIdentifier: String) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.collectionView \u003d collectionView"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.categoryViewModels \u003d categories"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.showAddButton \u003d showAddButton"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.itemCellIdentifier \u003d itemCellIdentifier"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.addCellIdentifier \u003d addCellIdentifier"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.headerIdentifier \u003d headerIdentifier"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func freezeSection(forCategoryAtIndex index: Int) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if frozenSectionIndex !\u003d nil {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            unfreezeSection()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        frozenSectionIndex \u003d index"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionView.performBatchUpdates({"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            var indices \u003d IndexSet(integersIn: 0..\u003ccategoryViewModels.count)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            indices.remove(index)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            collectionView.deleteSections(indices)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        })"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func unfreezeSection() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let index \u003d frozenSectionIndex else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        frozenSectionIndex \u003d nil"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionView.performBatchUpdates({"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            var indices \u003d IndexSet(integersIn: 0..\u003ccategoryViewModels.count)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            indices.remove(index)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            collectionView.insertSections(indices)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }, completion: { [weak self] _ in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            self?.collectionView.scrollToItem(at: IndexPath(item: 0, section: index),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                              at: .centeredVertically,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                              animated: true)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        })"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Returns either the frozen section or the provided section"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func categoryViewModelToDisplay(forSection section: Int) -\u003e MenuViewModel.MenuCategoryViewModel {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return categoryViewModels[frozenSectionIndex ?? section]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func menuItemViewModel(at indexPath: IndexPath) -\u003e MenuViewModel.MenuItemViewModel? {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let items \u003d categoryViewModelToDisplay(forSection: indexPath.section).items"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard indexPath.item \u003c items.count else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return items[indexPath.item]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func numberOfSections(in collectionView: UICollectionView) -\u003e Int {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return frozenSectionIndex \u003d\u003d nil ? categoryViewModels.count : 1"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return categoryViewModelToDisplay(forSection: section).items.count + (showAddButton ? 1 : 0)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                        cellForItemAt indexPath: IndexPath) -\u003e UICollectionViewCell {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if showAddButton \u0026\u0026 indexPath.row \u003d\u003d collectionView.numberOfItems(inSection: indexPath.section) - 1 {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return collectionView.dequeueReusableCell(withReuseIdentifier: addCellIdentifier, for: indexPath)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cell \u003d collectionView.dequeueReusableCell(withReuseIdentifier: itemCellIdentifier, for: indexPath)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let itemCell \u003d cell as? MenuItemCollectionViewCell,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let itemModel \u003d menuItemViewModel(at: indexPath) else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                return cell"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        itemCell.set(name: itemModel.name)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return itemCell"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                        viewForSupplementaryElementOfKind kind: String,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                        at indexPath: IndexPath) -\u003e UICollectionReusableView {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let headerView \u003d collectionView"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            .dequeueReusableSupplementaryView(ofKind: UICollectionView.elementKindSectionHeader,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                              withReuseIdentifier: headerIdentifier,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                              for: indexPath)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let categoryHeaderView \u003d headerView as? MenuCategoryHeaderView else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return headerView"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categoryHeaderView.text \u003d categoryViewModelToDisplay(forSection: indexPath.section).name"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return categoryHeaderView"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 118
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/View/MenuDragHandlers.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuDragHandlers.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "private typealias DragLocalObject \u003d (section: Int, itemId: String)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - Drag"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuDragHandlerDelegate: class {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dragHandler(_ handler: MenuDragHandler, menuItemIdForIndexPath indexPath: IndexPath) -\u003e String?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dragHandler(_ handler: MenuDragHandler, willBeginDragSessionForCategoryAtIndex index: Int)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dragHandlerDidEndDragSession(_ handler: MenuDragHandler)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class MenuDragHandler: NSObject, UICollectionViewDragDelegate {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private weak var delegate: MenuDragHandlerDelegate?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(delegate: MenuDragHandlerDelegate) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.delegate \u003d delegate"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func dragItems(forIndexPath indexPath: IndexPath) -\u003e [UIDragItem] {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let menuItemId \u003d delegate?.dragHandler(self, menuItemIdForIndexPath: indexPath) else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return []"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let itemProvider \u003d NSItemProvider(item: menuItemId as NSSecureCoding,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                          typeIdentifier: MenuConstants.menuItemDragTypeIdentifier)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let dragItem \u003d UIDragItem(itemProvider: itemProvider)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        dragItem.localObject \u003d (section: indexPath.section, itemId: menuItemId) as DragLocalObject"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return [dragItem]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                        itemsForBeginning session: UIDragSession,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                        at indexPath: IndexPath) -\u003e [UIDragItem] {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return dragItems(forIndexPath: indexPath)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                        itemsForAddingTo session: UIDragSession,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                        at indexPath: IndexPath,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                        point: CGPoint) -\u003e [UIDragItem] {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return dragItems(forIndexPath: indexPath)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, dragSessionWillBegin session: UIDragSession) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let dragLocalObject \u003d session.items.first?.localObject as? DragLocalObject else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        delegate?.dragHandler(self, willBeginDragSessionForCategoryAtIndex: dragLocalObject.section)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, dragSessionDidEnd session: UIDragSession) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        delegate?.dragHandlerDidEndDragSession(self)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - Drop"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CategoryDropHandlerDelegate: class {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Delegate method that provides a drop target for the handler."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// - Returns: The drop target to be used by this drop handler."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dropHandlerDropTarget(_ handler: CategoryDropHandler) -\u003e UIView"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Delegate method that informs the drop handler whether a drop can be handled."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///     - handler: The calling handler"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///     - point: The point in the drop target returned by `dropHandlerDropTarget(_:)` where the menu items"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///         are hovering over."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// - Returns: Whether the menu items can be copied at `point`."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dropHandler(_ handler: CategoryDropHandler, canDropAt point: CGPoint) -\u003e Bool"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Delegate method that handles the dropping of menu items on the drop target."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///     - handler: The calling handler"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///     - menuItemIds: The menu items that were dropped. May contain duplicates."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///     - point: The point in the drop target returned by `dropHandlerDropTarget(_:)` where the menu items"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///         were dropped on."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dropHandler(_ handler: CategoryDropHandler,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                     didDropMenuItemIds menuItemIds: [String],"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                     at point: CGPoint)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class CategoryDropHandler: NSObject, UIDropInteractionDelegate {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private weak var delegate: CategoryDropHandlerDelegate?"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(delegate: CategoryDropHandlerDelegate) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.delegate \u003d delegate"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dropInteraction(_ interaction: UIDropInteraction, canHandle session: UIDropSession) -\u003e Bool {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return session.hasItemsConforming(toTypeIdentifiers: [MenuConstants.menuItemDragTypeIdentifier])"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dropInteraction(_ interaction: UIDropInteraction, sessionDidUpdate session: UIDropSession) -\u003e UIDropProposal {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let delegate \u003d delegate else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return UIDropProposal(operation: .cancel)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let target \u003d delegate.dropHandlerDropTarget(self)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let locationInTarget \u003d session.location(in: target)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let canDrop \u003d delegate.dropHandler(self, canDropAt: locationInTarget)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return UIDropProposal(operation: canDrop ? .copy : .cancel)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dropInteraction(_ interaction: UIDropInteraction, performDrop session: UIDropSession) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let delegate \u003d delegate else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let menuItemIds: [String] \u003d session.items.compactMap { ($0.localObject as? DragLocalObject)?.itemId }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let target \u003d delegate.dropHandlerDropTarget(self)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let locationInTarget \u003d session.location(in: target)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        delegate.dropHandler(self, didDropMenuItemIds: menuItemIds, at: locationInTarget)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 127
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/View/MenuItemCollectionViewCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuItemCollectionViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class MenuItemCollectionViewCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let nameLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        label.numberOfLines \u003d 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        backgroundColor \u003d UIColor.Custom.lightGray"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        addSubview(nameLabel)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        nameLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.edges.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(name: String) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        nameLabel.text \u003d name"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 12,
      "E-Liang Tan": 25
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/View/MenuViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuViewControllerInput: MenuPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuViewControllerOutput {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add(menuItemIds: [String], toCategory categoryIndex: Int)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func remove(menuItemIds: [String], fromCategory categoryIndex: Int)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func getLegalActions(forCategoryAt index: Int)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func insert(newCategoryName: String, besideCategoryAt index: Int, onLeft: Bool)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func rename(categoryAt index: Int, to name: String)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func remove(categoryAt index: Int)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func select(menuItemId: String?, categoryIndex: Int)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reload()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class MenuViewController: UICollectionViewController {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private static let itemCellIdentifier \u003d \"itemCellIdentifier\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private static let itemAddCellIdentifier \u003d \"itemAddCellIdentifier\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private static let headerIdentifier \u003d \"headerIdentifier\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var output: MenuViewControllerOutput?"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var router: MenuRouterProtocol?"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Whether this view controller should update the category selector\u0027s selectedIndex."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    /// Should be set to false when the collection view is automatically scrolling."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private var enableCategorySelectionFeedback \u003d true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private lazy var categorySelector: CategorySelector \u003d {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let selector \u003d CategorySelector()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        selector.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        selector.selectorDelegate \u003d self"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        selector.addInteraction(UIDropInteraction(delegate: dropHandler))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return selector"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private var collectionViewDataSource: MenuDataSource? {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            collectionView.dataSource \u003d collectionViewDataSource"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            collectionView.reloadData()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private lazy var dragHandler \u003d MenuDragHandler(delegate: self)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private lazy var dropHandler \u003d CategoryDropHandler(delegate: self)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(stallId: String?,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         isEditable: Bool,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         mediator: MenuToParentOutput?,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         configurator: MenuConfigurator \u003d MenuConfigurator.shared) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(collectionViewLayout: UICollectionViewFlowLayout())"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configure(stallId: stallId, isEditable: isEditable, mediator: mediator, configurator: configurator)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Configurator"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configure(stallId: String?,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                           isEditable: Bool,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           mediator: MenuToParentOutput?,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                           configurator: MenuConfigurator \u003d MenuConfigurator.shared) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configurator.configure(stallId: stallId,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                               isEditable: isEditable,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                               viewController: self,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                               toParentMediator: mediator)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Disable content behind nav bar to allow"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // to report back when a header goes offscreen"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        edgesForExtendedLayout \u003d UIRectEdge()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionView.register(MenuItemCollectionViewCell.self,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                forCellWithReuseIdentifier: MenuViewController.itemCellIdentifier)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionView.register(MenuAddCollectionViewCell.self,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                forCellWithReuseIdentifier: MenuViewController.itemAddCellIdentifier)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionView.register(MenuCategoryHeaderView.self,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                forSupplementaryViewOfKind: UICollectionView.elementKindSectionHeader,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                withReuseIdentifier: MenuViewController.headerIdentifier)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionView.backgroundColor \u003d UIColor.Custom.paleGray"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionView.alwaysBounceVertical \u003d true"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if isEditable {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            collectionView.dragDelegate \u003d dragHandler"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if let layout \u003d collectionViewLayout as? UICollectionViewFlowLayout {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            layout.itemSize \u003d CGSize(width: 150, height: 100)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            layout.headerReferenceSize \u003d CGSize(width: collectionView.frame.size.width, height: 40)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            layout.sectionHeadersPinToVisibleBounds \u003d true"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        navigationItem.titleView \u003d categorySelector"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func viewWillAppear(_ animated: Bool) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.viewWillAppear(animated)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.reload()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func highlightCurrentCategory() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let currentCategoryIndex \u003d collectionView"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            .indexPathsForVisibleSupplementaryElements(ofKind: UICollectionView.elementKindSectionHeader)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            .map { $0.section }.min()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if categorySelector.selectedIndex !\u003d currentCategoryIndex {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            categorySelector.selectedIndex \u003d currentCategoryIndex"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - UICollectionViewDelegate"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuViewController {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard !collectionView.hasActiveDrag,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let categories \u003d collectionViewDataSource?.categoryViewModels else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let itemsInSection \u003d categories[indexPath.section].items"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let menuId \u003d indexPath.row \u003c itemsInSection.count ? itemsInSection[indexPath.item].id : nil"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output?.select(menuItemId: menuId, categoryIndex: indexPath.section)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func scrollViewDidScroll(_ scrollView: UIScrollView) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if enableCategorySelectionFeedback {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            highlightCurrentCategory()"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func scrollViewDidEndScrollingAnimation(_ scrollView: UIScrollView) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        enableCategorySelectionFeedback \u003d true"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Delay the category highlight as this callback seems to be called before the scroll view"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // actually ends its animation. Calling highlightCurrentCategory when scrolling animation ends"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // also ensures that the correct category is highlighted if the user spams taps categories."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        DispatchQueue.main.asyncAfter(deadline: .now() + 0.01) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            self.highlightCurrentCategory()"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - MenuPresenterOutput"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuViewController: MenuViewControllerInput {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func displayMenu(viewModel: MenuViewModel, isEditable: Bool) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        title \u003d viewModel.stall.name"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categorySelector.selectedIndex \u003d 0"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categorySelector.categories \u003d viewModel.categories.map { $0.name }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionViewDataSource \u003d MenuDataSource(collectionView: collectionView,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                  categories: viewModel.categories,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                  showAddButton: isEditable,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                  itemCellIdentifier: MenuViewController.itemCellIdentifier,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                  addCellIdentifier: MenuViewController.itemAddCellIdentifier,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                  headerIdentifier: MenuViewController.headerIdentifier)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func promptNewCategoryName(index: Int, onLeft: Bool) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let okHandler \u003d { [unowned self] (result: String?) in"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            guard let result \u003d result else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                return"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            self.output?.insert(newCategoryName: result, besideCategoryAt: index, onLeft: onLeft)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let alert \u003d AlertHelper.makeAlertController(title: \"New Category Name\","
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                    message: nil,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                    textFieldText: \"\","
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                    okHandler: okHandler)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        present(alert, animated: true)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func promptRenameCategory(index: Int, oldName: String) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let okHandler \u003d { [unowned self] (result: String?) in"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            guard let result \u003d result else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                return"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            self.output?.rename(categoryAt: index, to: result)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let alert \u003d AlertHelper.makeAlertController(title: \"Rename \\\"\\(oldName)\\\"\","
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                    message: nil,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                    textFieldText: oldName,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                    okHandler: okHandler)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        present(alert, animated: true)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func display(actions: [MenuCategoryAction], forCategoryAt index: Int, name: String) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let sheet \u003d UIAlertController(title: nil, message: nil, preferredStyle: .actionSheet)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if actions.contains(.insertLeft) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let action \u003d UIAlertAction(title: \"Insert New Category on Left\", style: .default) { [unowned self] _ in"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                self.promptNewCategoryName(index: index, onLeft: true)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            sheet.addAction(action)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if actions.contains(.insertRight) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let action \u003d UIAlertAction(title: \"Insert New Category on Right\", style: .default) { [unowned self] _ in"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                self.promptNewCategoryName(index: index, onLeft: false)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            sheet.addAction(action)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if actions.contains(.rename) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let action \u003d UIAlertAction(title: \"Rename\", style: .default) { [unowned self] _ in"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                self.promptRenameCategory(index: index, oldName: name)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            sheet.addAction(action)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if actions.contains(.remove) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let action \u003d UIAlertAction(title: \"Delete Category\", style: .destructive) { [unowned self] _ in"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                self.output?.remove(categoryAt: index)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            sheet.addAction(action)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        sheet.popoverPresentationController?.sourceView \u003d categorySelector.selectedButton"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        present(sheet, animated: true)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func displayDetail(forMenuItemId id: String?, isEditable: Bool) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        router?.navigateToMenuDetail(menuId: id, isEditable: isEditable)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - CategorySelectorDelegate"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuViewController: CategorySelectorDelegate {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func scrollToCategory(atIndex idx: Int) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let indexPath \u003d IndexPath(item: 0, section: idx)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let headerLayout \u003d collectionView.layoutAttributesForSupplementaryElement("
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            ofKind: UICollectionView.elementKindSectionHeader,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            at: indexPath) else {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                return"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        enableCategorySelectionFeedback \u003d false"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        var offset: CGPoint \u003d .zero"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // First item location necessary. Without this, when scrolling up, the collection view will only"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // scroll until the header is just visible. If the layout attr is nil, that means that the section"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // is empty and there\u0027s no need to correct for it."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if let firstItemOrigin \u003d collectionView.layoutAttributesForItem(at: indexPath)?.frame.origin {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            offset \u003d CGPoint(x: firstItemOrigin.x,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                             y: firstItemOrigin.y - headerLayout.frame.size.height)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            offset \u003d headerLayout.frame.origin"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionView.setContentOffset(offset, animated: true)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func presentActionsForCategory(atIndex idx: Int) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output?.getLegalActions(forCategoryAt: idx)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func categorySelector(_ selector: CategorySelector,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                          didSelectCategory category: String,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                          at idx: Int,"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                          wasAlreadySelected: Bool) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if wasAlreadySelected {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            presentActionsForCategory(atIndex: idx)"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            scrollToCategory(atIndex: idx)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - DragHandlerDelegate"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuViewController: MenuDragHandlerDelegate {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dragHandler(_ handler: MenuDragHandler, menuItemIdForIndexPath indexPath: IndexPath) -\u003e String? {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return collectionViewDataSource?.menuItemViewModel(at: indexPath)?.id"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dragHandler(_ handler: MenuDragHandler, willBeginDragSessionForCategoryAtIndex index: Int) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        enableCategorySelectionFeedback \u003d false"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionViewDataSource?.freezeSection(forCategoryAtIndex: index)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categorySelector.selectedIndex \u003d index"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categorySelector.isRemoving \u003d true"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categorySelector.isSelectionEnabled \u003d false"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dragHandlerDidEndDragSession(_ handler: MenuDragHandler) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        enableCategorySelectionFeedback \u003d true"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        collectionViewDataSource?.unfreezeSection()"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categorySelector.isRemoving \u003d false"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        categorySelector.isSelectionEnabled \u003d true"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - CategoryDropHandlerDelegate"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuViewController: CategoryDropHandlerDelegate {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dropHandlerDropTarget(_ handler: CategoryDropHandler) -\u003e UIView {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return categorySelector"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dropHandler(_ handler: CategoryDropHandler, canDropAt point: CGPoint) -\u003e Bool {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return categorySelector.categoryInfo(atPoint: point) !\u003d nil"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func dropHandler(_ handler: CategoryDropHandler,"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                     didDropMenuItemIds menuItemIds: [String],"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                     at point: CGPoint) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let (categoryIndex, isRemove) \u003d categorySelector.categoryInfo(atPoint: point) else {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if isRemove {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            output?.remove(menuItemIds: menuItemIds, fromCategory: categoryIndex)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            output?.add(menuItemIds: menuItemIds, toCategory: categoryIndex)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 15,
      "Caryn Heng": 6,
      "E-Liang Tan": 315
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/ViewModel/MenuViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "enum MenuCategoryAction {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    case insertLeft"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    case insertRight"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    case rename"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    case remove"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "struct MenuViewModel {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    struct MenuStallViewModel {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    struct MenuDiscountViewModel {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // TODO: Display price modification"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    struct MenuItemViewModel {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let id: String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let imageURL: String?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let price: Int"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let discounts: [MenuDiscountViewModel]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    struct MenuCategoryViewModel {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let items: [MenuItemViewModel]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let stall: MenuStallViewModel"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let categories: [MenuCategoryViewModel]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 1,
      "E-Liang Tan": 40
    }
  },
  {
    "path": "NAME/Scenes/Common/Menu/Worker/MenuWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  MenuWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class MenuWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 12
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/Configurator/MenuAddonsConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuAddonsConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let shared: MenuAddonsConfigurator \u003d MenuAddonsConfigurator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func configure(viewController: MenuAddonsViewController,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                   menuId: String,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                   isEditable: Bool,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                   toParentMediator: MenuAddonsToParentOutput?) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let router \u003d MenuAddonsRouter(viewController: viewController)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let presenter \u003d MenuAddonsPresenter(output: viewController)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let interactor \u003d MenuAddonsInteractor(output: presenter,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                              menuId: menuId,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                              isEditable: isEditable,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                              toParentMediator: toParentMediator)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        toParentMediator?.menuAddonsInteractor \u003d interactor"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 32
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/Interactor/MenuAddonsInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: Interscene interactor IO"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsFromParentInput: class {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(comment: String)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(price: Int)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsToParentOutput: class {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var menuAddonsInteractor: MenuAddonsFromParentInput? { get set }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: Intrascene interactor IO"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsInteractorInput: MenuAddonsViewControllerOutput {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsInteractorOutput {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func present(optionValues: [MenuAddonsInteractor.OptionValue], basePrice: Int, quantity: Int,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                 addOns: [IndividualMenuItem], selectedAddonsIndices: Set\u003cInt\u003e)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuAddonsInteractor: MenuAddonsFromParentInput {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let shoppingCart: ShoppingCart"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    struct OptionValue {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let option: MenuItemOption"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        var value: OrderItemOptionValue"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let output: MenuAddonsInteractorOutput"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let worker: MenuAddonsWorker"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private weak var toParentMediator: MenuAddonsToParentOutput?"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let addOns: [IndividualMenuItem]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var selectedAddonsIndices: Set\u003cInt\u003e \u003d []"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var optionValues: [OptionValue]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var basePrice: Int"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var quantity: Int \u003d 1"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var menuItem: IndividualMenuItem?"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var comment: String \u003d \"\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let isEditable: Bool"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(output: MenuAddonsInteractorOutput,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         menuId: String,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         isEditable: Bool,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         injector: DependencyInjector \u003d appDefaultInjector,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         toParentMediator: MenuAddonsToParentOutput?,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         worker: MenuAddonsWorker \u003d MenuAddonsWorker()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.isEditable \u003d isEditable"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.toParentMediator \u003d toParentMediator"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let menuDisplayable \u003d deps.storageManager.getMenuDisplayable(id: menuId) else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            fatalError(\"Initialising MenuAddonsInteractor with non-existent menu id\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        optionValues \u003d menuDisplayable.options.map { OptionValue(option: $0, value: $0.defaultValue) }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        basePrice \u003d menuDisplayable.price"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if let individualMenuItem \u003d menuDisplayable as? IndividualMenuItem {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            addOns \u003d Array(individualMenuItem.addOns)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuItem \u003d individualMenuItem"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            addOns \u003d []"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(comment: String) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.comment \u003d comment"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(price: Int) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        basePrice \u003d price"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsInteractorInput"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsInteractor: MenuAddonsViewControllerOutput {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func deleteValue(section: Int, item: Int) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let optionValue \u003d optionValues[section]"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            switch (optionValue.option.options, optionValue.option.defaultValue, optionValue.value) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case (.multipleChoice(var choices), .multipleChoice(let defaultValue), .multipleChoice(let value)):"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                choices.remove(at: item)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.options \u003d .multipleChoice(choices)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let newDefaultValue \u003d adjustIndex(defaultValue, deletedIndex: item) ?? (choices.count - 1)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.defaultValue \u003d .multipleChoice(newDefaultValue)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let newValue \u003d adjustIndex(value, deletedIndex: item) ?? (choices.count - 1)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].value \u003d .multipleChoice(newValue)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case (.multipleResponse(var choices), .multipleResponse(let defaultValue), .multipleResponse(let value)):"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                choices.remove(at: item)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.options \u003d .multipleResponse(choices)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let newDefaultValue \u003d Set(defaultValue.compactMap { adjustIndex($0, deletedIndex: item) })"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.defaultValue \u003d .multipleResponse(newDefaultValue)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let newValue \u003d Set(value.compactMap { adjustIndex($0, deletedIndex: item) })"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].value \u003d .multipleResponse(newValue)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                break"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            passValueToPresenter()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func adjustIndex(_ index: Int, deletedIndex: Int) -\u003e Int? {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if index \u003d\u003d deletedIndex {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else if index \u003e deletedIndex {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return index - 1"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return index"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func moveValue(section: Int, fromItem: Int, toItem: Int) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let optionValue \u003d optionValues[section]"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            switch (optionValue.option.options, optionValue.option.defaultValue, optionValue.value) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case (.multipleChoice(var choices), .multipleChoice(let defaultValue), .multipleChoice(let value)):"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let choice \u003d choices.remove(at: fromItem)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                choices.insert(choice, at: toItem)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.options \u003d .multipleChoice(choices)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.defaultValue \u003d"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    .multipleChoice(adjustIndex(defaultValue, fromItem: fromItem, toItem: toItem))"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].value \u003d .multipleChoice(adjustIndex(value, fromItem: fromItem, toItem: toItem))"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case (.multipleResponse(var choices), .multipleResponse(let defaultValue), .multipleResponse(let value)):"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let choice \u003d choices.remove(at: fromItem)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                choices.insert(choice, at: toItem)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.options \u003d .multipleResponse(choices)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let newDefaultValue \u003d Set(defaultValue.map { adjustIndex($0, fromItem: fromItem, toItem: toItem) })"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let newValue \u003d Set(value.map { adjustIndex($0, fromItem: fromItem, toItem: toItem) })"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.defaultValue \u003d .multipleResponse(newDefaultValue)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].value \u003d .multipleResponse(newValue)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                break"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func adjustIndex(_ index: Int, fromItem: Int, toItem: Int) -\u003e Int {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if index \u003d\u003d fromItem {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return toItem"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else if index \u003e fromItem \u0026\u0026 index \u003c\u003d toItem {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return index - 1"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else if index \u003c fromItem \u0026\u0026 index \u003e\u003d toItem {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return index + 1"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return index"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reorderUp(section: Int) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let menuItem \u003d menuItem, section \u003e 0 else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuItem.options.swapAt(section, section - 1)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        optionValues.swapAt(section, section - 1)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reorderDown(section: Int) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let menuItem \u003d menuItem, section + 1 \u003c optionValues.count else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuItem.options.swapAt(section, section + 1)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        optionValues.swapAt(section, section + 1)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addOption(type: MenuItemOptionType.MetaType, name: String, price: String?) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard name !\u003d \"\", let menuItem \u003d menuItem else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let menuItemOption: MenuItemOption"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch type {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .boolean:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            guard let price \u003d price?.asPriceInt() else {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuItemOption \u003d MenuItemOption(name: name, options: .boolean(price: price), defaultValue: .boolean(false))"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .quantity:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            guard let price \u003d price?.asPriceInt() else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuItemOption \u003d MenuItemOption(name: name, options: .quantity(price: price), defaultValue: .quantity(0))"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleChoice:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuItemOption \u003d MenuItemOption(name: name, options: .multipleChoice([]), defaultValue: .multipleChoice(-1))"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleResponse:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuItemOption \u003d MenuItemOption(name: name, options: .multipleResponse([]), defaultValue: .multipleResponse([]))"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try? deps.storageManager.writeTransaction { manager in"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            manager.add(menuItemOption, update: false)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuItem.options.insert(menuItemOption, at: 0)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        optionValues.insert(OptionValue(option: menuItemOption, value: menuItemOption.defaultValue), at: 0)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addChoice(section: Int, name: String, price: String) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard name !\u003d \"\", let price \u003d price.asPriceInt() else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            switch optionValues[section].option.options {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case var .multipleChoice(choices):"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                if choices.isEmpty {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    optionValues[section].option.defaultValue \u003d .multipleChoice(0)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    optionValues[section].value \u003d .multipleChoice(0)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                choices.append((name: name, price: price))"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.options \u003d .multipleChoice(choices)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case var .multipleResponse(choices):"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                choices.append((name: name, price: price))"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[section].option.options \u003d .multipleResponse(choices)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                break"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func finalizeOrderItem(diningOption: OrderItem.DiningOption) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO handle SetMenuItem"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let menuItem \u003d menuItem else {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let orderItem \u003d OrderItem(order: nil, menuItem: menuItem, quantity: quantity, comment: comment, diningOption: diningOption)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        deps.shoppingCart.addOrderItem(orderItem)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func updateQuantity(_ quantity: Int) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func updateValue(at index: Int, with valueIndexOrQuantity: Int) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if index \u003c optionValues.count {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            updateOptionValue(at: index, with: valueIndexOrQuantity)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            updateAddons(with: valueIndexOrQuantity)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func updateOptionValue(at index: Int, with valueIndexOrQuantity: Int) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch optionValues[index].option.options {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .boolean:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let boolean \u003d MenuAddonsConstants.booleanChoices[valueIndexOrQuantity]"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            optionValues[index].value \u003d .boolean(boolean)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .quantity:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            optionValues[index].value \u003d .quantity(valueIndexOrQuantity)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleChoice:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            optionValues[index].value \u003d .multipleChoice(valueIndexOrQuantity)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleResponse:"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            if case var .multipleResponse(choices) \u003d optionValues[index].value {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                if choices.contains(valueIndexOrQuantity) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    choices.remove(valueIndexOrQuantity)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    choices.insert(valueIndexOrQuantity)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[index].value \u003d .multipleResponse(choices)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if isEditable {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            // TODO handle error"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                optionValues[index].option.defaultValue \u003d optionValues[index].value"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func updateAddons(with valueIndex: Int) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if selectedAddonsIndices.contains(valueIndex) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            selectedAddonsIndices.remove(valueIndex)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            selectedAddonsIndices.insert(valueIndex)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reset() {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        optionValues \u003d optionValues.map { OptionValue(option: $0.option, value: $0.option.defaultValue) }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        selectedAddonsIndices \u003d []"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reset(section: Int) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if section \u003c optionValues.count {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let optionValue \u003d optionValues[section]"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            optionValues[section] \u003d OptionValue(option: optionValue.option, value: optionValue.option.defaultValue)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            selectedAddonsIndices \u003d []"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func loadOptions() {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        passValueToPresenter()"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func passValueToPresenter() {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.present(optionValues: optionValues,"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                       basePrice: basePrice,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                       quantity: quantity,"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                       addOns: addOns,"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                       selectedAddonsIndices: selectedAddonsIndices)"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - Dependency Injection"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    fileprivate func dependencies() -\u003e MenuAddonsInteractor.Dependencies {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return MenuAddonsInteractor.Dependencies(storageManager: storageManager, shoppingCart: shoppingCart)"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 342
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/Presenter/MenuAddonsPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsPresenterInput: MenuAddonsInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsPresenterOutput: class {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func display(viewModel: MenuAddonsViewModel)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuAddonsPresenter {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private(set) unowned var output: MenuAddonsPresenterOutput"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(output: MenuAddonsPresenterOutput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsPresenterInput"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsPresenter: MenuAddonsPresenterInput {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func present(optionValues: [MenuAddonsInteractor.OptionValue], basePrice: Int, quantity: Int,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                 addOns: [IndividualMenuItem], selectedAddonsIndices: Set\u003cInt\u003e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let totalPrice \u003d calculateTotalPrice(optionValues: optionValues,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                             addOns: addOns,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                             selectedAddonsIndices: selectedAddonsIndices,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                             basePrice: basePrice,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                             quantity: quantity)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let optionsViewModel \u003d makeMenuOptionViewModels(fromOptionValues: optionValues) +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            [makeMenuOptionViewModel(fromAddOns: addOns, selectedIndices: selectedAddonsIndices)]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let viewModel \u003d MenuAddonsViewModel(options: optionsViewModel,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            totalPrice: totalPrice,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            quantity: quantity)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.display(viewModel: viewModel)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func makeMenuOptionViewModels(fromOptionValues optionValues: [MenuAddonsInteractor.OptionValue])"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        -\u003e [MenuAddonsViewModel.MenuOptionViewModel] {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return optionValues.map { optionValue -\u003e MenuAddonsViewModel.MenuOptionViewModel in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let name \u003d optionValue.option.name"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            switch (optionValue.option.options, optionValue.value) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case let (.boolean(price), .boolean(value)):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let choices: [MenuAddonsViewModel.Choice] \u003d MenuAddonsConstants.booleanChoices.enumerated()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    .map { index, choice in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        return (name: MenuAddonsConstants.booleanChoicesTitle[index],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                price: (choice ? price : 0).formattedAsPrice())"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard let choiceIndex \u003d MenuAddonsConstants.booleanChoices.firstIndex(of: value) else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    fatalError(\"You dumbo! Check that MenuAddonsConstants.booleanChoices contains both true and false\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return MenuAddonsViewModel.MenuOptionViewModel(name: name,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                               type: .choices(choices, isEditable: false, isReorderable: false),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                               value: .choices([choiceIndex]))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case let (.multipleChoice(rawChoices), .multipleChoice(choiceIndex)):"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let choices \u003d rawChoices.map { (name: $0.name, price: $0.price.formattedAsPrice()) }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return MenuAddonsViewModel.MenuOptionViewModel(name: name,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                               type: .choices(choices,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                              isEditable: true,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                              isReorderable: true),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                               value: .choices([choiceIndex]))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case let (.quantity(price), .quantity(quantity)):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return MenuAddonsViewModel.MenuOptionViewModel(name: name,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                               type: .quantity(price: price.formattedAsPrice()),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                               value: .quantity(quantity))"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case let (.multipleResponse(rawChoices), .multipleResponse(selectedChoices)):"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let choices \u003d rawChoices.map { (name: $0.name, price: $0.price.formattedAsPrice()) }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return MenuAddonsViewModel.MenuOptionViewModel(name: name,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                               type: .choices(choices,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                              isEditable: true,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                              isReorderable: true),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                               value: .choices(selectedChoices))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                fatalError(\"Inconsistent MenuItemOption\u0027s options and defaultValue\")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func makeMenuOptionViewModel(fromAddOns addOns: [IndividualMenuItem],"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         selectedIndices: Set\u003cInt\u003e) -\u003e MenuAddonsViewModel.MenuOptionViewModel {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let choices \u003d addOns.map { (name: $0.name, price: $0.price.formattedAsPrice()) }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return MenuAddonsViewModel.MenuOptionViewModel(name: MenuAddonsConstants.addOnsOptionTitle,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                       type: .choices(choices, isEditable: true, isReorderable: false),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                       value: .choices(selectedIndices))"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func calculateTotalPrice(optionValues: [MenuAddonsInteractor.OptionValue],"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                     addOns: [IndividualMenuItem],"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                     selectedAddonsIndices: Set\u003cInt\u003e,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                     basePrice: Int,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                     quantity: Int) -\u003e String {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let optionPrice \u003d optionValues.map { optionValue -\u003e Int in"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            switch (optionValue.option.options, optionValue.value) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case let (.boolean(price: price), .boolean(boolean)):"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return boolean ? price : 0"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case let (.quantity(price: price), .quantity(quantity)):"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return price * quantity"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case let (.multipleChoice(choices), .multipleChoice(choiceIndex)):"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard choiceIndex !\u003d -1 else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return 0"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return choices[choiceIndex].price"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case let (.multipleResponse(choices), .multipleResponse(selectedChoices)):"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return selectedChoices.map { choices[$0].price }.reduce(0, +)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return 0"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }.reduce(0, +)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let addOnsPrice \u003d selectedAddonsIndices.map { addOns[$0].price }.reduce(0, +)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let priceForOne \u003d basePrice + optionPrice + addOnsPrice"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let totalPrice \u003d priceForOne \u0026* quantity"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard totalPrice \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return \"ð¤\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return totalPrice.formattedAsPrice()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 124
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/Router/MenuAddonsRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var viewController: MenuAddonsViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func navigateBack()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuAddonsRouter {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var viewController: MenuAddonsViewController?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(viewController: MenuAddonsViewController?) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsRouterProtocol"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsRouter: MenuAddonsRouterProtocol {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func navigateBack() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController?.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 32
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsAddOptionDelegate.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsAddOptionDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuAddonsAddOptionDelegate: MenuAddonsTableViewCellProvider {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var delegate: MenuAddonsTableViewCellDelegate?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(delegate: MenuAddonsTableViewCellDelegate) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.delegate \u003d delegate"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func dequeueReusableCell(tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let reusableCell \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            tableView.dequeueReusableCell(withIdentifier: MenuAddonsTableViewAddCell.reuseIdentifier,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                          for: indexPath)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let cell \u003d reusableCell as? MenuAddonsTableViewAddCell else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return reusableCell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        cell.delegate \u003d self"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsTableViewAddCellDelegate"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsAddOptionDelegate: MenuAddonsTableViewAddCellDelegate {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addButtonDidTap(sender: UIButton) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.addOptionDidTap(sender: sender)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 36
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsCollectionViewAddCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsCollectionViewAddCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsCollectionViewAddCellDelegate: class {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addButtonDidTap()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuAddonsCollectionViewAddCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let reuseIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var addButton: UIButton \u003d {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIButton(type: .system)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitle(MenuAddonsConstants.addChoiceButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.titleLabel?.font \u003d .preferredFont(forTextStyle: .title1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addTarget(self, action: #selector(addButtonDidTap), for: .touchUpInside)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var delegate: MenuAddonsCollectionViewAddCellDelegate?"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubview(addButton)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.edges.equalToSuperview()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func addButtonDidTap() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.addButtonDidTap()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 50
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsCollectionViewCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsCollectionViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuAddonsCollectionViewCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let reuseIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // TODO use real image"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let imageView: UIImageView \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIImageView(frame: .zero)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.backgroundColor \u003d .gray"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let nameLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILabel(frame: .zero)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.textAlignment \u003d .center"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.font \u003d .preferredFont(forTextStyle: .callout)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.textColor \u003d UIColor.Custom.darkPurple"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let priceLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILabel(frame: .zero)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.textAlignment \u003d .center"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.font \u003d .preferredFont(forTextStyle: .subheadline)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.textColor \u003d UIColor.Custom.darkPurple"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override var isSelected: Bool {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            if isSelected {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                backgroundColor \u003d .white"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                backgroundColor \u003d MenuAddonsConstants.backgroundColor"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        layer.cornerRadius \u003d CornerRadiusConstants.subtleRadius"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        backgroundColor \u003d MenuAddonsConstants.backgroundColor"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        contentView.addSubview(imageView)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        contentView.addSubview(nameLabel)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        contentView.addSubview(priceLabel)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        nameLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(contentView.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(contentView.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(contentView.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        imageView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(nameLabel.snp.bottom).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(contentView.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(contentView.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        priceLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(imageView.snp.bottom).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.bottom.equalTo(contentView.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(contentView.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(contentView.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(name: String, price: String) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        nameLabel.text \u003d name"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        priceLabel.text \u003d price"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 77,
      "Caryn Heng": 6
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsCollectionViewDataSourceDelegate.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsCollectionViewDataSourceDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// swiftlint:disable type_name"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuAddonsCollectionViewDataSourceDelegate: NSObject, UICollectionViewDataSource, UICollectionViewDelegate {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// swiftlint:enable type_name"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let choices: [MenuAddonsViewModel.Choice]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let selectedIndexPaths: Set\u003cIndexPath\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let section: Int"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var delegate: MenuAddonsTableViewCellDelegate?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let isEditable: Bool"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let isReorderable: Bool"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(choices: [MenuAddonsViewModel.Choice], selectedIndices: Set\u003cInt\u003e, section: Int, isEditable: Bool, isReorderable: Bool) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.choices \u003d choices"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.selectedIndexPaths \u003d Set(selectedIndices.map { IndexPath(item: $0, section: 0) })"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.section \u003d section"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.isEditable \u003d isEditable"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.isReorderable \u003d isReorderable"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return choices.count + (isEditable ? 1 : 0)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, shouldSelectItemAt indexPath: IndexPath) -\u003e Bool {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        cellForItemAt indexPath: IndexPath) -\u003e UICollectionViewCell {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if indexPath.item \u003c choices.count {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let reusableCell \u003d collectionView"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                .dequeueReusableCell(withReuseIdentifier: MenuAddonsCollectionViewCell.reuseIdentifier,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                     for: indexPath)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            guard let cell \u003d reusableCell as? MenuAddonsCollectionViewCell else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return reusableCell"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let choice \u003d choices[indexPath.item]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            cell.set(name: choice.name, price: choice.price)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            cell.isSelected \u003d selectedIndexPaths.contains(indexPath)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let reusableCell \u003d collectionView"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                .dequeueReusableCell(withReuseIdentifier: MenuAddonsCollectionViewAddCell.reuseIdentifier,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                     for: indexPath)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            guard let cell \u003d reusableCell as? MenuAddonsCollectionViewAddCell else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return reusableCell"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            cell.delegate \u003d self"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, canMoveItemAt indexPath: IndexPath) -\u003e Bool {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return isReorderable"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        moveItemAt sourceIndexPath: IndexPath,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        to destinationIndexPath: IndexPath) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.moveValue(section: section, fromItem: sourceIndexPath.item, toItem: destinationIndexPath.item)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        targetIndexPathForMoveFromItemAt originalIndexPath: IndexPath,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        toProposedIndexPath proposedIndexPath: IndexPath) -\u003e IndexPath {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard proposedIndexPath.item \u003c choices.count else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return IndexPath(item: choices.count - 1, section: 0)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return proposedIndexPath"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsTableViewCellProvider"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsCollectionViewDataSourceDelegate: MenuAddonsTableViewCellProvider {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func dequeueReusableCell(tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let reusableCell \u003d tableView.dequeueReusableCell(withIdentifier: MenuAddonsTableViewChoiceCell.reuseIdentifier,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                      for: indexPath)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let cell \u003d reusableCell as? MenuAddonsTableViewChoiceCell else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return reusableCell"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        cell.set(dataSourceDelegate: self)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsCollectionViewAddCellDelegate"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsCollectionViewDataSourceDelegate: MenuAddonsCollectionViewAddCellDelegate {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addButtonDidTap() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.addCellDidTap(section: section)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsTableViewChoiceCellDelegate"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsCollectionViewDataSourceDelegate: MenuAddonsTableViewChoiceCellDelegate {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var shouldPreferSingleTap: Bool {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return isEditable"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionViewDidDoubleTap(_ collectionView: UICollectionView, gesture: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard isEditable \u0026\u0026 isReorderable, gesture.state \u003d\u003d .ended else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let location \u003d gesture.location(in: collectionView)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let indexPath \u003d collectionView.indexPathForItem(at: location) else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.deleteValue(section: section, item: indexPath.item, title: choices[indexPath.item].name)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionViewDidLongPress(_ collectionView: UICollectionView, gesture: UILongPressGestureRecognizer) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard isEditable \u0026\u0026 isReorderable else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let location \u003d gesture.location(in: collectionView)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch gesture.state {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .began:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            guard let indexPath \u003d collectionView.indexPathForItem(at: location) else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            collectionView.beginInteractiveMovementForItem(at: indexPath)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .changed:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            collectionView.updateInteractiveMovementTargetPosition(location)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .ended:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            collectionView.endInteractiveMovement()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            collectionView.cancelInteractiveMovement()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionViewDidTap(_ collectionView: UICollectionView, gesture: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let location \u003d gesture.location(in: collectionView)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let indexPath \u003d collectionView.indexPathForItem(at: location) else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if indexPath.item \u003c choices.count {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            delegate?.valueDidSelect(section: section, itemOrQuantity: indexPath.item)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 153
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsFooterView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsFooterView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsFooterViewDelegate: class {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addButtonDidPress(sender: UIButton)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func quantityDidChange(newValue: Int)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuAddonsFooterView: UIView {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let priceLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILabel(frame: .zero)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.font \u003d .preferredFont(forTextStyle: .largeTitle)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.textAlignment \u003d .center"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.adjustsFontForContentSizeCategory \u003d true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let addButton: UIButton \u003d {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIButton(type: .system)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.backgroundColor \u003d UIColor.Custom.purple"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.layer.cornerRadius \u003d CornerRadiusConstants.standardRadius"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitle(MenuAddonsConstants.addButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.setTitleColor(.white, for: .normal)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.titleLabel?.font \u003d .preferredFont(forTextStyle: .title2)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addTarget(self, action: #selector(addButtonDidPress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let buttonView \u003d UIView()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var quantityView: QuantityView \u003d {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d QuantityView(quantity: 1, minimum: 0)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.delegate \u003d self"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var stackView: UIStackView \u003d {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let result \u003d UIStackView(arrangedSubviews: [quantityView, priceLabel, buttonView])"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.axis \u003d .horizontal"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.distribution \u003d .fillEqually"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var delegate: MenuAddonsFooterViewDelegate?"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var price: String? {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return priceLabel.text"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            priceLabel.text \u003d newValue"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(isEditable: Bool) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(frame: .zero)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        backgroundColor \u003d MenuAddonsConstants.backgroundColor"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addButton.isHidden \u003d isEditable"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubviews()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func addSubviews() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(stackView)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        buttonView.addSubview(addButton)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        stackView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.edges.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(ButtonConstants.mediumButtonHeight)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.centerY.equalToSuperview()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview().offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview().offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        assertionFailure(\"This should not be called without Storyboard.\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func addButtonDidPress(sender: UIButton) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.addButtonDidPress(sender: sender)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - QuantityViewDelegate"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsFooterView: QuantityViewDelegate {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func valueDidChange(newValue: Int) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.quantityDidChange(newValue: newValue)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 85,
      "Caryn Heng": 21
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsQuantityViewDelegate.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsQuantityViewDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuAddonsQuantityViewDelegate: QuantityViewDelegate, MenuAddonsTableViewCellProvider {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let price: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private(set) var quantity: Int"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let section: Int"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var delegate: MenuAddonsTableViewCellDelegate?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let isEditable: Bool"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(price: String, quantity: Int, section: Int, isEditable: Bool) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.price \u003d price"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.section \u003d section"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.isEditable \u003d isEditable"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func dequeueReusableCell(tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let reusableCell \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            tableView.dequeueReusableCell(withIdentifier: MenuAddonsTableViewQuantityCell.reuseIdentifier,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                          for: indexPath)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let cell \u003d reusableCell as? MenuAddonsTableViewQuantityCell else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return reusableCell"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        cell.set(dataSourceDelegate: self)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func valueDidChange(newValue: Int) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        quantity \u003d newValue"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.valueDidSelect(section: section, itemOrQuantity: newValue)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 43
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsTableViewAddCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsTableViewAddCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsTableViewAddCellDelegate: class {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addButtonDidTap(sender: UIButton)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuAddonsTableViewAddCell: UITableViewCell {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let reuseIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var addButton: UIButton \u003d {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIButton(type: .system)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.backgroundColor \u003d UIColor.Custom.paleGray"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitleColor(UIColor.Custom.purple, for: .normal)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitle(MenuAddonsConstants.addChoiceButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.titleLabel?.font \u003d .preferredFont(forTextStyle: .title1)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addTarget(self, action: #selector(addButtonDidTap(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var delegate: MenuAddonsTableViewAddCellDelegate?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(style: style, reuseIdentifier: reuseIdentifier)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubview(addButton)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.edges.equalToSuperview()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func addButtonDidTap(sender: UIButton) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.addButtonDidTap(sender: sender)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 52
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsTableViewChoiceCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsTableViewChoiceCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsTableViewChoiceCellDelegate: class {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionViewDidLongPress(_ collectionView: UICollectionView, gesture: UILongPressGestureRecognizer)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionViewDidTap(_ collectionView: UICollectionView, gesture: UITapGestureRecognizer)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func collectionViewDidDoubleTap(_ collectionView: UICollectionView, gesture: UITapGestureRecognizer)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var shouldPreferSingleTap: Bool { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuAddonsTableViewChoiceCell: UITableViewCell {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let reuseIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let collectionViewCellIdentifier: String \u003d \"collectionViewCellIdentifier\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var longPressRecognizer: UILongPressGestureRecognizer \u003d {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILongPressGestureRecognizer(target: self,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                  action: #selector(collectionViewDidLongPress(gesture:)))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.delegate \u003d self"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var tapRecognizer: UITapGestureRecognizer \u003d {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UITapGestureRecognizer(target: self,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            action: #selector(collectionViewDidTap(gesture:)))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.delegate \u003d self"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var doubleTapRecognizer: UITapGestureRecognizer \u003d {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UITapGestureRecognizer(target: self,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            action: #selector(collectionViewDidDoubleTap(gesture:)))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.numberOfTapsRequired \u003d 2"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.delegate \u003d self"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var collectionView: UICollectionView \u003d {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let layout \u003d UICollectionViewFlowLayout()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        layout.scrollDirection \u003d .horizontal"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        layout.itemSize \u003d MenuAddonsConstants.addonsSize"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UICollectionView(frame: .zero, collectionViewLayout: layout)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.register(MenuAddonsCollectionViewCell.self,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        forCellWithReuseIdentifier: MenuAddonsCollectionViewCell.reuseIdentifier)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.register(MenuAddonsCollectionViewAddCell.self,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        forCellWithReuseIdentifier: MenuAddonsCollectionViewAddCell.reuseIdentifier)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.backgroundColor \u003d MenuAddonsConstants.backgroundColor"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.allowsMultipleSelection \u003d true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addGestureRecognizer(longPressRecognizer)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addGestureRecognizer(tapRecognizer)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addGestureRecognizer(doubleTapRecognizer)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private weak var delegate: MenuAddonsTableViewChoiceCellDelegate?"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(style: style, reuseIdentifier: reuseIdentifier)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubview(collectionView)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        collectionView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.edges.equalTo(safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(dataSourceDelegate: MenuAddonsCollectionViewDataSourceDelegate) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate \u003d dataSourceDelegate"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        collectionView.dataSource \u003d dataSourceDelegate"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        collectionView.delegate \u003d dataSourceDelegate"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        collectionView.reloadData()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func collectionViewDidLongPress(gesture: UILongPressGestureRecognizer) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.collectionViewDidLongPress(collectionView, gesture: gesture)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func collectionViewDidTap(gesture: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.collectionViewDidTap(collectionView, gesture: gesture)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func collectionViewDidDoubleTap(gesture: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.collectionViewDidDoubleTap(collectionView, gesture: gesture)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                    shouldRequireFailureOf otherGestureRecognizer: UIGestureRecognizer) -\u003e Bool {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let shouldPreferSingleTap \u003d delegate?.shouldPreferSingleTap else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if gestureRecognizer \u003d\u003d tapRecognizer \u0026\u0026 otherGestureRecognizer \u003d\u003d doubleTapRecognizer \u0026\u0026 shouldPreferSingleTap {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 112,
      "Caryn Heng": 1
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsTableViewHeaderView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsTableViewHeaderView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsTableViewHeaderViewDelegate: class {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func resetButtonDidTap(section: Int)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reorderUpButtonDidTap(section: Int)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reorderDownButtonDidTap(section: Int)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuAddonsTableViewHeaderView: UITableViewHeaderFooterView {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var delegate: MenuAddonsTableViewHeaderViewDelegate?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var section: Int \u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var resetButton: UIButton \u003d {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIButton(type: .system)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitle(MenuAddonsConstants.sectionResetButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.setTitleColor(UIColor.Custom.salmonRed, for: .normal)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addTarget(self, action: #selector(resetButtonDidTap), for: .touchUpInside)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var reorderUpButton: UIButton \u003d {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIButton(type: .system)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitle(MenuAddonsConstants.reorderUp, for: .normal)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addTarget(self, action: #selector(reorderUpButtonDidTap), for: .touchUpInside)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var reorderDownButton: UIButton \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIButton(type: .system)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitle(MenuAddonsConstants.reorderDown, for: .normal)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addTarget(self, action: #selector(reorderDownButtonDidTap), for: .touchUpInside)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override init(reuseIdentifier: String?) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(reuseIdentifier: reuseIdentifier)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        contentView.addSubview(resetButton)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        contentView.addSubview(reorderUpButton)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        contentView.addSubview(reorderDownButton)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func layoutSubviews() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.layoutSubviews()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let textLabel \u003d textLabel else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        resetButton.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalToSuperview().offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.centerY.equalTo(textLabel)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        reorderDownButton.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.centerY.equalTo(textLabel)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(resetButton.snp.leading).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        reorderUpButton.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.centerY.equalTo(textLabel)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(reorderDownButton.snp.leading).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(section: Int, title: String, isResettable: Bool, isReorderable: Bool) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.section \u003d section"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        textLabel?.text \u003d title"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        resetButton.isHidden \u003d !isResettable"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        reorderUpButton.isHidden \u003d !isReorderable"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        reorderDownButton.isHidden \u003d !isReorderable"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func resetButtonDidTap() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.resetButtonDidTap(section: section)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func reorderUpButtonDidTap() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.reorderUpButtonDidTap(section: section)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func reorderDownButtonDidTap() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.reorderDownButtonDidTap(section: section)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 101,
      "Caryn Heng": 1
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsTableViewQuantityCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsTableViewQuantityCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuAddonsTableViewQuantityCell: UITableViewCell {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let reuseIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let quantityView \u003d QuantityView(minimum: 0)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let priceLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILabel(frame: .zero)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.textColor \u003d .gray"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(style: style, reuseIdentifier: reuseIdentifier)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        backgroundColor \u003d MenuAddonsConstants.backgroundColor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubview(quantityView)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubview(priceLabel)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        quantityView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalToSuperview().offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.bottom.equalToSuperview()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        priceLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.centerY.equalToSuperview()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(quantityView.snp.trailing).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(dataSourceDelegate: MenuAddonsQuantityViewDelegate) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        quantityView.delegate \u003d dataSourceDelegate"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        quantityView.quantity \u003d dataSourceDelegate.quantity"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        priceLabel.text \u003d \"(\\(dataSourceDelegate.price) each)\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 51,
      "Caryn Heng": 1
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/View/MenuAddonsViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsViewControllerInput: MenuAddonsPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsViewControllerOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func loadOptions()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reset()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reset(section: Int)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func updateValue(at index: Int, with valueIndexOrQuantity: Int)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func updateQuantity(_ quantity: Int)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addChoice(section: Int, name: String, price: String)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addOption(type: MenuItemOptionType.MetaType, name: String, price: String?)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func finalizeOrderItem(diningOption: OrderItem.DiningOption)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reorderUp(section: Int)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reorderDown(section: Int)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func moveValue(section: Int, fromItem: Int, toItem: Int)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func deleteValue(section: Int, item: Int)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsTableViewCellProvider: class {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func dequeueReusableCell(tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var delegate: MenuAddonsTableViewCellDelegate? { get set }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuAddonsTableViewCellDelegate: class {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func valueDidSelect(section: Int, itemOrQuantity: Int)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addCellDidTap(section: Int)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addOptionDidTap(sender: UIButton)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func moveValue(section: Int, fromItem: Int, toItem: Int)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func deleteValue(section: Int, item: Int, title: String)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuAddonsViewController: UIViewController {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let headerIdentifier \u003d \"headerIdentifier\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var output: MenuAddonsViewControllerOutput?"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var router: MenuAddonsRouterProtocol?"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var cellDelegates: [MenuAddonsTableViewCellProvider?] \u003d []"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var sectionNames: [(name: String, section: Int)] \u003d []"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var tableView: UITableView \u003d {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UITableView(frame: .zero, style: .grouped)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.delegate \u003d self"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.dataSource \u003d self"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.backgroundColor \u003d UIColor.Custom.paleGray"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.separatorStyle \u003d .none"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.allowsSelection \u003d false"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.rowHeight \u003d MenuAddonsConstants.addonsSize.height"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.estimatedRowHeight \u003d result.rowHeight"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.sectionFooterHeight \u003d 0.0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.sectionHeaderHeight \u003d MenuAddonsConstants.sectionHeaderHeight"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.register(MenuAddonsTableViewAddCell.self,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        forCellReuseIdentifier: MenuAddonsTableViewAddCell.reuseIdentifier)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.register(MenuAddonsTableViewChoiceCell.self,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        forCellReuseIdentifier: MenuAddonsTableViewChoiceCell.reuseIdentifier)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.register(MenuAddonsTableViewQuantityCell.self,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        forCellReuseIdentifier: MenuAddonsTableViewQuantityCell.reuseIdentifier)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.register(MenuAddonsTableViewHeaderView.self,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                        forHeaderFooterViewReuseIdentifier: headerIdentifier)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let dividerLine: UIView \u003d {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIView(frame: .zero)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.backgroundColor \u003d .lightGray"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var footerView: MenuAddonsFooterView \u003d {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d MenuAddonsFooterView(isEditable: isEditable)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.delegate \u003d self"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let isEditable: Bool"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(menuId: String,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         isEditable: Bool,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         mediator: MenuAddonsToParentOutput?,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         configurator: MenuAddonsConfigurator \u003d MenuAddonsConfigurator.shared) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.isEditable \u003d isEditable"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configure(menuId: menuId, mediator: mediator, configurator: configurator)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"This should not be called without Storyboard.\")"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configure(menuId: String,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                           mediator: MenuAddonsToParentOutput?,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                           configurator: MenuAddonsConfigurator \u003d MenuAddonsConfigurator.shared) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configurator.configure(viewController: self, menuId: menuId, isEditable: isEditable, toParentMediator: mediator)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        setupView()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubviews()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.loadOptions()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func setupView() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.backgroundColor \u003d MenuAddonsConstants.backgroundColor"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if !isEditable {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let resetBarButtonItem \u003d UIBarButtonItem(title: MenuAddonsConstants.resetButtonTitle,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                     style: .plain,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                     target: self,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                     action: #selector(resetButtonDidPress))"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            resetBarButtonItem.tintColor \u003d UIColor.Custom.salmonRed"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            navigationItem.rightBarButtonItem \u003d resetBarButtonItem"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func addSubviews() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(tableView)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(dividerLine)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(footerView)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        tableView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        dividerLine.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.height.equalTo(ConstraintConstants.dividerWidth)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(tableView.snp.bottom)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        footerView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.height.equalTo(MenuAddonsConstants.footerViewHeight)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(dividerLine.snp.bottom)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.bottom.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(view.safeAreaLayoutGuide)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func resetButtonDidPress() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.reset()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - UITableViewDataSource"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsViewController: UITableViewDataSource {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return 1"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let cellDelegate \u003d cellDelegates[indexPath.section] else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return UITableViewCell()"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return cellDelegate.dequeueReusableCell(tableView: tableView, cellForRowAt: indexPath)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return sectionNames[section].name"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return cellDelegates.count"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - UITableViewDelegate"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsViewController: UITableViewDelegate {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -\u003e UIView? {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let reusableView \u003d tableView.dequeueReusableHeaderFooterView(withIdentifier: headerIdentifier)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let headerView \u003d reusableView as? MenuAddonsTableViewHeaderView,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let title \u003d self.tableView(tableView, titleForHeaderInSection: section) else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Hide reset button when editable"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let isResettable \u003d !isEditable"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Hide reorder buttons on new option and addons, if editable"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let isReorderable \u003d isEditable \u0026\u0026 section !\u003d 0 \u0026\u0026 section !\u003d sectionNames.count - 1"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        headerView.set(section: sectionNames[section].section,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                       title: title,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                       isResettable: isResettable,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                       isReorderable: isReorderable)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        headerView.delegate \u003d self"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return headerView"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsTableViewHeaderViewDelegate"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsViewController: MenuAddonsTableViewHeaderViewDelegate {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func resetButtonDidTap(section: Int) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.reset(section: section)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reorderUpButtonDidTap(section: Int) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.reorderUp(section: section)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func reorderDownButtonDidTap(section: Int) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.reorderDown(section: section)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsFooterViewDelegate"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsViewController: MenuAddonsFooterViewDelegate {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func quantityDidChange(newValue: Int) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.updateQuantity(newValue)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addButtonDidPress(sender: UIButton) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let actionSheet \u003d UIAlertController(title: MenuAddonsConstants.diningOptionTitle,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            message: nil, preferredStyle: .actionSheet)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        actionSheet.popoverPresentationController?.sourceView \u003d sender"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        actionSheet.popoverPresentationController?.sourceRect \u003d sender.bounds"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        for case let (title: title, value: value) in MenuAddonsConstants.diningOptionLabels {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let action \u003d UIAlertAction(title: title, style: .default) { [weak self] _ in"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                self?.output?.finalizeOrderItem(diningOption: value)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                self?.router?.navigateBack()"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            actionSheet.addAction(action)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(actionSheet, animated: true, completion: nil)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsTableViewCellDelegate"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsViewController: MenuAddonsTableViewCellDelegate {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func deleteValue(section: Int, item: Int, title: String) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let message \u003d String(format: MenuAddonsConstants.deleteConfirmationMessage, title)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alert \u003d UIAlertController(title: MenuAddonsConstants.deleteConfirmationTitle,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                      message: message,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                      preferredStyle: .alert)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let deleteAction \u003d UIAlertAction(title: MenuAddonsConstants.deleteActionTitle,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         style: .destructive) { [unowned self] _ in"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self.output?.deleteValue(section: section, item: item)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        alert.addAction(deleteAction)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let cancelAction \u003d UIAlertAction(title: AlertConstants.cancelTitle, style: .cancel, handler: nil)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        alert.addAction(cancelAction)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func moveValue(section: Int, fromItem: Int, toItem: Int) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.output?.moveValue(section: section, fromItem: fromItem, toItem: toItem)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addOptionDidTap(sender: UIButton) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let actionSheet \u003d UIAlertController(title: MenuAddonsConstants.addOptionTypeTitle,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            message: nil, preferredStyle: .actionSheet)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        actionSheet.popoverPresentationController?.sourceView \u003d sender"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        actionSheet.popoverPresentationController?.sourceRect \u003d sender.bounds"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        for case let (name, value) in MenuAddonsConstants.addOptionTypeChoices {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let action \u003d UIAlertAction(title: name, style: .default) { [unowned self] _ in"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                self.newOptionAskName(type: value)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            actionSheet.addAction(action)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(actionSheet, animated: true, completion: nil)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func newOptionAskName(type: MenuItemOptionType.MetaType) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alert \u003d AlertHelper"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            .makeAlertController(title: MenuAddonsConstants.addOptionNameTitle,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                 message: nil,"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                 textFieldText: \"\") { [unowned self] text in"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard let text \u003d text else {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                if type.isPriceNeeded {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    self.newOptionAskPrice(type: type, name: text)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    self.output?.addOption(type: type, name: text, price: nil)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func newOptionAskPrice(type: MenuItemOptionType.MetaType, name: String) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alert \u003d AlertHelper"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            .makeAlertController(title: MenuAddonsConstants.addOptionPriceTitle,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                 message: nil,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                 textFieldText: MenuAddonsConstants.priceDefaultValue) { [unowned self] text in"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard let text \u003d text else {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                self.output?.addOption(type: type, name: name, price: text)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(alert, animated: false, completion: nil)"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addCellDidTap(section: Int) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let lastSection \u003d sectionNames.last?.section,"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let sectionName \u003d sectionNames.first(where: { $0.section \u003d\u003d section })?.name else {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard section !\u003d lastSection else {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let alert \u003d AlertHelper"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                .makeAlertController(title: MenuAddonsConstants.featureComingSoon,"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                     message: nil,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                     textFieldText: nil,"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                     showCancelButton: false) { _ in }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let title \u003d String(format: MenuAddonsConstants.addChoiceNameTitle, sectionName)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        newChoiceAskName(section: section, title: title)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func newChoiceAskName(section: Int, title: String) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alert \u003d AlertHelper.makeAlertController(title: title,"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                    message: MenuAddonsConstants.addChoiceNameMessage,"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                    textFieldText: \"\") { [unowned self] text in"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            guard let text \u003d text else {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self.newChoiceAskPrice(section: section, title: title, name: text)"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func newChoiceAskPrice(section: Int, title: String, name: String) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alert \u003d AlertHelper"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            .makeAlertController(title: title,"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                 message: MenuAddonsConstants.addChoicePriceMessage,"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                 textFieldText: MenuAddonsConstants.priceDefaultValue) { [unowned self] text in"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard let text \u003d text else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                self.output?.addChoice(section: section, name: name, price: text)"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func valueDidSelect(section: Int, itemOrQuantity: Int) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.updateValue(at: section, with: itemOrQuantity)"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddonsPresenterOutput"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuAddonsViewController: MenuAddonsViewControllerInput {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func display(viewModel: MenuAddonsViewModel) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        footerView.price \u003d viewModel.totalPrice"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        sectionNames \u003d (isEditable ? [(MenuAddonsConstants.addOptionSectionName, 0)] : []) +"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            viewModel.options.enumerated().map { ($0.element.name, $0.offset) }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        cellDelegates \u003d (isEditable ? [MenuAddonsAddOptionDelegate(delegate: self)] : []) +"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            viewModel.options.enumerated().map { arg -\u003e MenuAddonsTableViewCellProvider? in"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                let (section, option) \u003d arg"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                switch (option.type, option.value) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                case let (.quantity(price: price), .quantity(quantity)):"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    let provider \u003d MenuAddonsQuantityViewDelegate(price: price,"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                  quantity: quantity,"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                  section: section,"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                  isEditable: isEditable)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    provider.delegate \u003d self"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return provider"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                case let (.choices(choices, isEditable, isReorderable), .choices(choiceIndices)):"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    let provider \u003d MenuAddonsCollectionViewDataSourceDelegate(choices: choices,"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                              selectedIndices: choiceIndices,"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                              section: section,"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                              isEditable: isEditable \u0026\u0026 self.isEditable,"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                              isReorderable: isReorderable)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    provider.delegate \u003d self"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return provider"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return nil"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        tableView.reloadData()"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 383,
      "Caryn Heng": 3
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/ViewModel/MenuAddonsViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "struct MenuAddonsViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    typealias Choice \u003d (name: String, price: String)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    struct MenuOptionViewModel {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let type: MenuOptionTypeViewModel"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let value: MenuOptionValueViewModel"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    enum MenuOptionValueViewModel {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case quantity(Int)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case choices(Set\u003cInt\u003e)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    enum MenuOptionTypeViewModel {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case quantity(price: String)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case choices([Choice], isEditable: Bool, isReorderable: Bool)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let options: [MenuOptionViewModel]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let totalPrice: String"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let quantity: Int"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 30
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuAddons/Worker/MenuAddonsWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuAddonsWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuAddonsWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 12
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuDetail/Configurator/MenuDetailConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuDetailConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuDetailConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let shared: MenuDetailConfigurator \u003d MenuDetailConfigurator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func configure(viewController: MenuDetailViewController,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                   menuId: String?,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                   isEditable: Bool,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                   toParentMediator: MenuDetailToParentOutput?,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let toChildrenMediator \u003d MenuDetailIntersceneMediator()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let router \u003d MenuDetailRouter(viewController: viewController, mediator: toChildrenMediator)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let presenter \u003d MenuDetailPresenter(output: viewController)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let interactor \u003d MenuDetailInteractor(output: presenter,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                              menuId: menuId,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                              injector: injector,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                              toParentMediator: toParentMediator,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                              toChildrenMediator: toChildrenMediator)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        toParentMediator?.menuDetailInteractor \u003d interactor"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController.viewControllers \u003d ["
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            router.menuInfoViewController(menuId: interactor.menuId, isEditable: isEditable),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            router.menuAddonsViewController(menuId: interactor.menuId, isEditable: isEditable)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 36,
      "E-Liang Tan": 3
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuDetail/Interactor/MenuDetailInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuDetailInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Interscene interactor IO"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuDetailFromParentInput: class {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuDetailToParentOutput: class {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var menuDetailInteractor: MenuDetailFromParentInput? { get set }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func handleNewMenuItem(id: String)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Intrascene interactor IO"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol MenuDetailInteractorInput: MenuDetailViewControllerOutput {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuDetailInteractorOutput {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuDetailInteractor {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let output: MenuDetailInteractorOutput"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let worker: MenuDetailWorker"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let toChildrenMediator: MenuDetailIntersceneMediator"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let menuId: String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(output: MenuDetailInteractorOutput,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         menuId: String?,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         injector: DependencyInjector,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         toParentMediator: MenuDetailToParentOutput?,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         toChildrenMediator: MenuDetailIntersceneMediator,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         worker: MenuDetailWorker \u003d MenuDetailWorker()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.toChildrenMediator \u003d toChildrenMediator"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if let menuId \u003d menuId {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self.menuId \u003d menuId"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let menuItem \u003d IndividualMenuItem(name: MenuDetailConstants.defaultMenuItemName, price: 0)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            try? deps.storageManager.writeTransaction { manager in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                manager.add(menuItem, update: true)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            self.menuId \u003d menuItem.id"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            toParentMediator?.handleNewMenuItem(id: self.menuId)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuDetailInteractorInput"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuDetailInteractor: MenuDetailViewControllerOutput {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - MenuDetailFromParentInput"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension MenuDetailInteractor: MenuDetailFromParentInput {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - Dependency Injection"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    fileprivate func dependencies() -\u003e MenuDetailInteractor.Dependencies {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return MenuDetailInteractor.Dependencies(storageManager: storageManager)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 62,
      "E-Liang Tan": 18
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuDetail/Interactor/MenuDetailMediator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuDetailMediator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 17/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "typealias MenuDetailMediatorMenuInfoInput \u003d MenuInfoToParentOutput"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "typealias MenuDetailMediatorMenuInfoOutput \u003d MenuInfoFromParentInput"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "typealias MenuDetailMediatorMenuAddonsInput \u003d MenuAddonsToParentOutput"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "typealias MenuDetailMediatorMenuAddonsOutput \u003d MenuAddonsFromParentInput"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuDetailIntersceneMediator: MenuDetailMediatorMenuInfoInput, MenuDetailMediatorMenuAddonsInput {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var menuInfoInteractor: MenuDetailMediatorMenuInfoOutput?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var menuAddonsInteractor: MenuDetailMediatorMenuAddonsOutput?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(comment: String) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        menuAddonsInteractor?.set(comment: comment)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(price: Int) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        menuAddonsInteractor?.set(price: price)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 28
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuDetail/Presenter/MenuDetailPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuDetailPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuDetailPresenterInput: MenuDetailInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuDetailPresenterOutput: class {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuDetailPresenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private(set) unowned var output: MenuDetailPresenterOutput"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(output: MenuDetailPresenterOutput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuDetailPresenterInput"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuDetailPresenter: MenuDetailPresenterInput {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 29
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuDetail/Router/MenuDetailRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuDetailRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuDetailRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var viewController: MenuDetailViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func navigateBack()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func menuInfoViewController(menuId: String, isEditable: Bool) -\u003e UIViewController"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func menuAddonsViewController(menuId: String, isEditable: Bool) -\u003e UIViewController"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuDetailRouter {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var viewController: MenuDetailViewController?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    unowned var mediator: MenuDetailIntersceneMediator"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(viewController: MenuDetailViewController?, mediator: MenuDetailIntersceneMediator) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.mediator \u003d mediator"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuDetailRouterProtocol"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuDetailRouter: MenuDetailRouterProtocol {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func menuInfoViewController(menuId: String, isEditable: Bool) -\u003e UIViewController {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let menuInfoViewController \u003d MenuInfoViewController(menuId: menuId, isEditable: isEditable, mediator: mediator)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return UINavigationController(rootViewController: menuInfoViewController)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func menuAddonsViewController(menuId: String, isEditable: Bool) -\u003e UIViewController {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let menuAddonsViewController \u003d MenuAddonsViewController(menuId: menuId,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                isEditable: isEditable,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                                mediator: mediator)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return UINavigationController(rootViewController: menuAddonsViewController)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func navigateBack() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController?.dismiss(animated: true)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 48
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuDetail/View/MenuDetailViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuDetailViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuDetailViewControllerInput: MenuDetailPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuDetailViewControllerOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuDetailViewController: UISplitViewController {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var output: MenuDetailViewControllerOutput?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var router: MenuDetailRouterProtocol?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    /// Pass `nil` to `menuId` to create a new menu item"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(menuId: String?,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         isEditable: Bool,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         toParentMediator: MenuDetailToParentOutput?,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         configurator: MenuDetailConfigurator \u003d MenuDetailConfigurator.shared) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configure(configurator: configurator,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                  menuId: menuId,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                  isEditable: isEditable,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                  toParentMediator: toParentMediator)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"This should not be called without storyboard.\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configure(configurator: MenuDetailConfigurator \u003d MenuDetailConfigurator.shared,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                           menuId: String?,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                           isEditable: Bool,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                           toParentMediator: MenuDetailToParentOutput?) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configurator.configure(viewController: self,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                               menuId: menuId,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                               isEditable: isEditable,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                               toParentMediator: toParentMediator)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        preferredPrimaryColumnWidthFraction \u003d 0.45"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        maximumPrimaryColumnWidth \u003d view.bounds.width"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuDetailPresenterOutput"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuDetailViewController: MenuDetailViewControllerInput {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 45,
      "Caryn Heng": 1,
      "E-Liang Tan": 14
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuDetail/ViewModel/MenuDetailViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuDetailViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "struct MenuDetailViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 13
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuDetail/Worker/MenuDetailWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuDetailWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuDetailWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 12
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuInfo/Configurator/MenuInfoConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuInfoConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuInfoConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let shared: MenuInfoConfigurator \u003d MenuInfoConfigurator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func configure(viewController: MenuInfoViewController,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                   menuId: String,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                   toParentMediator: MenuInfoToParentOutput?,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let router \u003d MenuInfoRouter(viewController: viewController)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let presenter \u003d MenuInfoPresenter(output: viewController)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let interactor \u003d MenuInfoInteractor(output: presenter, menuId: menuId,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            injector: injector, toParentMediator: toParentMediator)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        toParentMediator?.menuInfoInteractor \u003d interactor"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 30
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuInfo/Interactor/MenuInfoInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuInfoInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: Interscene interactor IO"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuInfoFromParentInput: class {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuInfoToParentOutput: class {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(comment: String)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func set(price: Int)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var menuInfoInteractor: MenuInfoFromParentInput? { get set }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: Intrascene interactor IO"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuInfoInteractorInput: MenuInfoViewControllerOutput {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuInfoInteractorOutput {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func presentMenuDisplayable(_ menuDisplayable: MenuDisplayable)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func presentComment(_ comment: String)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuInfoInteractor: MenuInfoFromParentInput {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let output: MenuInfoInteractorOutput"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let worker: MenuInfoWorker"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private weak var toParentMediator: MenuInfoToParentOutput?"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var comment: String \u003d \"\" {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            toParentMediator?.set(comment: comment)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var menuEditable: MenuEditable"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(output: MenuInfoInteractorOutput,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         menuId: String,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         injector: DependencyInjector \u003d appDefaultInjector,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         toParentMediator: MenuInfoToParentOutput?,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         worker: MenuInfoWorker \u003d MenuInfoWorker()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.toParentMediator \u003d toParentMediator"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let menuEditable \u003d deps.storageManager.getMenuEditable(id: menuId) else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            fatalError(\"Initialising MenuInfoInteractor with non-existent menu id\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.menuEditable \u003d menuEditable"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuInfoInteractorInput"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuInfoInteractor: MenuInfoViewControllerOutput {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func changePrice(_ price: String) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let price \u003d price.asPriceInt() else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO Handle error"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            guard let individualMenuItem \u003d menuEditable as? IndividualMenuItem else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                return"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            individualMenuItem.price \u003d price"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        toParentMediator?.set(price: price)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.presentMenuDisplayable(menuEditable)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func changeName(_ name: String) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuEditable.name \u003d name"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.presentMenuDisplayable(menuEditable)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func changeDetails(_ details: String) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO handle error"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try? deps.storageManager.writeTransaction { _ in"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            menuEditable.details \u003d details"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.presentMenuDisplayable(menuEditable)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func changeComment(_ comment: String) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.comment \u003d comment"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.presentComment(comment)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func loadMenuDisplayable() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.presentMenuDisplayable(menuEditable)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - Dependency Injection"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    fileprivate func dependencies() -\u003e MenuInfoInteractor.Dependencies {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return MenuInfoInteractor.Dependencies(storageManager: storageManager)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 118
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuInfo/Presenter/MenuInfoPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuInfoPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuInfoPresenterInput: MenuInfoInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuInfoPresenterOutput: class {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func display(viewModel: MenuInfoViewModel)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func display(comment: String)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuInfoPresenter {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private(set) unowned var output: MenuInfoPresenterOutput"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(output: MenuInfoPresenterOutput) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuInfoPresenterInput"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuInfoPresenter: MenuInfoPresenterInput {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func presentComment(_ comment: String) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.display(comment: comment)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func presentMenuDisplayable(_ menuDisplayable: MenuDisplayable) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let viewModel \u003d MenuInfoViewModel(name: menuDisplayable.name,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                          details: menuDisplayable.details,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                          price: menuDisplayable.price.formattedAsPrice())"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output.display(viewModel: viewModel)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 41
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuInfo/Router/MenuInfoRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuInfoRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuInfoRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var viewController: MenuInfoViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func navigateBack()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuInfoRouter {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var viewController: MenuInfoViewController?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(viewController: MenuInfoViewController?) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuInfoRouterProtocol"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuInfoRouter: MenuInfoRouterProtocol {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func navigateBack() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        viewController?.dismiss(animated: true)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 32
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuInfo/View/MenuInfoViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuInfoViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuInfoViewControllerInput: MenuInfoPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol MenuInfoViewControllerOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func loadMenuDisplayable()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func changeComment(_ comment: String)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func changeDetails(_ details: String)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func changeName(_ name: String)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func changePrice(_ price: String)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "final class MenuInfoViewController: UIViewController {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var output: MenuInfoViewControllerOutput?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var router: MenuInfoRouterProtocol?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // TODO use real image"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let imageView: UIImageView \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIImageView(frame: .zero)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.backgroundColor \u003d .gray"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var nameLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILabel(frame: .zero)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.font \u003d .preferredFont(forTextStyle: .title1)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if isEditable {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            stylizeViewAsEditable(result)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let tapRecognizer \u003d UITapGestureRecognizer(target: self, action: #selector(nameLabelDidTap))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            result.addGestureRecognizer(tapRecognizer)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            result.isUserInteractionEnabled \u003d true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var priceLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILabel(frame: .zero)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.textAlignment \u003d .right"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.font \u003d .preferredFont(forTextStyle: .title1)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if isEditable {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            stylizeViewAsEditable(result)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let tapRecognizer \u003d UITapGestureRecognizer(target: self, action: #selector(priceLabelDidTap))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            result.addGestureRecognizer(tapRecognizer)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            result.isUserInteractionEnabled \u003d true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var detailsTextView: UITextView \u003d {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UITextView(frame: .zero)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.isSelectable \u003d isEditable"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if isEditable {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            stylizeViewAsEditable(result)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let tapRecognizer \u003d UITapGestureRecognizer(target: self, action: #selector(detailsTextViewDidTap))"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            result.addGestureRecognizer(tapRecognizer)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.font \u003d .preferredFont(forTextStyle: .body)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.textColor \u003d .darkGray"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.textContainer.maximumNumberOfLines \u003d MenuInfoConstants.maximumNumberOfLines"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var commentLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILabel(frame: .zero)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.text \u003d MenuInfoConstants.commentLabelText"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.isHidden \u003d isEditable"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var deleteCommentButton: UIButton \u003d {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIButton(type: .system)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitle(MenuInfoConstants.deleteCommentButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.setTitleColor(UIColor.Custom.salmonRed, for: .normal)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.isHidden \u003d true"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addTarget(self, action: #selector(deleteCommentButtonDidPress), for: .touchUpInside)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var commentTextView: UITextView \u003d {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UITextView(frame: .zero)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.isEditable \u003d false"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.isScrollEnabled \u003d false"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.font \u003d .preferredFont(forTextStyle: .body)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.textColor \u003d .darkGray"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.textContainer.maximumNumberOfLines \u003d MenuInfoConstants.maximumNumberOfLines"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        stylizeViewAsEditable(result)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let tapRecognizer \u003d UITapGestureRecognizer(target: self, action: #selector(commentTextViewDidTap))"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addGestureRecognizer(tapRecognizer)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.isHidden \u003d isEditable"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let isEditable: Bool"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(menuId: String,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         isEditable: Bool,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         mediator: MenuInfoToParentOutput?,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "         configurator: MenuInfoConfigurator \u003d MenuInfoConfigurator.shared) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.isEditable \u003d isEditable"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configure(menuId: menuId, mediator: mediator, configurator: configurator)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"This should not be called without Storyboard.\")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configure(menuId: String,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                           mediator: MenuInfoToParentOutput?,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                           configurator: MenuInfoConfigurator \u003d MenuInfoConfigurator.shared) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configurator.configure(viewController: self, menuId: menuId, toParentMediator: mediator)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        setupView()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubviews()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.loadMenuDisplayable()"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func setupView() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        navigationItem.leftBarButtonItem \u003d UIBarButtonItem(barButtonSystemItem: .stop,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                           target: self,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                           action: #selector(closeButtonDidPress))"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addSubviews() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(imageView)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(nameLabel)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(priceLabel)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(detailsTextView)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(commentLabel)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(deleteCommentButton)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.addSubview(commentTextView)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func configureConstraints() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        imageView.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(view.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(view.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.height.equalTo(view.safeAreaLayoutGuide).dividedBy(2)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(view.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        nameLabel.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(imageView.snp.bottom).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(view.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.height.equalTo(priceLabel)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        priceLabel.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(nameLabel)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(nameLabel.snp.trailing).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.width.equalTo(priceLabel.intrinsicContentSize.width)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(view.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        detailsTextView.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(nameLabel.snp.bottom).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(view.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(view.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        commentLabel.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(detailsTextView.snp.bottom).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(view.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        deleteCommentButton.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(commentLabel)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(view.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.height.equalTo(commentLabel)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        commentTextView.snp.remakeConstraints { make in"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(commentLabel.snp.bottom).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.bottom.equalTo(view.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(view.safeAreaLayoutGuide).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.equalTo(view.safeAreaLayoutGuide).offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.height.equalTo(detailsTextView)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func closeButtonDidPress() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        router?.navigateBack()"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func commentTextViewDidTap() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alertController \u003d"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            AlertHelper.makeAlertController(title: MenuInfoConstants.extraCommentAlertTitle,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            message: nil,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            textFieldText: commentTextView.text) { [unowned self] text in"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard let text \u003d text else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                self.output?.changeComment(text)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(alertController, animated: true, completion: nil)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func detailsTextViewDidTap() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alertController \u003d"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            AlertHelper.makeAlertController(title: MenuInfoConstants.detailsAlertTitle,"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            message: nil,"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            textFieldText: detailsTextView.text) { [unowned self] text in"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard let text \u003d text else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                self.output?.changeDetails(text)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(alertController, animated: true, completion: nil)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func deleteCommentButtonDidPress() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        output?.changeComment(\"\")"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func priceLabelDidTap() {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let price \u003d priceLabel.text?.priceAsDouble() else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alertController \u003d"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            AlertHelper.makeAlertController(title: MenuInfoConstants.priceAlertTitle,"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            message: nil,"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            textFieldText: \"\\(price)\") { [weak self] text in"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard let self \u003d self, let text \u003d text else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                self.output?.changePrice(text)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(alertController, animated: true, completion: nil)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func nameLabelDidTap() {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alertController \u003d"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            AlertHelper.makeAlertController(title: MenuInfoConstants.nameAlertTitle,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            message: nil,"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            textFieldText: nameLabel.text) { [weak self] text in"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                guard let self \u003d self, let text \u003d text else {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                self.output?.changeName(text)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        present(alertController, animated: true, completion: nil)"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func stylizeViewAsEditable(_ view: UIView) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.layer.borderColor \u003d UIColor.gray.cgColor"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        view.layer.borderWidth \u003d 1.0"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        view.layer.cornerRadius \u003d 10"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuInfoPresenterOutput"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension MenuInfoViewController: MenuInfoViewControllerInput {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func display(comment: String) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        commentTextView.text \u003d comment"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        deleteCommentButton.isHidden \u003d (commentTextView.text \u003d\u003d \"\")"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func display(viewModel: MenuInfoViewModel) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        nameLabel.text \u003d viewModel.name"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        detailsTextView.text \u003d viewModel.details"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        priceLabel.text \u003d viewModel.price"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 277,
      "Caryn Heng": 5
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuInfo/ViewModel/MenuInfoViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuInfoViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "struct MenuInfoViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let details: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let price: String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 15
    }
  },
  {
    "path": "NAME/Scenes/Common/MenuInfo/Worker/MenuInfoWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuInfoWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuInfoWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func doSomeWork() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO: Do the work"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 15
    }
  },
  {
    "path": "NAME/Scenes/Common/StallList/Configurator/StallListConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  StallListConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class StallListConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static let shared: StallListConfigurator \u003d StallListConfigurator()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func configure(estId: String,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   viewController: StallListViewController,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   toParentMediator: StallListToParentOutput?,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let router \u003d StallListRouter(viewController: viewController)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let presenter \u003d StallListPresenter(output: viewController)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let interactor \u003d StallListInteractor(estId: estId,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                             output: presenter,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                             injector: injector,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                             toParentMediator: toParentMediator)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        toParentMediator?.stallListInteractor \u003d interactor"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 6,
      "E-Liang Tan": 25
    }
  },
  {
    "path": "NAME/Scenes/Common/StallList/Interactor/StallListInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  StallListInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Interscene interactor IO"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol StallListFromParentInput: class {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol StallListToParentOutput: class {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var stallListInteractor: StallListFromParentInput? { get set }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var selectedStall: Stall? { get set }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Intrascene interactor IO"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol StallListInteractorInput: StallListViewControllerOutput {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol StallListInteractorOutput {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func present(establishmentInfo: Establishment)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func present(stalls: [Stall])"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStallSettings(forStallId id: String)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStallDeleteError()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class StallListInteractor: StallListFromParentInput {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let output: StallListInteractorOutput"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let worker: StallListWorker"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private weak var toParentMediator: StallListToParentOutput?"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let estId: String"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private var loadedStalls: [Stall] \u003d []"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(estId: String,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         output: StallListInteractorOutput,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         injector: DependencyInjector,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         toParentMediator: StallListToParentOutput?,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         worker: StallListWorker \u003d StallListWorker()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.estId \u003d estId"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.toParentMediator \u003d toParentMediator"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - StallListInteractorInput"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension StallListInteractor: StallListViewControllerOutput {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private var currentEstablishment: Establishment? {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return deps.storageManager.getEstablishment(id: estId)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func reloadEstablishmentInfo() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let currentEstablishment \u003d currentEstablishment else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.present(establishmentInfo: currentEstablishment)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func reloadStalls() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        guard let currentEstablishment \u003d currentEstablishment else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            print(\"Could not get stalls\")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        loadedStalls \u003d Array(currentEstablishment.stalls)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.present(stalls: loadedStalls)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func handleStallSelect(at index: Int) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        toParentMediator?.selectedStall \u003d loadedStalls[index]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleStallDelete(at index: Int) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            try deps.storageManager.writeTransaction { $0.delete(loadedStalls[index]) }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            reloadStalls()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            output.presentStallDeleteError()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleStallEdit(at index: Int) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.presentStallSettings(forStallId: loadedStalls[index].id)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        toParentMediator?.requestSessionEnd()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - Dependency injection"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    fileprivate func dependencies() -\u003e StallListInteractor.Dependencies {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return StallListInteractor.Dependencies(storageManager: storageManager)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 24,
      "E-Liang Tan": 90
    }
  },
  {
    "path": "NAME/Scenes/Common/StallList/Presenter/StallListPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  StallListPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol StallListPresenterInput: StallListInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol StallListPresenterOutput: class {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func display(establishment: StallListEstablishmentViewModel)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func display(stallList: StallListViewModel)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayStallSettings(withId id: String)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayStallDeleteError(title: String, message: String, buttonText: String?)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class StallListPresenter {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private(set) unowned var output: StallListPresenterOutput"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(output: StallListPresenterOutput) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - StallListPresenterInput"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension StallListPresenter: StallListPresenterInput {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func present(establishmentInfo: Establishment) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let viewModel \u003d StallListEstablishmentViewModel(name: establishmentInfo.name)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.display(establishment: viewModel)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func present(stalls: [Stall]) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let stallViewModels \u003d stalls.map { StallListViewModel.StallViewModel(name: $0.name, location: $0.location) }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let viewModel \u003d StallListViewModel(stalls: stallViewModels)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.display(stallList: viewModel)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStallSettings(forStallId id: String) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayStallSettings(withId: id)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentStallDeleteError() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayStallDeleteError(title: ErrorMessage.stallDeleteErrorTitle,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                       message: ErrorMessage.stallDeleteErrorMessage,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                       buttonText: nil)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 12,
      "E-Liang Tan": 42
    }
  },
  {
    "path": "NAME/Scenes/Common/StallList/Router/StallListRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  StallListRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol StallListRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var viewController: StallListViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToStallSettings(withId id: String)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToError(title: String, message: String, buttonText: String?)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class StallListRouter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var viewController: StallListViewController?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(viewController: StallListViewController?) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - StallListRouterProtocol"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension StallListRouter: StallListRouterProtocol {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToStallSettings(withId id: String) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let settingsVC \u003d AdminSettingsViewController(id: id, type: .stall, isDismissibleView: true)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController?.present(settingsVC, animated: true)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func navigateToError(title: String, message: String, buttonText: String?) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let errorVC \u003d CustomAlertViewController(withTitle: title,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                withMessage: message,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                buttonText: nil,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                alertType: .error)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewController?.present(errorVC, animated: true, completion: nil)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 13,
      "E-Liang Tan": 29
    }
  },
  {
    "path": "NAME/Scenes/Common/StallList/View/StallListCustomerCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallListCustomerCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by E-Liang Tan on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class StallListCustomerCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let textLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let textLabel \u003d UILabel()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        textLabel.font \u003d .preferredFont(forTextStyle: .headline)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return textLabel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let detailTextLabel \u003d UILabel()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var contentContainer: UIStackView \u003d {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // TODO: add stall image"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: [textLabel, detailTextLabel])"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .vertical"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .equalSpacing"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.alignment \u003d .center"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewModel: StallListViewModel.StallViewModel? {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            // TODO: Update stall image"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            textLabel.text \u003d viewModel?.name"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            detailTextLabel.text \u003d viewModel?.location"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override var isSelected: Bool {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            if isSelected {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                textLabel.textColor \u003d UIColor.Custom.deepPurple"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                detailTextLabel.textColor \u003d UIColor.Custom.deepPurple"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                textLabel.textColor \u003d .black"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                detailTextLabel.textColor \u003d .black"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(contentContainer)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        contentContainer.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.center.equalToSuperview()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalTo(textLabel)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalTo(detailTextLabel)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 68
    }
  },
  {
    "path": "NAME/Scenes/Common/StallList/View/StallListEstablishmentCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallListEstablishmentCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 6/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallListTableViewCellDelegate: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapEdit(at cell: UICollectionViewCell)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapDelete(at cell: UICollectionViewCell)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class StallListEstablishmentCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let imageView: UIImageView \u003d {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let imageView \u003d UIImageView()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        imageView.backgroundColor \u003d .lightGray"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return imageView"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let textLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let textLabel \u003d UILabel()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        textLabel.font \u003d .boldSystemFont(ofSize: StallListConstants.titleFontSize)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return textLabel"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let detailTextLabel \u003d UILabel()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var editButton: UIButton \u003d {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleEditPress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitle(StallListConstants.editButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitleColor(.white, for: .normal)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.contentVerticalAlignment \u003d .center"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.contentHorizontalAlignment \u003d .center"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.backgroundColor \u003d UIColor.Custom.purple"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var deleteButton: UIButton \u003d {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.addTarget(self, action: #selector(handleDeletePress(sender:)), for: .touchUpInside)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitle(StallListConstants.deleteButtonTitle, for: .normal)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.setTitleColor(.white, for: .normal)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.contentVerticalAlignment \u003d .center"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.contentHorizontalAlignment \u003d .center"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        button.backgroundColor \u003d UIColor.Custom.lightGray"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private lazy var actionsContainer: UIStackView \u003d {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let stackView \u003d UIStackView(arrangedSubviews: [deleteButton, editButton])"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.axis \u003d .horizontal"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        stackView.distribution \u003d .fillEqually"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return stackView"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var viewModel: StallListViewModel.StallViewModel? {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            // TODO: Update stall image"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            textLabel.text \u003d viewModel?.name"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            detailTextLabel.text \u003d viewModel?.location"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    weak var delegate: StallListTableViewCellDelegate?"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubviews()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func addSubviews() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(imageView)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(textLabel)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(detailTextLabel)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        addSubview(actionsContainer)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        actionsContainer.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.height.equalTo(ButtonConstants.mediumButtonHeight)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalToSuperview()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        textLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview().offset(StallListConstants.cellPadding)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview().offset(-StallListConstants.cellPadding)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalTo(detailTextLabel.snp.top).offset(-StallListConstants.cellPadding)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        detailTextLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.left.equalToSuperview().offset(StallListConstants.cellPadding)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.right.equalToSuperview().offset(-StallListConstants.cellPadding)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalTo(actionsContainer.snp.top).offset(-StallListConstants.cellPadding)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        imageView.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.width.equalToSuperview()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            make.bottom.equalTo(textLabel.snp.top).offset(-StallListConstants.cellPadding)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func handleEditPress(sender: UIButton) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.didTapEdit(at: self)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func handleDeletePress(sender: UIButton) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        delegate?.didTapDelete(at: self)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 123
    }
  },
  {
    "path": "NAME/Scenes/Common/StallList/View/StallListViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  StallListViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallListViewControllerInput: StallListPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol StallListViewControllerOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func reloadEstablishmentInfo()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func reloadStalls()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleStallSelect(at index: Int)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleStallDelete(at index: Int)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func handleStallEdit(at index: Int)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "final class StallListViewController: UICollectionViewController {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private static let stallCustomerCellIdentifier \u003d \"stallCustomerCellIdentifier\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private static let stallEstablishmentCellIdentifier \u003d \"stallEstablishmentCellIdentifier\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let isEstablishmentView: Bool"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private class StallListDataSource: NSObject, UICollectionViewDataSource {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        private let cellViewModels: [StallListViewModel.StallViewModel]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        private var isEstablishmentView: Bool"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        weak var delegate: StallListTableViewCellDelegate?"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        init(isEstablishmentView: Bool, stalls: [StallListViewModel.StallViewModel]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            self.isEstablishmentView \u003d isEstablishmentView"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            self.cellViewModels \u003d stalls"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            super.init()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return cellViewModels.count"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                            cellForItemAt indexPath: IndexPath) -\u003e UICollectionViewCell {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            let model \u003d cellViewModels[indexPath.row]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            if isEstablishmentView {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                let cell \u003d dequeueEstablishmentReusableCell(collectionView, at: indexPath)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                cell.viewModel \u003d model"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                cell.delegate \u003d delegate"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                cell.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return cell"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                let cell \u003d dequeueCustomerReusableCell(collectionView, at: indexPath)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                cell.viewModel \u003d model"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return cell"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        private func dequeueCustomerReusableCell(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                 at indexPath: IndexPath) -\u003e StallListCustomerCell {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            guard let cell \u003d collectionView.dequeueReusableCell(withReuseIdentifier: stallCustomerCellIdentifier,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                                for: indexPath) as? StallListCustomerCell else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                assertionFailure(\"Stall list cell not set up properly or not registered.\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return StallListCustomerCell()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        private func dequeueEstablishmentReusableCell(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                      at indexPath: IndexPath) -\u003e StallListEstablishmentCell {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            guard let cell \u003d collectionView.dequeueReusableCell(withReuseIdentifier: stallEstablishmentCellIdentifier,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                                for: indexPath) as? StallListEstablishmentCell else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                assertionFailure(\"Stall list cell not set up properly or not registered.\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return StallListEstablishmentCell()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var collectionViewDataSource: StallListDataSource? {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionViewDataSource?.delegate \u003d self"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionView.dataSource \u003d collectionViewDataSource"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionView.reloadData()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var output: StallListViewControllerOutput?"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var router: StallListRouterProtocol?"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(estId: String,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         isEstablishmentView: Bool,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         mediator: StallListToParentOutput?,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         configurator: StallListConfigurator \u003d StallListConfigurator.shared) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.isEstablishmentView \u003d isEstablishmentView"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(collectionViewLayout: UICollectionViewFlowLayout())"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configure(estId: estId, mediator: mediator, configurator: configurator)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.isEstablishmentView \u003d false"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - Configurator"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func configure(estId: String,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           mediator: StallListToParentOutput?,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           configurator: StallListConfigurator \u003d StallListConfigurator.shared) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        configurator.configure(estId: estId, viewController: self, toParentMediator: mediator)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if isEstablishmentView {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionView"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                .register(StallListEstablishmentCell.self,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                          forCellWithReuseIdentifier: StallListViewController.stallEstablishmentCellIdentifier)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionView.register(StallListCustomerCell.self,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                    forCellWithReuseIdentifier: StallListViewController.stallCustomerCellIdentifier)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        setupCollectionView()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        setupNavigation()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func viewWillAppear(_ animated: Bool) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        super.viewWillAppear(animated)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.reloadStalls()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output?.reloadEstablishmentInfo()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let selectedIndexPaths \u003d collectionView.indexPathsForSelectedItems,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            selectedIndexPaths.isEmpty,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionView.numberOfSections \u003e 0,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            collectionView.numberOfItems(inSection: 0) \u003e 0"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                return"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionView.selectItem(at: IndexPath(item: 0, section: 0), animated: animated, scrollPosition: .top)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.handleStallSelect(at: 0)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private func setupCollectionView() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionView.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        clearsSelectionOnViewWillAppear \u003d false"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func setupNavigation() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        if !isEstablishmentView {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            navigationItem.leftBarButtonItem \u003d UIBarButtonItem(barButtonSystemItem: .stop,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                               target: self,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                               action: #selector(closeButtonDidPress))"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func closeButtonDidPress() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output?.requestSessionEnd()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - UICollectionViewDelegate"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension StallListViewController {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    override func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.handleStallSelect(at: indexPath.row)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension StallListViewController: UICollectionViewDelegateFlowLayout {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                        layout collectionViewLayout: UICollectionViewLayout,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                        sizeForItemAt indexPath: IndexPath) -\u003e CGSize {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if isEstablishmentView {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return CGSize(width: StallListConstants.establishmentCellWidth,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                          height: StallListConstants.establishmentCellHeight)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return CGSize(width: view.frame.width,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                          height: StallListConstants.customerCellHeight)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - StallListTableViewCellDelegate"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension StallListViewController: StallListTableViewCellDelegate {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapEdit(at cell: UICollectionViewCell) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let indexPath \u003d collectionView.indexPath(for: cell) else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Cannot locate index path of cell to be deleted.\")"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.handleStallEdit(at: indexPath.row)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func didTapDelete(at cell: UICollectionViewCell) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let indexPath \u003d collectionView.indexPath(for: cell) else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            assertionFailure(\"Cannot locate index path of cell to be deleted.\")"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let alert \u003d UIAlertController(title: \"Deleting stall\","
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                      message: \"Are you sure you want to delete this stall?\","
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                      preferredStyle: .alert)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        alert.addAction(UIAlertAction(title: \"Cancel\", style: .cancel))"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        alert.addAction(UIAlertAction(title: \"Delete\", style: .destructive) { [unowned self] _ in"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            self.output?.handleStallDelete(at: indexPath.row)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        })"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        present(alert, animated: true)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - StallListPresenterOutput"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension StallListViewController: StallListViewControllerInput {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func display(establishment: StallListEstablishmentViewModel) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        title \u003d establishment.name"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func display(stallList: StallListViewModel) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        collectionViewDataSource \u003d StallListDataSource(isEstablishmentView: isEstablishmentView,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                       stalls: stallList.stalls)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayStallDeleteError(title: String, message: String, buttonText: String?) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateToError(title: title, message: message, buttonText: buttonText)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayStallSettings(withId id: String) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        router?.navigateToStallSettings(withId: id)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 1,
      "Caryn Heng": 209,
      "E-Liang Tan": 32
    }
  },
  {
    "path": "NAME/Scenes/Common/StallList/ViewModel/StallListViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  StallListViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "struct StallListEstablishmentViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "struct StallListViewModel {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    struct StallViewModel {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let location: String?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let stalls: [StallViewModel]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 22
    }
  },
  {
    "path": "NAME/Scenes/Common/StallList/Worker/StallListWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  StallListWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class StallListWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 12
    }
  },
  {
    "path": "NAME/Scenes/Customer/Browse/Configurator/BrowseConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  BrowseConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class BrowseConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static let shared: BrowseConfigurator \u003d BrowseConfigurator()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func configure(toParentMediator: BrowseToParentOutput?,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   viewController: BrowseViewController,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                   injector: DependencyInjector \u003d appDefaultInjector) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let toChildrenMediator \u003d BrowseIntersceneMediator()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let router \u003d BrowseRouter(viewController: viewController,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                  mediator: toChildrenMediator)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let presenter \u003d BrowsePresenter(output: viewController)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let interactor \u003d BrowseInteractor(output: presenter,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                          injector: injector,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                          toParentMediator: toParentMediator,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                          toChildrenMediator: toChildrenMediator)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        toParentMediator?.browseInteractor \u003d interactor"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        toChildrenMediator.selfInteractor \u003d interactor"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.restorationIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 3,
      "E-Liang Tan": 30
    }
  },
  {
    "path": "NAME/Scenes/Customer/Browse/Interactor/BrowseInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  BrowseInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Interscene interactor IO"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowseFromParentInput: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowseToParentOutput: class {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var browseInteractor: BrowseFromParentInput? { get set }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowseFromChildrenInput: class {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowseToChildrenOutput: class {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var selfInteractor: BrowseFromChildrenInput? { get set }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Intrascene interactor IO"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowseInteractorInput: BrowseViewControllerOutput {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowseInteractorOutput {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentChildren(withEstId id: String)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class BrowseInteractor {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate struct Dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let storageManager: StorageManager"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let deps: Dependencies"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let output: BrowseInteractorOutput"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let worker: BrowseWorker"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private weak var toParentMediator: BrowseToParentOutput?"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let toChildrenMediator: BrowseIntersceneMediator"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(output: BrowseInteractorOutput,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "         injector: DependencyInjector,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         toParentMediator: BrowseToParentOutput?,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         toChildrenMediator: BrowseIntersceneMediator,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         worker: BrowseWorker \u003d BrowseWorker()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        deps \u003d injector.dependencies()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.toParentMediator \u003d toParentMediator"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.toChildrenMediator \u003d toChildrenMediator"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - BrowseInteractorInput"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension BrowseInteractor: BrowseInteractorInput {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func reloadChildren() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // Hackish, but when in customer mode, show the first establishment"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let currentEst \u003d deps.storageManager.allEstablishments().first else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.presentChildren(withEstId: currentEst.id)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - BrowseFromParentInput"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension BrowseInteractor: BrowseFromParentInput {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - BrowseFromChildrenInput"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension BrowseInteractor: BrowseFromChildrenInput {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        toParentMediator?.requestSessionEnd()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Dependency injection"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension DependencyInjector {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    fileprivate func dependencies() -\u003e BrowseInteractor.Dependencies {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return BrowseInteractor.Dependencies(storageManager: storageManager)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 22,
      "E-Liang Tan": 66
    }
  },
  {
    "path": "NAME/Scenes/Customer/Browse/Interactor/BrowseInteractorMediator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  BrowseIntersceneMediator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 1/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias BrowseIntersceneMediatorSelfInput \u003d BrowseToChildrenOutput"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias BrowseIntersceneMediatorSelfOutput \u003d BrowseFromChildrenInput"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias BrowseIntersceneMediatorStallListInput \u003d StallListToParentOutput"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias BrowseIntersceneMediatorStallListOutput \u003d StallListFromParentInput"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias BrowseIntersceneMediatorMenuInput \u003d MenuToParentOutput"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias BrowseIntersceneMediatorMenuOutput \u003d MenuFromParentInput"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class BrowseIntersceneMediator: BrowseIntersceneMediatorSelfInput,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "BrowseIntersceneMediatorStallListInput, BrowseIntersceneMediatorMenuInput {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var selfInteractor: BrowseIntersceneMediatorSelfOutput?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var stallListInteractor: BrowseIntersceneMediatorStallListOutput?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var menuInteractor: BrowseIntersceneMediatorMenuOutput?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var selectedStall: Stall? {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            self.menuInteractor?.stall \u003d selectedStall"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        selfInteractor?.requestSessionEnd()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 33
    }
  },
  {
    "path": "NAME/Scenes/Customer/Browse/Presenter/BrowsePresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  BrowsePresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowsePresenterInput: BrowseInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowsePresenterOutput: class {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayChildren(estId: String)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class BrowsePresenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private(set) unowned var output: BrowsePresenterOutput"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(output: BrowsePresenterOutput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - BrowsePresenterInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension BrowsePresenter: BrowsePresenterInput {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func presentChildren(withEstId id: String) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output.displayChildren(estId: id)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 4,
      "E-Liang Tan": 28
    }
  },
  {
    "path": "NAME/Scenes/Customer/Browse/Router/BrowseRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  BrowseRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowseRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var viewController: BrowseViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func stallListViewController(withId id: String) -\u003e UIViewController"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func menuViewController() -\u003e UIViewController"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class BrowseRouter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var viewController: BrowseViewController?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    unowned var mediator: BrowseIntersceneMediator"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(viewController: BrowseViewController?,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         mediator: BrowseIntersceneMediator) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.mediator \u003d mediator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - BrowseRouterProtocol"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension BrowseRouter: BrowseRouterProtocol {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func stallListViewController(withId id: String) -\u003e UIViewController {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return UINavigationController(rootViewController: StallListViewController(estId: id,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                                                  isEstablishmentView: false,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                                                  mediator: mediator))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func menuViewController() -\u003e UIViewController {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return UINavigationController(rootViewController: MenuViewController(stallId: nil,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                                             isEditable: false,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                                             mediator: mediator))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 7,
      "E-Liang Tan": 38
    }
  },
  {
    "path": "NAME/Scenes/Customer/Browse/View/BrowseViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  BrowseViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowseViewControllerInput: BrowsePresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol BrowseViewControllerOutput {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func reloadChildren()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class BrowseViewController: UISplitViewController {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var output: BrowseViewControllerOutput?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var router: BrowseRouterProtocol?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(toParentMediator: BrowseToParentOutput?,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         configurator: BrowseConfigurator \u003d BrowseConfigurator.shared) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configure(toParentMediator: toParentMediator, configurator: configurator)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Configurator"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private func configure(toParentMediator: BrowseToParentOutput?,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                           configurator: BrowseConfigurator \u003d BrowseConfigurator.shared) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configurator.configure(toParentMediator: toParentMediator, viewController: self)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        maximumPrimaryColumnWidth \u003d CustomerCommonConstants.primaryWidth"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        output?.reloadChildren()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - BrowsePresenterOutput"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension BrowseViewController: BrowseViewControllerInput {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func displayChildren(estId: String) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let router \u003d router else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            print(\"Router required to get child VCs\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        viewControllers \u003d ["
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            router.stallListViewController(withId: estId),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            router.menuViewController()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 13,
      "E-Liang Tan": 51
    }
  },
  {
    "path": "NAME/Scenes/Customer/Browse/ViewModel/BrowseViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  BrowseViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "struct BrowseViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 13
    }
  },
  {
    "path": "NAME/Scenes/Customer/Browse/Worker/BrowseWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  BrowseWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class BrowseWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 12
    }
  },
  {
    "path": "NAME/Scenes/Customer/CustomerRoot/Configurator/CustomerRootConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  CustomerRootConfigurator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class CustomerRootConfigurator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let shared: CustomerRootConfigurator \u003d CustomerRootConfigurator()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func configure(viewController: CustomerRootViewController) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let toChildrenMediator \u003d CustomerRootIntersceneMediator()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let router \u003d CustomerRootRouter(viewController: viewController,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                        mediator: toChildrenMediator)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let presenter \u003d CustomerRootPresenter(output: viewController)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let interactor \u003d CustomerRootInteractor(output: presenter,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                                                toChildrenMediator: toChildrenMediator)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        toChildrenMediator.selfInteractor \u003d interactor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.viewControllers \u003d ["
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            router.cartViewController(), // Right pane"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            router.browseViewController() // Left pane"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController.primaryEdge \u003d .trailing // Cart in thinner column on right"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 1,
      "E-Liang Tan": 32
    }
  },
  {
    "path": "NAME/Scenes/Customer/CustomerRoot/Interactor/CustomerRootInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  CustomerRootInteractor.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Interscene interactor IO"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CustomerRootFromChildrenInput: class {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CustomerRootToChildrenOutput: class {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var selfInteractor: CustomerRootFromChildrenInput? { get set }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: Intrascene interactor IO"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CustomerRootInteractorInput: CustomerRootViewControllerOutput {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CustomerRootInteractorOutput {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func endSession()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class CustomerRootInteractor {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let output: CustomerRootInteractorOutput"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let worker: CustomerRootWorker"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let toChildrenMediator: CustomerRootIntersceneMediator"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(output: CustomerRootInteractorOutput,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         toChildrenMediator: CustomerRootIntersceneMediator,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         worker: CustomerRootWorker \u003d CustomerRootWorker()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.toChildrenMediator \u003d toChildrenMediator"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.worker \u003d worker"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - CustomerRootInteractorInput"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension CustomerRootInteractor: CustomerRootViewControllerOutput {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - CustomerRootFromChildrenInput"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension CustomerRootInteractor: CustomerRootFromChildrenInput {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.endSession()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 53
    }
  },
  {
    "path": "NAME/Scenes/Customer/CustomerRoot/Interactor/CustomerRootIntersceneMediator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  CustomerRootIntersceneMediator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias CustomerRootIntersceneMediatorSelfInput \u003d CustomerRootToChildrenOutput"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias CustomerRootIntersceneMediatorSelfOutput \u003d CustomerRootFromChildrenInput"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias CustomerRootIntersceneMediatorBrowseInput \u003d BrowseToParentOutput"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias CustomerRootIntersceneMediatorBrowseOutput \u003d BrowseFromParentInput"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class CustomerRootIntersceneMediator: CustomerRootIntersceneMediatorSelfInput,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "CustomerRootIntersceneMediatorBrowseInput {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var selfInteractor: CustomerRootIntersceneMediatorSelfOutput?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var browseInteractor: CustomerRootIntersceneMediatorBrowseOutput?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func requestSessionEnd() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        selfInteractor?.requestSessionEnd()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 23
    }
  },
  {
    "path": "NAME/Scenes/Customer/CustomerRoot/Presenter/CustomerRootPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  CustomerRootPresenter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CustomerRootPresenterInput: CustomerRootInteractorOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CustomerRootPresenterOutput: class {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func endSession()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class CustomerRootPresenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private(set) unowned var output: CustomerRootPresenterOutput"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(output: CustomerRootPresenterOutput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - CustomerRootPresenterInput"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension CustomerRootPresenter: CustomerRootPresenterInput {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func endSession() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        output.endSession()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 1,
      "E-Liang Tan": 32
    }
  },
  {
    "path": "NAME/Scenes/Customer/CustomerRoot/Router/CustomerRootRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  CustomerRootRouter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CustomerRootRouterProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var viewController: CustomerRootViewController? { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func navigateBack()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func browseViewController() -\u003e UIViewController"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func cartViewController() -\u003e UIViewController"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class CustomerRootRouter {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    weak var viewController: CustomerRootViewController?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    unowned var mediator: CustomerRootIntersceneMediator"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    init(viewController: CustomerRootViewController?,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "         mediator: CustomerRootIntersceneMediator) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.mediator \u003d mediator"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - CustomerRootRouterProtocol"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension CustomerRootRouter: CustomerRootRouterProtocol {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func navigateBack() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        viewController?.dismiss(animated: true)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func browseViewController() -\u003e UIViewController {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return BrowseViewController(toParentMediator: mediator)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func cartViewController() -\u003e UIViewController {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // TODO: Caryn to implement cart controller"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return UINavigationController(rootViewController: UITableViewController(style: .plain))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 45
    }
  },
  {
    "path": "NAME/Scenes/Customer/CustomerRoot/View/CustomerRootViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  CustomerRootViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CustomerRootViewControllerInput: CustomerRootPresenterOutput {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol CustomerRootViewControllerOutput {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class CustomerRootViewController: UISplitViewController {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var output: CustomerRootViewControllerOutput?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var router: CustomerRootRouterProtocol?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(configurator: CustomerRootConfigurator \u003d CustomerRootConfigurator.shared) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configure(configurator: configurator)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configure()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - Configurator"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configure(configurator: CustomerRootConfigurator \u003d CustomerRootConfigurator.shared) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configurator.configure(viewController: self)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        restorationIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        restorationClass \u003d type(of: self)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        maximumPrimaryColumnWidth \u003d CustomerCommonConstants.primaryWidth"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - CustomerRootPresenterOutput"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension CustomerRootViewController: CustomerRootViewControllerInput {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func endSession() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        router?.navigateBack()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - UIViewControllerRestoration"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension CustomerRootViewController: UIViewControllerRestoration {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static func viewController(withRestorationIdentifierPath path: [String], coder: NSCoder) -\u003e UIViewController? {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return self.init()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 4,
      "E-Liang Tan": 61
    }
  },
  {
    "path": "NAME/Scenes/Customer/CustomerRoot/ViewModel/CustomerRootViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  CustomerRootViewModel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "struct CustomerRootViewModel {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 13
    }
  },
  {
    "path": "NAME/Scenes/Customer/CustomerRoot/Worker/CustomerRootWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  CustomerRootWorker.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright (c) 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class CustomerRootWorker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 12
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/Configurator/OrderConfirmationConfigurator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "final class OrderConfirmationConfigurator {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Singleton"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let shared: OrderConfirmationConfigurator \u003d OrderConfirmationConfigurator()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Configuration"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func configure(viewController: OrderConfirmationViewController) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let router \u003d OrderConfirmationRouter(viewController: viewController)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let presenter \u003d OrderConfirmationPresenter(output: viewController)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let interactor \u003d OrderConfirmationInteractor(output: presenter)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        viewController.output \u003d interactor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "        viewController.router \u003d router"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 21
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/Interactor/OrderConfirmationInteractor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderConfirmationInteractorInput: OrderConfirmationViewControllerOutput {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderConfirmationInteractorOutput {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func presentBill(_ bill: Bill)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "final class OrderConfirmationInteractor {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let output: OrderConfirmationInteractorOutput"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "    init(output: OrderConfirmationInteractorOutput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "// MARK: - OrderConfirmationInteractorInput"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "extension OrderConfirmationInteractor: OrderConfirmationViewControllerOutput {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Business logic"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func computeBill() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        output.presentBill(Bill())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 30
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/Interactor/OrderToBillProcessor.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "class OrderToBillProcessor {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "    struct OrderItemComputation {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bestDiscounts: BillItem"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bestStackableDiscounts: BillItem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func process(order: OrderProtocol) -\u003e Bill? {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "        if order.orderItems.isEmpty {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let orderItemComputations \u003d Array(order.orderItems.compactMap { processOrderItem($0) })"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let bestBill \u003d computeBestBill(itemComputations: orderItemComputations,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                             discounts: order.establishmentDiscounts) else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        // Apply surcharges to the best bill before returning the best bill"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let establishmentSurcharges \u003d order.establishmentSurcharges else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return bestBill"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "        bestBill.establishmentSurcharges \u003d Array(establishmentSurcharges)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return bestBill"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static private func computeBestBill(itemComputations: [OrderItemComputation],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                        discounts: [Discount]?) -\u003e Bill? {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "        // Return best discount(s) of each item if there are no discount constraints"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let establishmentDiscounts \u003d discounts else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let bill \u003d Bill()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "            bill.items \u003d itemComputations.map { $0.bestDiscounts }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return bill"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let noEstDiscountsBill \u003d Bill(items: itemComputations.map { $0.bestDiscounts },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                      establishmentDiscounts: [])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let stackableDiscounts \u003d Array(establishmentDiscounts.filter { $0.stackable })"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bestSBill \u003d optimizeWithStackableDiscounts(stackableDiscounts,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                        orderItemComputations: itemComputations)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let nonStackableDiscounts \u003d Array(establishmentDiscounts.filter { !$0.stackable })"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bestNSBill \u003d optimizeWithNonStackableDiscounts(nonStackableDiscounts,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                           orderItemComputations: itemComputations)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return minBill(minBill(noEstDiscountsBill, bestSBill), bestNSBill)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static private func processOrderItem(_ orderItem: OrderItemProtocol) -\u003e OrderItemComputation? {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let stackableDiscounts \u003d Array(orderItem.discounts.filter { $0.stackable })"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let stackableBillItem \u003d BillItem(source: orderItem, discounts: stackableDiscounts)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "        // Construct Bills for every non stackable discount"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let nonStackableDiscounts \u003d Array(orderItem.discounts.filter { !$0.stackable })"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let nonStackableBillItems: [BillItem] \u003d nonStackableDiscounts.map {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return BillItem(source: orderItem, discounts: [$0])"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let allBillItems: [BillItem] \u003d [stackableBillItem] + nonStackableBillItems"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let lowestBillItem \u003d allBillItems.reduce(stackableBillItem) { lowest, billItem in"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "            if billItem.discountedPrice \u003c\u003d lowest.discountedPrice {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "                return billItem"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return lowest"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return OrderItemComputation(bestDiscounts: lowestBillItem,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                    bestStackableDiscounts: stackableBillItem)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static private func optimizeWithStackableDiscounts(_ discounts: [Discount],"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                       orderItemComputations: [OrderItemComputation]) -\u003e Bill {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "        bill.establishmentDiscounts \u003d discounts"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "        bill.items \u003d orderItemComputations.map { $0.bestStackableDiscounts }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var bestSubtotal \u003d bill.subtotal"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": "        orderItemComputations.enumerated().forEach { idx, oic in"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": "            guard"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": "                let containsStackableDiscounts \u003d oic.bestDiscounts.containsStackableDiscounts,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": "                !containsStackableDiscounts else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": "            // For best discounts that are not stackable, see if swapping will decrease the subtotal"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": "            bill.items[idx] \u003d orderItemComputations[idx].bestDiscounts"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": "            if bill.subtotal \u003c bestSubtotal {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "                bestSubtotal \u003d bill.subtotal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": "                bill.items[idx] \u003d orderItemComputations[idx].bestStackableDiscounts"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return bill"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static private func optimizeWithNonStackableDiscounts(_ establishmentDiscounts: [Discount],"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                          orderItemComputations: [OrderItemComputation]) -\u003e Bill? {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bills \u003d establishmentDiscounts.map {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Derek"
        },
        "content": "            optimizeWithNonStackableDiscount($0,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                             orderItemComputations: orderItemComputations)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return bills.reduce(bills.first, minBill)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static private func optimizeWithNonStackableDiscount(_ discount: Discount,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                         orderItemComputations: [OrderItemComputation]) -\u003e Bill {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Derek"
        },
        "content": "        bill.establishmentDiscounts \u003d [discount]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": "        bill.items \u003d orderItemComputations.compactMap {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return BillItem(source: $0.bestDiscounts.source, discounts: [])"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Derek"
        },
        "content": "        orderItemComputations.enumerated().forEach { idx, _ in"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let original \u003d bill.items[idx]"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Derek"
        },
        "content": "            // See if substituting the item\u0027s bestDiscount will decrease the subtotal"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Derek"
        },
        "content": "            bill.items[idx] \u003d orderItemComputations[idx].bestDiscounts"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let grandTotalWithItemBestDisc \u003d bill.grandTotal"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Derek"
        },
        "content": "            bill.items[idx] \u003d BillItem(source: original.source, discounts: [])"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let grandTotalWithNoItemDisc \u003d bill.grandTotal"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Derek"
        },
        "content": "            if grandTotalWithItemBestDisc \u003c grandTotalWithNoItemDisc {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Derek"
        },
        "content": "                bill.items[idx] \u003d orderItemComputations[idx].bestDiscounts"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return bill"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static private func minBill(_ billA: Bill?, _ billB: Bill?) -\u003e Bill? {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let billAGrandTotal \u003d billA?.grandTotal else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return billB"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let billBGrandTotal \u003d billB?.grandTotal else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return billA"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Derek"
        },
        "content": "        if billAGrandTotal \u003c\u003d billBGrandTotal {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return billA"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return billB"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 157
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/Presenter/OrderConfirmationPresenter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderConfirmationPresenterInput: OrderConfirmationInteractorOutput {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderConfirmationPresenterOutput: class {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func loadDisplay(viewModel: OrderConfirmationViewModel)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "final class OrderConfirmationPresenter {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private(set) unowned var output: OrderConfirmationPresenterOutput"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "    init(output: OrderConfirmationPresenterOutput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        self.output \u003d output"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "// MARK: - OrderConfirmationPresenterInput"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "extension OrderConfirmationPresenter: OrderConfirmationPresenterInput {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "    typealias ViewModel \u003d OrderConfirmationViewModel"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "    typealias ItemView \u003d OrderConfirmationViewModel.OrderItemViewModel"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "    typealias ItemAddonView \u003d OrderConfirmationViewModel.OrderItemAddonViewModel"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "    typealias ItemOptionView \u003d OrderConfirmationViewModel.OrderItemOptionViewModel"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "    typealias ItemDiscountView \u003d OrderConfirmationViewModel.OrderItemDiscountViewModel"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "    typealias OrderTotalView \u003d OrderConfirmationViewModel.OrderTotal"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Presentation logic"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func presentBill(_ bill: Bill) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "        // TODO: Remove placeholders, add bill to view model here"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let IMAGEPLACEHOLDER \u003d \"placeholder\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let PRICEPLACEHOLDER \u003d \"$12.34\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let option1 \u003d ItemOptionView(imageId: IMAGEPLACEHOLDER,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                     name: \"Option\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                     option: \"â\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                     price: PRICEPLACEHOLDER)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount1 \u003d ItemDiscountView(name: \"Discount\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                         description: \"-20%\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let addon1 \u003d ItemAddonView(imageId: IMAGEPLACEHOLDER,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                    name: \"Addon\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                    quantity: 1,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                    price: PRICEPLACEHOLDER)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let aaa \u003d ItemView(imageId: IMAGEPLACEHOLDER,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           name: \"Chimken\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           quantity: 1,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           originalPrice: PRICEPLACEHOLDER,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           discountedPrice: PRICEPLACEHOLDER,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           options: [option1],"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           addons: [addon1],"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           discounts: [discount1],"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           isTakeAway: false)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bbb \u003d ItemView(imageId: IMAGEPLACEHOLDER,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           name: \"Fishball\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           quantity: 1,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           originalPrice: PRICEPLACEHOLDER,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           discountedPrice: PRICEPLACEHOLDER,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           options: [],"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           addons: [],"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           discounts: [discount1],"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           isTakeAway: true)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let orderItems: [ItemView] \u003d [aaa, bbb, aaa, bbb, aaa, bbb]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let orderTotal \u003d OrderTotalView(itemSubtotal: PRICEPLACEHOLDER,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                        establishmentDiscounts: PRICEPLACEHOLDER,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                        establishmentSurcharges: PRICEPLACEHOLDER,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                        grandTotal: PRICEPLACEHOLDER)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let viewModel \u003d ViewModel(orderItems: orderItems,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                  orderTotal: orderTotal)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "        output.loadDisplay(viewModel: viewModel)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 85
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/Router/OrderConfirmationRouter.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderConfirmationRouterProtocol {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var viewController: OrderConfirmationViewController? { get }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func navigateToCustomerMenu()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "final class OrderConfirmationRouter {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "    weak var viewController: OrderConfirmationViewController?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "    init(viewController: OrderConfirmationViewController?) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        self.viewController \u003d viewController"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "// MARK: - OrderConfirmationRouterProtocol"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "extension OrderConfirmationRouter: OrderConfirmationRouterProtocol {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Navigation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func navigateToCustomerMenu() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let customerRootVC \u003d CustomerRootViewController()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        customerRootVC.modalTransitionStyle \u003d .crossDissolve"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "        viewController?.present(customerRootVC, animated: true)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 31
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/View/OrderConfirmationItemViewCell.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import SnapKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderConfirmationItemViewCellDelegate: class {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func didTapIncrease(forCell cell: UITableViewCell)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func didTapDecrease(forCell cell: UITableViewCell)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "final class OrderConfirmationItemViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let reuseIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let itemImage \u003d UIImageView()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var imageName: String?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let nameLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.font \u003d .boldSystemFont(ofSize: OrderConfirmationItemConstants.nameLabelFontSize)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var additionalInformationView: OrderConfirmationAdditionalInfoView? {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "            guard let view \u003d additionalInformationView else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "                return"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "            addSubview(view)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "            additionalInformationView?.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "                make.top.equalTo(self.nameLabel).offset(50)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "                make.left.equalTo(self.nameLabel.snp.left)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "                make.bottom.equalTo(-20)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let originalPriceLabel \u003d UILabel()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let discountedPriceLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.font \u003d .boldSystemFont(ofSize: OrderConfirmationItemConstants.discountedPriceFontSize)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let removeItemButton: UIButton \u003d {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let button \u003d UIButton()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "        button.setTitle(OrderConfirmationItemConstants.removeItemButtonTitle,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        for: .normal)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "        button.setTitleColor(UIColor.black, for: .normal)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return button"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let diningOptionControl: UISegmentedControl \u003d {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let control \u003d UISegmentedControl()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "        control.insertSegment(withTitle: OrderConfirmationItemConstants.diningOptionControlHeretitle,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "                              at: 0, animated: true)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "        control.insertSegment(withTitle: OrderConfirmationItemConstants.diningOptionControlTakeAwaytitle,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "                              at: 1, animated: true)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return control"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var imageIdentifier: String? {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return imageName"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "            guard let imageName \u003d newValue else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "                return"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": "            itemImage.image \u003d UIImage(named: imageName)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "    public var name: String? {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return nameLabel.text"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": "            nameLabel.text \u003d newValue"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var quantity: String? {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "            // TODO: obtain value from view"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": "            // TODO: assign value to view"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var originalPrice: String? {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return originalPriceLabel.attributedText?.string"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "            guard let originalPriceStr \u003d newValue else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": "                return"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let attrs: [NSAttributedString.Key: Any] \u003d [.strikethroughStyle: NSUnderlineStyle.single.rawValue,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                        .strikethroughColor: UIColor.black]"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let originalPriceStrikethrough \u003d NSMutableAttributedString(string: originalPriceStr,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                                       attributes: attrs)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Derek"
        },
        "content": "            originalPriceLabel.attributedText \u003d originalPriceStrikethrough"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var discountedPrice: String? {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return discountedPriceLabel.text"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Derek"
        },
        "content": "            discountedPriceLabel.text \u003d newValue"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var isTakeAway: Bool? {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return diningOptionControl.selectedSegmentIndex \u003d\u003d 1"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Derek"
        },
        "content": "            guard let takeAway \u003d newValue else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Derek"
        },
        "content": "                return"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Derek"
        },
        "content": "            diningOptionControl.selectedSegmentIndex \u003d takeAway ? 1 : 0"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Derek"
        },
        "content": "    weak var delegate: OrderConfirmationItemViewCellDelegate?"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Derek"
        },
        "content": "    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Derek"
        },
        "content": "        super.init(style: style, reuseIdentifier: reuseIdentifier)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Derek"
        },
        "content": "        setupView()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Derek"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Derek"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Derek"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func setupView() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(itemImage)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(nameLabel)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(originalPriceLabel)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(discountedPriceLabel)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(removeItemButton)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(originalPriceLabel)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(discountedPriceLabel)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(diningOptionControl)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Derek"
        },
        "content": "        itemImage.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalToSuperview().offset(OrderConfirmationItemConstants.imageOffsetTop)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalToSuperview().offset(OrderConfirmationItemConstants.imageOffsetLeft)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.height.equalTo(OrderConfirmationItemConstants.imageLength)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.width.equalTo(OrderConfirmationItemConstants.imageLength)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Derek"
        },
        "content": "        nameLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.nameLabelOffsetTop)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.itemImage.snp.right)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.nameLabelOffsetLeft)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountedPriceLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.nameLabel.snp.top)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.right.equalToSuperview()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.priceLabelsOffsetRight)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Derek"
        },
        "content": "        originalPriceLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.discountedPriceLabel.snp.bottom)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.priceLabelsGapHeight)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.right.equalToSuperview()"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.priceLabelsOffsetRight)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Derek"
        },
        "content": "        diningOptionControl.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.bottom.equalToSuperview()"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.diningOptionControlOffsetBottom)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.right.equalToSuperview()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.diningOptionControlOffsetRight)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func didTapIncrease() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Derek"
        },
        "content": "        delegate?.didTapIncrease(forCell: self)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func didTapDecrease() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Derek"
        },
        "content": "        delegate?.didTapDecrease(forCell: self)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 195
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/View/OrderConfirmationTotalView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import SnapKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "class OrderConfirmationTotalView: UIView {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let subtotalLabel \u003d UILabel()"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let discountsLabel \u003d UILabel()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let surchargesLabel \u003d UILabel()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let totalLabel \u003d UILabel()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let subtotalValueLabel \u003d UILabel()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let discountsValueLabel \u003d UILabel()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let surchargesValueLabel \u003d UILabel()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let totalValueLabel \u003d UILabel()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "        setupView()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var subtotal: String? {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return subtotalValueLabel.text"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "            subtotalValueLabel.text \u003d newValue"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var discounts: String? {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return discountsValueLabel.text"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "            discountsValueLabel.text \u003d newValue"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var surcharges: String? {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return surchargesValueLabel.text"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "            surchargesValueLabel.text \u003d newValue"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var total: String? {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return totalValueLabel.text"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "            totalValueLabel.text \u003d newValue"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func setupView() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "        self.backgroundColor \u003d Colors.base"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(subtotalLabel)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(discountsLabel)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(surchargesLabel)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(totalLabel)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(subtotalValueLabel)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(discountsValueLabel)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(surchargesValueLabel)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(totalValueLabel)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": "        subtotalLabel.text \u003d OrderConfirmationTotalConstants.subtotalLabelTitle"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsLabel.text \u003d OrderConfirmationTotalConstants.discountsLabelTitle"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "        surchargesLabel.text \u003d OrderConfirmationTotalConstants.surchargesLabelTitle"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "        totalLabel.text \u003d OrderConfirmationTotalConstants.totalLabelTitle"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": "        subtotalLabel.font \u003d subtotalLabel.font"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .withSize(OrderConfirmationTotalConstants.subtotalLabelFontSize)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsLabel.font \u003d subtotalLabel.font"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .withSize(OrderConfirmationTotalConstants.discountsSurchargesLabelFontSize)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": "        surchargesLabel.font \u003d subtotalLabel.font"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .withSize(OrderConfirmationTotalConstants.discountsSurchargesLabelFontSize)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": "        totalLabel.font \u003d UIFont"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .boldSystemFont(ofSize: OrderConfirmationTotalConstants.totalLabelFontSize)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": "        subtotalValueLabel.font \u003d subtotalLabel.font"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .withSize(OrderConfirmationTotalConstants.subtotalLabelFontSize)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsValueLabel.font \u003d subtotalLabel.font"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .withSize(OrderConfirmationTotalConstants.discountsSurchargesLabelFontSize)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": "        surchargesValueLabel.font \u003d subtotalLabel.font"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .withSize(OrderConfirmationTotalConstants.discountsSurchargesLabelFontSize)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": "        totalValueLabel.font \u003d UIFont"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .boldSystemFont(ofSize: OrderConfirmationTotalConstants.totalLabelFontSize)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "        subtotalLabel.textColor \u003d OrderConfirmationTotalConstants.labelsColor"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsLabel.textColor \u003d OrderConfirmationTotalConstants.labelsColor"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": "        surchargesLabel.textColor \u003d OrderConfirmationTotalConstants.labelsColor"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": "        totalLabel.textColor \u003d OrderConfirmationTotalConstants.labelsColor"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Derek"
        },
        "content": "        subtotalValueLabel.textColor \u003d OrderConfirmationTotalConstants.labelsColor"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsValueLabel.textColor \u003d OrderConfirmationTotalConstants.labelsColor"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Derek"
        },
        "content": "        surchargesValueLabel.textColor \u003d OrderConfirmationTotalConstants.labelsColor"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Derek"
        },
        "content": "        totalValueLabel.textColor \u003d OrderConfirmationTotalConstants.labelsColor"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Derek"
        },
        "content": "        subtotalLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.right.equalToSuperview()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationTotalConstants.totalsLabelsOffsetRight)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationTotalConstants.totalsLabelOffsetTop)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": "        subtotalValueLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.subtotalLabel.snp.right)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationTotalConstants.totalsLabelPriceGap)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.subtotalLabel.snp.top)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.right.equalTo(self.subtotalLabel.snp.right)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.subtotalLabel.snp.bottom)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationTotalConstants.totalsLabelOffsetTop)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsValueLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.discountsLabel.snp.right)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationTotalConstants.totalsSubLabelPriceGap)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.discountsLabel.snp.top)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Derek"
        },
        "content": "        surchargesLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.right.equalTo(self.subtotalLabel.snp.right)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.discountsLabel.snp.bottom)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationTotalConstants.totalsLabelOffsetTop)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Derek"
        },
        "content": "        surchargesValueLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.surchargesLabel.snp.right)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationTotalConstants.totalsSubLabelPriceGap)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.surchargesLabel.snp.top)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Derek"
        },
        "content": "        totalLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.right.equalTo(self.subtotalLabel.snp.right)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.surchargesLabel.snp.bottom)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationTotalConstants.totalsLabelOffsetTop)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.bottom.equalTo(OrderConfirmationTotalConstants.grandTotalLabelBottom)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Derek"
        },
        "content": "        totalValueLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.totalLabel.snp.right)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationTotalConstants.totalsLabelPriceGap)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.totalLabel.snp.top)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 160
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/View/OrderConfirmationViewController.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderConfirmationViewControllerInput: OrderConfirmationPresenterOutput {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func loadDisplay(viewModel: OrderConfirmationViewModel)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "protocol OrderConfirmationViewControllerOutput {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func computeBill()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "final class OrderConfirmationViewController: UITableViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let cellReuseIdentifier \u003d \"orderConfirmationItemCellIdentifier\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private class OrderConfirmationDataSource: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        weak var delegate: OrderConfirmationItemViewCellDelegate?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "        fileprivate let cellViewModel: OrderConfirmationViewModel"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        init(order: OrderConfirmationViewModel) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.cellViewModel \u003d order"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "            super.init()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "        func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return cellViewModel.orderItems.count"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "        func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let cell \u003d tableView.dequeueReusableCell("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "                withIdentifier: OrderConfirmationViewController.cellReuseIdentifier,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "                for: indexPath)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "            guard let itemCell \u003d cell as? OrderConfirmationItemViewCell else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "                assertionFailure(\"Invalid table view cell.\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "                return cell"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let model \u003d cellViewModel.orderItems[indexPath.row]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "            itemCell.imageIdentifier \u003d model.imageId"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "            itemCell.name \u003d model.name"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "            itemCell.quantity \u003d \"\\(model.quantity)\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "            itemCell.originalPrice \u003d model.originalPrice"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "            itemCell.discountedPrice \u003d model.discountedPrice"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "            itemCell.isTakeAway \u003d model.isTakeAway"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "            let additionalInformationView \u003d OrderConfirmationAdditionalInfoView()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "            model.options.forEach {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "                let addOnView \u003d OrderConfirmationItemOptionsAddonView()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "                addOnView.imageIdentifier \u003d $0.imageId"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "                addOnView.name \u003d $0.name"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "                addOnView.option \u003d $0.option"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "                addOnView.price \u003d $0.price"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "                additionalInformationView.addOption(view: addOnView)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "            model.addons.forEach {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "                let addOnView \u003d OrderConfirmationItemOptionsAddonView()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "                addOnView.imageIdentifier \u003d $0.imageId"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "                addOnView.name \u003d $0.name"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "                addOnView.price \u003d $0.price"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "                additionalInformationView.addAddon(view: addOnView)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "            model.discounts.forEach {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "                let discountView \u003d OrderConfirmationItemDiscountView()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": "                discountView.name \u003d $0.name"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "                discountView.effectDescription \u003d $0.description"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "                additionalInformationView.addDiscount(view: discountView)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": "            itemCell.additionalInformationView \u003d additionalInformationView"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "            itemCell.selectionStyle \u003d .none"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return itemCell"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "    override func tableView(_ tableView: UITableView,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "                            viewForFooterInSection section: Int) -\u003e UIView? {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let orderTotalView \u003d OrderConfirmationTotalView()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "        guard let orderTotal \u003d tableViewDataSource?.cellViewModel.orderTotal else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "        orderTotalView.subtotal \u003d orderTotal.itemSubtotal"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": "        orderTotalView.discounts \u003d orderTotal.establishmentDiscounts"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": "        orderTotalView.surcharges \u003d orderTotal.establishmentSurcharges"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": "        orderTotalView.total \u003d orderTotal.grandTotal"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return orderTotalView"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var tableViewDataSource: OrderConfirmationDataSource? {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": "            tableView.dataSource \u003d tableViewDataSource"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": "            tableView.reloadData()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var output: OrderConfirmationViewControllerOutput?"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var router: OrderConfirmationRouterProtocol?"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Initializers"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Derek"
        },
        "content": "    init(configurator: OrderConfirmationConfigurator \u003d OrderConfirmationConfigurator.shared) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Derek"
        },
        "content": "        super.init(nibName: nil, bundle: nil)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        configure(configurator: configurator)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Derek"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Derek"
        },
        "content": "        configure()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Configurator"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func configure(configurator: OrderConfirmationConfigurator \u003d OrderConfirmationConfigurator.shared) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Derek"
        },
        "content": "        configurator.configure(viewController: self)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        restorationIdentifier \u003d String(describing: type(of: self))"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        restorationClass \u003d type(of: self)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Derek"
        },
        "content": "        tableView.register(OrderConfirmationItemViewCell.self,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Derek"
        },
        "content": "                           forCellReuseIdentifier: OrderConfirmationViewController.cellReuseIdentifier)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - View lifecycle"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Derek"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Derek"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Derek"
        },
        "content": "        output?.computeBill()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Derek"
        },
        "content": "// MARK: - OrderConfirmationPresenterOutput"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Derek"
        },
        "content": "extension OrderConfirmationViewController: OrderConfirmationViewControllerInput {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func loadDisplay(viewModel: OrderConfirmationViewModel) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Derek"
        },
        "content": "        tableViewDataSource \u003d OrderConfirmationDataSource(order: viewModel)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Derek"
        },
        "content": "extension OrderViewController: OrderConfirmationItemViewCellDelegate {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func didTapIncrease(forCell cell: UITableViewCell) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Derek"
        },
        "content": "        print(\"Tapped increase\")"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func didTapDecrease(forCell cell: UITableViewCell) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Derek"
        },
        "content": "        print(\"Tapped decrease\")"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - UIViewControllerRestoration"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "extension OrderConfirmationViewController: UIViewControllerRestoration {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static func viewController(withRestorationIdentifierPath path: [String], coder: NSCoder) -\u003e UIViewController? {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return self.init()"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 159,
      "E-Liang Tan": 11
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/View/SubViews/OrderConfirmationAdditionalInfoView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import SnapKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "class OrderConfirmationAdditionalInfoView: UIView {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let addonsLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.text \u003d OrderConfirmationItemConstants.addonsLabelTitle"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.font \u003d UIFont"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .boldSystemFont(ofSize: OrderConfirmationItemConstants.additionalsLabelFontSize)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.isHidden \u003d true"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let optionsLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.text \u003d OrderConfirmationItemConstants.optionsLabelTitle"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.font \u003d UIFont"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .boldSystemFont(ofSize: OrderConfirmationItemConstants.additionalsLabelFontSize)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.isHidden \u003d true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let discountsLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.text \u003d OrderConfirmationItemConstants.discountsLabelTitle"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.font \u003d UIFont"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "            .boldSystemFont(ofSize: OrderConfirmationItemConstants.additionalsLabelFontSize)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "        label.isHidden \u003d true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let addonsStack: UIStackView \u003d {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let stack \u003d UIStackView()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "        stack.axis \u003d .vertical"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return stack"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let optionsStack: UIStackView \u003d {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let stack \u003d UIStackView()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "        stack.axis \u003d .vertical"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return stack"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let discountsStack: UIStackView \u003d {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let stack \u003d UIStackView()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "        stack.axis \u003d .vertical"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return stack"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "        setupView()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func addAddon(view: UIView) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addonsLabel.isHidden \u003d false"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addonsStack.addArrangedSubview(view)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func addOption(view: UIView) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": "        optionsLabel.isHidden \u003d false"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "        optionsStack.addArrangedSubview(view)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func addDiscount(view: UIView) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsLabel.isHidden \u003d false"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsStack.addArrangedSubview(view)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func setupView() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(addonsLabel)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(optionsLabel)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(discountsLabel)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(addonsStack)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(optionsStack)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(discountsStack)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": "        optionsLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.nameOptionsLabelOffsetHeight)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalToSuperview()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": "        optionsStack.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.optionsLabel.snp.bottom)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.additionalsOffsetTop)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.optionsLabel.snp.left)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addonsLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.optionsStack.snp.bottom)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.additionalsLabelsOffsetTop)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.optionsLabel.snp.left)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addonsStack.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.addonsLabel.snp.bottom)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.additionalsOffsetTop)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.optionsLabel.snp.left)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.addonsStack.snp.bottom)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.additionalsLabelsOffsetTop)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.optionsLabel.snp.left)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Derek"
        },
        "content": "        discountsStack.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.discountsLabel.snp.bottom)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationItemConstants.additionalsOffsetTop)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.optionsLabel.snp.left)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.bottom.equalTo(OrderConfirmationItemConstants.discountsStackBottom)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 123
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/View/SubViews/OrderConfirmationItemDiscountView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import SnapKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "class OrderConfirmationItemDiscountView: UIView {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let nameLabel \u003d UILabel()"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let effectDescriptionLabel \u003d UILabel()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var name: String? {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return nameLabel.text"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "            nameLabel.text \u003d newValue"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var effectDescription: String? {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return effectDescriptionLabel.text"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "            effectDescriptionLabel.text \u003d newValue"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "        setupView()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func setupView() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(nameLabel)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(effectDescriptionLabel)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "        nameLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationDiscountConstants.nameLabelOffsetTop)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalToSuperview()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.bottom"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .equalTo(OrderConfirmationDiscountConstants.nameLabelBottom)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "        effectDescriptionLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.nameLabel.snp.top)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.nameLabel.snp.right)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationDiscountConstants.descriptionLabelOffsetLeft)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 58
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/View/SubViews/OrderConfirmationItemOptionsAddonView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import SnapKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "class OrderConfirmationItemOptionsAddonView: UIView {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let image \u003d UIImageView()"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private var imageName: String?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let nameLabel \u003d UILabel()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let optionLabel \u003d UILabel()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private let priceLabel \u003d UILabel()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var imageIdentifier: String? {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return imageName"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "            guard let imageName \u003d newValue else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "                return"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "            image.image \u003d UIImage(named: imageName)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var name: String? {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return nameLabel.text"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "            nameLabel.text \u003d newValue"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var option: String? {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return optionLabel.text"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "            optionLabel.text \u003d newValue"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "    var price: String? {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "            return priceLabel.text"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "            priceLabel.text \u003d newValue"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "        setupView()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func setupView() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(image)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(nameLabel)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(optionLabel)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": "        addSubview(priceLabel)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "        image.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalToSuperview()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.height"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .equalTo(OrderConfirmationOptionsAddonConstants.imageLength)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.width"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .equalTo(OrderConfirmationOptionsAddonConstants.imageLength)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "        nameLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationOptionsAddonConstants.nameLabelOffsetTop)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.image.snp.right)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationOptionsAddonConstants.nameLabelOffsetLeft)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.bottom"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .equalTo(OrderConfirmationOptionsAddonConstants.nameLabelBottom)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": "        optionLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.nameLabel.snp.top)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.nameLabel.snp.right)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationOptionsAddonConstants.optionPriceLabelOffsetLeft)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "        priceLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.top.equalTo(self.nameLabel.snp.top)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "            make.left.equalTo(self.optionLabel.snp.right)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": "                .offset(OrderConfirmationOptionsAddonConstants.optionPriceLabelOffsetLeft)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 102
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/ViewModel/OrderConfirmationViewModel.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "struct OrderConfirmationViewModel {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "    struct OrderItemViewModel {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let imageId: String"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let quantity: Int"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let originalPrice: String"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discountedPrice: String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let options: [OrderItemOptionViewModel]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let addons: [OrderItemAddonViewModel]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discounts: [OrderItemDiscountViewModel]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let isTakeAway: Bool"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "    struct OrderItemOptionViewModel {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let imageId: String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let option: String"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let price: String"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "    struct OrderItemAddonViewModel {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let imageId: String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let quantity: Int"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let price: String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "    struct OrderItemDiscountViewModel {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let name: String"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let description: String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "    struct OrderTotal {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let itemSubtotal: String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let establishmentDiscounts: String"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let establishmentSurcharges: String"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let grandTotal: String"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let orderItems: [OrderItemViewModel]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let orderTotal: OrderTotal"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 47
    }
  },
  {
    "path": "NAME/Scenes/Customer/OrderConfirmation/Worker/OrderConfirmationWorker.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "class OrderConfirmationWorker {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Business Logic"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func doSomeWork() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "        // TODO: Do the work"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 11
    }
  },
  {
    "path": "NAME/Utilities/AlertHelper.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  AlertHelper.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 18/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum AlertHelper {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    /// A factory for UIAlertController of style alert. It will only create textField"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    /// if textFieldText is not nil."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    /// The content of the textField is the argument to the okHandler."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static func makeAlertController(title: String?,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                    message: String?,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                    textFieldText: String?,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                    showCancelButton: Bool \u003d true,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                    okHandler: @escaping (String?) -\u003e Void) -\u003e UIAlertController {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let alertController \u003d UIAlertController(title: title, message: message, preferredStyle: .alert)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if let textFieldText \u003d textFieldText {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            alertController.addTextField { $0.text \u003d textFieldText }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let okAction \u003d UIAlertAction(title: AlertConstants.okTitle, style: .default) { _ in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            okHandler(alertController.textFields?.first?.text)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        alertController.addAction(okAction)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        if showCancelButton {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            let cancelAction \u003d UIAlertAction(title: AlertConstants.cancelTitle,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                             style: .cancel,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                             handler: nil)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            alertController.addAction(cancelAction)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return alertController"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 37
    }
  },
  {
    "path": "NAME/Utilities/AuthManager.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  AuthManager.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 21/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "protocol AuthManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func login(withUsername username: String, password: String) -\u003e AccessControl?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func logout()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getCurrentStallOrEstablishment() -\u003e (id: String, type: AccountType)?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "class ProductionAuthManager: AuthManager {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private let storageManager: StorageManager"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private var accessControl: AccessControl?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    init(storageManager: StorageManager) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        self.storageManager \u003d storageManager"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func login(withUsername username: String, password: String) -\u003e AccessControl? {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let user \u003d storageManager.getAccount(username: username) else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            print(\"User does not exist!\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard user.checkPassword(password) else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            print(\"Wrong password!\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // Update current access control"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        accessControl \u003d user.accessControl"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return user.accessControl"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func logout() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        accessControl \u003d nil"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getCurrentStallOrEstablishment() -\u003e (id: String, type: AccountType)? {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let accessControl \u003d accessControl else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        switch accessControl {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .kitchen(let stallId), .stallOwner(let stallId):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return (stallId, .stall)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        case .establishment(let establishmentId):"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return (establishmentId, .establishment)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 58
    }
  },
  {
    "path": "NAME/Utilities/Config.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Config.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - ReuseIdentifiers"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum ReuseIdentifiers {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderCellIdentifier \u003d \"orderCellIdentifier\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderItemCellIdentifier \u003d \"orderItemCellIdentifier\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let settingsCellIdentifier \u003d \"settingsCellIdentifier\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "// MARK: - Colorrs"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "enum Colors {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let base \u003d UIColor(displayP3Red: 106 / 255,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "                              green: 108 / 255,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "                              blue: 209 / 255,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "                              alpha: 1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Splash"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum SplashConstants {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let numTapsToLoginScreen \u003d 5"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let tapAreaWidth: CGFloat \u003d 100.0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let tapAreaHeight: CGFloat \u003d 100.0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Login"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum LoginConstants {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let cancelButtonTitle \u003d \"CANCEL\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let loginButtonTitle \u003d \"LOGIN\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let usernamePlaceholder \u003d \"Username\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let passwordPlaceholder \u003d \"Password\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let containerHeight: CGFloat \u003d 300.0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let maxContainerWidth: CGFloat \u003d 600.0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let minContainerMargin: CGFloat \u003d 40.0"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let containerCornerRadius: CGFloat \u003d 20.0"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let containerColor \u003d UIColor.Custom.purple"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let textFieldMargin: CGFloat \u003d 16.0"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let textFieldHeight: CGFloat \u003d 60.0"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let textFieldBackgroundColor: UIColor \u003d .white"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let loginErrorTitle \u003d \"Username or password does not exist\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let loginErrorMessage \u003d \"Hint: The account credentials are in FixtureGenerator.swift\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Stall Root"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum StallRootConstants {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let menuTabBarTitle \u003d \"MENU\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let kitchenTabBarTitle \u003d \"KITCHEN\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let settingsTabBarTitle \u003d \"SETTINGS\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static let logoutTabBarTitle \u003d \"LOG OUT\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Stall Kitchen Backlog"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum KitchenBacklogConstants {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let clockHeight: CGFloat \u003d 50.0"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let clockWidth: CGFloat \u003d 150.0"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: Order"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderReadyButtonTitle \u003d \"ALL READY\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderCompleteButtonTitle \u003d \"ORDER COLLECTED\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderWidth: CGFloat \u003d 350"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let spaceBetweenOrders: CGFloat \u003d 20"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderMargins: CGFloat \u003d 20"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum OrderConstants {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let preparedItemsSectionTitle \u003d \"PREPARED\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderNumberPrefix \u003d \"Order #\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let headerPadding: CGFloat \u003d 16.0"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let headerHeight: CGFloat \u003d 50.0"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: Order Item"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let eatInDiningOptionTitle \u003d \"(EAT IN)\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let takeAwayDiningOptionTitle \u003d \"(TAKE AWAY)\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let itemReadyButtonTitle \u003d \"ITEM READY\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let addonsHeaderTitle \u003d \"Add Ons:\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let commentsHeaderTitle \u003d \"Comments:\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let optionsHeaderTitle \u003d \"Options:\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderItemPadding: CGFloat \u003d 8.0"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let leftPanelRatio: CGFloat \u003d 1 / 5"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderItemTitleFontSize: CGFloat \u003d 22.0"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let orderDetailsFontColor: UIColor \u003d .darkGray"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Establishment Root"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum EstablishmentRootConstants {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let stallListTabBarTitle \u003d \"STALLS\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let settingsTabBarTitle \u003d \"SETTINGS\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static let logoutTabBarTitle \u003d \"LOG OUT\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Stall List"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum StallListConstants {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    // MARK: Stall Cell"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let customerCellHeight: CGFloat \u003d 70.0"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let establishmentCellHeight: CGFloat \u003d 300.0"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let establishmentCellWidth: CGFloat \u003d 300.0"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let editButtonTitle \u003d \"EDIT\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let deleteButtonTitle \u003d \"DELETE\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let titleFontSize: CGFloat \u003d 22.0"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let cellPadding: CGFloat \u003d 8.0"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - Customer Common"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "enum CustomerCommonConstants {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static let primaryWidth: CGFloat \u003d 250"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": "// MARK: - Order Confirmation"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": "enum OrderConfirmationItemConstants {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // Item View Labels"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let addonsLabelTitle \u003d \"Add Ons\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let optionsLabelTitle \u003d \"Options\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let discountsLabelTitle \u003d \"Discounts\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let increaseQuantityButtonTitle \u003d \"â²\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let decreaseQuantityButtonTitle \u003d \"â¼\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let removeItemButtonTitle \u003d \"ðï¸\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let diningOptionControlHeretitle \u003d \"Here\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let diningOptionControlTakeAwaytitle \u003d \"Take Away\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // Font sizes"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let nameLabelFontSize: CGFloat \u003d 30"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let additionalsLabelFontSize: CGFloat \u003d 20"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let quantityLabelsFontSize: CGFloat \u003d 40"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let discountedPriceFontSize: CGFloat \u003d 36"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // Item View Constraints"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let itemViewOffsetTop \u003d 10"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let itemViewBottom \u003d -10"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let imageOffsetTop \u003d 20"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let imageOffsetLeft \u003d 30"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let imageLength \u003d 150"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let nameLabelOffsetTop \u003d 20"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let nameLabelOffsetLeft \u003d 40"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let nameOptionsLabelOffsetHeight \u003d 30"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let additionalsOffsetTop \u003d 5"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let additionalsLabelsOffsetTop \u003d 10"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let discountsStackBottom \u003d -20"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let priceLabelsOffsetRight \u003d -20"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let priceLabelsGapHeight \u003d 10"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let quantityLabelOffsetRight \u003d -100"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let increaseQuantityOffsetHeight \u003d -10"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let decreaseQuantityOffsetHeight \u003d 10"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let removeItemButtonOffsetLeft \u003d 50"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let diningOptionControlOffsetBottom \u003d -15"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let diningOptionControlOffsetRight \u003d -15"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Derek"
        },
        "content": "enum OrderConfirmationOptionsAddonConstants {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let imageLength \u003d 30"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let nameLabelOffsetTop \u003d 5"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let nameLabelOffsetLeft \u003d 10"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let nameLabelBottom \u003d -10"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let optionPriceLabelOffsetLeft \u003d 20"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Derek"
        },
        "content": "enum OrderConfirmationDiscountConstants {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let nameLabelOffsetTop \u003d 5"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let nameLabelBottom \u003d -10"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let descriptionLabelOffsetLeft \u003d 20"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Derek"
        },
        "content": "enum OrderConfirmationTotalConstants {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // Labels"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let subtotalLabelTitle \u003d \"Subtotal\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let discountsLabelTitle \u003d \"Establishment Discounts\""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let surchargesLabelTitle \u003d \"Establishment Surcharges\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let totalLabelTitle \u003d \"Total\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // Font sizes"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let subtotalLabelFontSize: CGFloat \u003d 28"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let discountsSurchargesLabelFontSize: CGFloat \u003d 25"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let totalLabelFontSize: CGFloat \u003d 30"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // Colours"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let labelsColor \u003d UIColor.white"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // Constraints"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let totalsLabelsOffsetRight \u003d -200"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let totalsLabelOffsetTop \u003d 20"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let totalsLabelPriceGap \u003d 10"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let totalsSubLabelPriceGap \u003d 20"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static let grandTotalLabelBottom \u003d -10"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - Constraints"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum ConstraintConstants {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let standardValue: CGFloat \u003d 8.0"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let dividerWidth: CGFloat \u003d 1.0"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// MARK: - Menu"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "enum MenuConstants {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static let menuItemDragTypeIdentifier \u003d \"menuItemDragType\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum MenuDetailConstants {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let defaultMenuItemName \u003d \"Unnamed Menu item\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum MenuInfoConstants {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let maximumNumberOfLines \u003d 4"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let nameAlertTitle \u003d \"Menu Item Name\""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let priceAlertTitle \u003d \"Price\""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let detailsAlertTitle \u003d \"Menu Item Detail\""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let extraCommentAlertTitle \u003d \"Extra Comment\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let commentLabelText \u003d \"EXTRA COMMENT\""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let deleteCommentButtonTitle \u003d \"DELETE EXTRA COMMENT\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - MenuAddons"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum MenuAddonsConstants {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let deleteConfirmationTitle \u003d \"Delete\""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let deleteConfirmationMessage \u003d \"Are you sure you want to delete %@?\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let deleteActionTitle \u003d \"Delete\""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let featureComingSoon \u003d \"Feature coming in version 2!\""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let reorderUp \u003d \"â²\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let reorderDown \u003d \"â¼\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addOptionTypeTitle \u003d \"New option type\""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addOptionTypeChoices: [(name: String, value: MenuItemOptionType.MetaType)] \u003d MenuItemOptionType.MetaType.allCases.map { option in"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        switch option {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .boolean: return (\"YES/NO\", .boolean)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .quantity: return (\"Quantity\", .quantity)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleChoice: return (\"Multiple Choice\", .multipleChoice)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        case .multipleResponse: return (\"Multiple Response\", .multipleResponse)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addOptionNameTitle \u003d \"New option name\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addOptionPriceTitle \u003d \"New option price\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let priceDefaultValue \u003d \"0.0\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addOptionSectionName \u003d \"New option\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addChoiceNameTitle \u003d \"%@\""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addChoiceNameMessage \u003d \"New choice title\""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addChoicePriceMessage \u003d \"New choice price\""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addChoiceButtonTitle \u003d \"+\""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let resetButtonTitle \u003d \"RESET ALL\""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let sectionResetButtonTitle \u003d \"RESET\""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addButtonTitle \u003d \"ADD\""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addOnsOptionTitle \u003d \"Add-ons\""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let booleanChoices \u003d [true, false]"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let booleanChoicesTitle \u003d [\"YES\", \"NO\"]"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let addonsSize \u003d CGSize(width: 100, height: 120)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let footerViewHeight: CGFloat \u003d 100.0"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let sectionHeaderHeight: CGFloat \u003d 50.0"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let diningOptionTitle \u003d \"Dining Options\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let diningOptionLabels: [(title: String, value: OrderItem.DiningOption)] \u003d OrderItem.DiningOption.allCases"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        .map { option in"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            switch option {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .eatin: return (\"Eat-in\", option)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            case .takeaway: return (\"Takeaway\", option)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let backgroundColor \u003d UIColor.Custom.paleGray"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let selectedCellBackgroundColor: UIColor \u003d .white"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// MARK: - QuantityView"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum QuantityViewConstants {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let increaseQuantityTitle \u003d \"â²\""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let decreaseQuantityTitle \u003d \"â¼\""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let title \u003d \"Qty\""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let quantityWidth: CGFloat \u003d 30.0"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let quantityFontSize: CGFloat \u003d 22.0"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum AlertConstants {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let okTitle \u003d \"OK\""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    static let cancelTitle \u003d \"Cancel\""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Button"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum ButtonConstants {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let mediumButtonHeight: CGFloat \u003d 45.0"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Corner Radius"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum CornerRadiusConstants {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let standardRadius: CGFloat \u003d 15.0"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let subtleRadius: CGFloat \u003d 10.0"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Date"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum DateConstants {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let timerSuffix \u003d \" ago\""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Custom Alert"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum CustomAlertConstants {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let doneButtonTitle \u003d \"OK\""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let titleFontSize: CGFloat \u003d 32.0"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let imageViewHeight: CGFloat \u003d 200.0"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let alertWidth: CGFloat \u003d 450.0"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Admin Settings"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum AdminSettingsConstants {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let stallSettingsHeaderTitle \u003d \"Stall Settings\""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let estSettingsHeaderTitle \u003d \"Establishment Settings\""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let nameTitle \u003d \"Name\""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let locationTitle \u003d \"Location\""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let detailsTitle \u003d \"Details\""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let namePlaceholder \u003d \"Enter Name\""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let locationPlaceholder \u003d \"Enter Location\""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let detailsPlaceholder \u003d \"Enter Details\""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let saveButtonTitle \u003d \"SAVE\""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let cancelButtonTitle \u003d \"CANCEL\""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let cellSplitFraction: CGFloat \u003d 1 / 4"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let saveButtonWidth: CGFloat \u003d 150.0"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Image"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum ImageConstants {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let sadMascotName \u003d \"mascot-sad\""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "// MARK: - Error Messages"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "enum ErrorMessage {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let stallDeleteErrorTitle \u003d \"Sorry! Error Deleting Stall.\""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static let stallDeleteErrorMessage \u003d \"The stall cannot be deleted. Please try again later.\""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 77,
      "Derek": 92,
      "Caryn Heng": 153,
      "E-Liang Tan": 12
    }
  },
  {
    "path": "NAME/Utilities/Date+Extensions.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Date+Extensions.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 17/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension Date {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func formattedAsTimeFromNow() -\u003e String? {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let formatter \u003d DateComponentsFormatter()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        formatter.allowedUnits \u003d [.hour, .minute, .second]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        formatter.unitsStyle \u003d .abbreviated"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let formattedDate \u003d formatter.string(from: self, to: Date()) else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return formattedDate + DateConstants.timerSuffix"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func formattedAsTime() -\u003e String {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let formatter \u003d DateFormatter()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        formatter.timeStyle \u003d .medium"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return formatter.string(from: self)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 27
    }
  },
  {
    "path": "NAME/Utilities/DependencyInjector.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  DependencyInjector.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol DependencyInjector {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    var storageManager: StorageManager { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    var authManager: AuthManager { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var shoppingCart: ShoppingCart { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "final class ProductionDependencyInjector: DependencyInjector {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static let shared \u003d ProductionDependencyInjector()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    let storageManager: StorageManager \u003d RealmStorageManager.shared"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    private(set) lazy var authManager: AuthManager \u003d ProductionAuthManager(storageManager: storageManager)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private(set) lazy var shoppingCart: ShoppingCart \u003d ProductionShoppingCart(storageManager: storageManager)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private init() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "/// The default dependency injector for the app, for use in development and production."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "let appDefaultInjector \u003d ProductionDependencyInjector.shared"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 2,
      "Caryn Heng": 2,
      "E-Liang Tan": 23
    }
  },
  {
    "path": "NAME/Utilities/FixtureGenerator.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namjjd"
        },
        "content": "/// Generate Realm fixtures to seed data store"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namjjd"
        },
        "content": "///"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namjjd"
        },
        "content": "/// Possible usage of FixtureGenerator:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namjjd"
        },
        "content": "/// 0) Modify file below (take note of options)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namjjd"
        },
        "content": "/// 1) Run FixtureGenerator.create()"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namjjd"
        },
        "content": "/// 2) Find path that realm file was saved in"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namjjd"
        },
        "content": "///      - po Realm.Configuration.defaultConfiguration.fileURL if no fileURL was specified"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namjjd"
        },
        "content": "/// 3) Copy path into console, open [path] to view output"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "// swiftlint:disable function_body_length"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "enum FixtureGenerator {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static func create(append: Bool \u003d false) throws {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "        // MARK: Models"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let establishments \u003d self.createEstablishments()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let stalls \u003d self.createStalls()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let accounts \u003d self.createAccounts(establishments: establishments, stalls: stalls)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let menus \u003d self.createMenus(stalls: stalls)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let categories \u003d self.createMenuCategories(menus: menus)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let menuItemOptions \u003d self.createMenuItemOptions()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let menuItems \u003d self.createIndividualMenuItems(categories: categories,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                                       options: menuItemOptions)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let customers \u003d self.createCustomers()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let orders \u003d self.createOrders(customers: customers)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let orderItems \u003d self.createOrderItems(menuItems: menuItems,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                               orders: orders,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                               menuItemOptions: menuItemOptions)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "        // MARK: Relationships"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        //Add establishment to stalls"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        stalls[0].establishment \u003d establishments[0]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        stalls[1].establishment \u003d establishments[0]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        stalls[2].establishment \u003d establishments[0]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        // Add menu to each store"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        for (stall, menu) in zip(stalls, menus) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            stall.menu \u003d menu"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "        // MARK: Save to Realm"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        try RealmStorageManager.shared.writeTransaction { manager in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "namjjd"
        },
        "content": "            if !append {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                manager.clearData()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "namjjd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            manager.add(objects: establishments, update: false)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            manager.add(objects: stalls, update: false)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            manager.add(objects: accounts, update: false)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            manager.add(objects: menus, update: false)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            manager.add(objects: categories, update: false)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            manager.add(objects: customers, update: false)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            manager.add(objects: menuItems, update: false)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            manager.add(objects: orders, update: false)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            manager.add(objects: orderItems, update: false)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func createEstablishments() -\u003e [Establishment] {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let est1 \u003d Establishment(name: \"Tony\u0027s Food Paradise\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let est2 \u003d Establishment(name: \"Wai Kay\u0027s Food Heaven\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return [est1, est2]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func createStalls() -\u003e [Stall] {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let stall1 \u003d Stall(name: \"Dijkstra\u0027s Wonton Mee\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                           location: \"Unit 1\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                           details: \"Algorithmic pleasure for your taste buds\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let stall2 \u003d Stall(name: \"Knuth\u0027s Carrot Cake\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                           location: \"Unit 2\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                           details: \"Carrot cake for all\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let stall3 \u003d Stall(name: \"Ada\u0027s Fried Noodles\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                           location: \"Unit 3\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                           details: \"Everything stir fried\")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        return [stall1, stall2, stall3]"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    static func createAccounts(establishments: [Establishment], stalls: [Stall]) -\u003e [Account] {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        assert(establishments.count \u003e\u003d 1)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        assert(stalls.count \u003e\u003d 2)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let acc1 \u003d Account(username: \"est1\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           password: \"strongpw\","
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           accessControl: .establishment(establishmentId: establishments[0].id))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let acc2 \u003d Account(username: \"est2\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           password: \"strongpw\","
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           accessControl: .establishment(establishmentId: establishments[1].id))"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let acc3 \u003d Account(username: \"stall1\","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           password: \"strongpw\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           accessControl: .stallOwner(stallId: stalls[0].id))"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let acc4 \u003d Account(username: \"stall2\","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           password: \"strongpw\","
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           accessControl: .stallOwner(stallId: stalls[1].id))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let acc5 \u003d Account(username: \"kitchen1\","
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           password: \"strongpw\","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           accessControl: .kitchen(stallId: stalls[0].id))"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let acc6 \u003d Account(username: \"kitchen2\","
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           password: \"strongpw\","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                           accessControl: .kitchen(stallId: stalls[1].id))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return [acc1, acc2, acc3, acc4, acc5, acc6]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func createMenus(stalls: [Stall]) -\u003e [Menu] {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let menu1 \u003d Menu(stall: stalls[0])"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let menu2 \u003d Menu(stall: stalls[1])"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let menu3 \u003d Menu(stall: stalls[2])"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        return [menu1, menu2, menu3]"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func createMenuCategories(menus: [Menu]) -\u003e [MenuCategory] {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Derek"
        },
        "content": "        assert(menus.count \u003e\u003d 3)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let cat1a \u003d MenuCategory(name: \"Dry Noodles\", menu: menus[0])"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let cat1b \u003d MenuCategory(name: \"Wet Noodles\", menu: menus[0])"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let cat2a \u003d MenuCategory(name: \"Roasted Pork\", menu: menus[1])"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let cat2b \u003d MenuCategory(name: \"Roasted Chicken\", menu: menus[1])"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let cat2c \u003d MenuCategory(name: \"Roasted Duck\", menu: menus[1])"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let cat2d \u003d MenuCategory(name: \"Roasted Beef\", menu: menus[1])"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2e \u003d MenuCategory(name: \"Roasted Cat\", menu: menus[1])"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2f \u003d MenuCategory(name: \"Roasted Fish\", menu: menus[1])"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2g \u003d MenuCategory(name: \"Roasted Egg\", menu: menus[1])"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2h \u003d MenuCategory(name: \"Roasted Shark\", menu: menus[1])"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2i \u003d MenuCategory(name: \"Roasted Human\", menu: menus[1])"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2j \u003d MenuCategory(name: \"Roasted Dinasaur\", menu: menus[1])"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2k \u003d MenuCategory(name: \"Roasted Iguana\", menu: menus[1])"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2l \u003d MenuCategory(name: \"Roasted Cockroach\", menu: menus[1])"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2m \u003d MenuCategory(name: \"Roasted Bark\", menu: menus[1])"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2n \u003d MenuCategory(name: \"Roasted Roast\", menu: menus[1])"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2o \u003d MenuCategory(name: \"Roasted Bone\", menu: menus[1])"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2p \u003d MenuCategory(name: \"Roasted Lion\", menu: menus[1])"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let cat2q \u003d MenuCategory(name: \"Roasted Dog\", menu: menus[1])"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        let cat3a \u003d MenuCategory(name: \"General\", menu: menus[2])"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "namjjd"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "namjjd"
        },
        "content": "        return [cat1a, cat1b,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                cat2a, cat2b, cat2c, cat2d, cat2e, cat2f, cat2g, cat2h, cat2i,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                cat2j, cat2k, cat2l, cat2m, cat2n, cat2o, cat2p, cat2q,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "namjjd"
        },
        "content": "                cat3a]"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "namjjd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func createMenuItemOptions() -\u003e [MenuItemOption] {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let itemOption1 \u003d MenuItemOption(name: \"Vegetables\","
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         options: .boolean(price: 500),"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         defaultValue: .boolean(false))"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let itemOption2 \u003d MenuItemOption(name: \"Golden Mushroom\","
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         options: .quantity(price: 50),"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         defaultValue: .quantity(1))"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let itemOption3 \u003d MenuItemOption(name: \"Broth\","
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         options: .multipleChoice(["
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"Chicken\", 500), (\"Seafood\", 400), (\"Never\", 300),"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"Gonna\", 200), (\"Give\", 100), (\"You\", 0), (\"Up\", 1_000)]),"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         defaultValue: .multipleChoice(5))"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let itemOption4 \u003d MenuItemOption(name: \"NDP Songs\","
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         options: .multipleChoice(["
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"Count on Me\", 100), (\"Five stars\", 200), (\"Litle Things\", 300),"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"Stand up\", 400),"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"Will You\", 500),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"Home\", 600)]),"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         defaultValue: .multipleChoice(2))"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let itemOption5 \u003d MenuItemOption(name: \"Best 3217 TA\","
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         options: .multipleResponse(["
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"Herbert\", 500), (\"Xien Dong\", 500), (\"Yunpeng\", 500),"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"Yanhao\", 500), (\"Wai Kay\", 5_000)]),"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         defaultValue: .multipleResponse([0, 4]))"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let itemOption6 \u003d MenuItemOption(name: \"2019 General Election Ballot\","
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         options: .multipleChoice([(\"PAP\", 1_000_000), (\"PPAP\", 0)]),"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         defaultValue: .multipleChoice(0))"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let itemOption7 \u003d MenuItemOption(name: \"Best Language\","
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         options: .multipleChoice(["
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"Swift\", 0), (\"Objective-C\", 0), (\"C\", 0),"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            (\"JavaScript\", 0), (\"Python\", 0), (\"Ruby\", 0)]),"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                         defaultValue: .multipleChoice(5))"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return [itemOption1, itemOption2, itemOption3, itemOption4, itemOption5, itemOption6, itemOption7]"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func createIndividualMenuItems(categories: [MenuCategory],"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                          options: [MenuItemOption]) -\u003e [IndividualMenuItem] {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Derek"
        },
        "content": "        assert(options.count \u003e\u003d 3)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1a1 \u003d IndividualMenuItem(name: \"Wonton Mee\", price: 3_000, options: [options[0]])"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1a2 \u003d IndividualMenuItem(name: \"Kolok Mee\", price: 3_500, options: [options[1]])"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1b1 \u003d IndividualMenuItem(name: \"Wonton Mee\", price: 3_000, options: [options[2]])"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1b2 \u003d IndividualMenuItem(name: \"Kolok Mee\", price: 3_500, options: [options[2]])"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let item2a1 \u003d IndividualMenuItem(name: \"Item A\", price: 3_000, options: options)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2a2 \u003d IndividualMenuItem(name: \"Item B\", price: 3_500)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2b1 \u003d IndividualMenuItem(name: \"Item C\", price: 4_000)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2b2 \u003d IndividualMenuItem(name: \"Item D\", price: 4_500)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2c1 \u003d IndividualMenuItem(name: \"Item E\", price: 3_000)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2c2 \u003d IndividualMenuItem(name: \"Item F\", price: 3_500)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2d1 \u003d IndividualMenuItem(name: \"Item G\", price: 4_000)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2d2 \u003d IndividualMenuItem(name: \"Item H\", price: 4_500)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2e1 \u003d IndividualMenuItem(name: \"Item I\", price: 3_000, options: options)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2e2 \u003d IndividualMenuItem(name: \"Item J\", price: 3_500)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2f1 \u003d IndividualMenuItem(name: \"Item K\", price: 4_000)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2f2 \u003d IndividualMenuItem(name: \"Item L\", price: 4_500)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2g1 \u003d IndividualMenuItem(name: \"Item M\", price: 3_000)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2g2 \u003d IndividualMenuItem(name: \"Item N\", price: 3_500)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2h1 \u003d IndividualMenuItem(name: \"Item O\", price: 4_000)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2h2 \u003d IndividualMenuItem(name: \"Item P\", price: 4_500)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2i1 \u003d IndividualMenuItem(name: \"Item Q\", price: 3_000, options: options)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2i2 \u003d IndividualMenuItem(name: \"Item R\", price: 3_500)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2j1 \u003d IndividualMenuItem(name: \"Item S\", price: 4_000)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2j2 \u003d IndividualMenuItem(name: \"Item T\", price: 4_500)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2k1 \u003d IndividualMenuItem(name: \"Item U\", price: 3_000)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2k2 \u003d IndividualMenuItem(name: \"Item V\", price: 3_500)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2l1 \u003d IndividualMenuItem(name: \"Item W\", price: 4_000)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2l2 \u003d IndividualMenuItem(name: \"Item X\", price: 4_500)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2m1 \u003d IndividualMenuItem(name: \"Item Y\", price: 3_000, options: options)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2m2 \u003d IndividualMenuItem(name: \"Item Z\", price: 3_500)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2n1 \u003d IndividualMenuItem(name: \"Item AA\", price: 4_000)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2n2 \u003d IndividualMenuItem(name: \"Item AB\", price: 4_500)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2o1 \u003d IndividualMenuItem(name: \"Item AC\", price: 3_000)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2o2 \u003d IndividualMenuItem(name: \"Item AD\", price: 3_500)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2p1 \u003d IndividualMenuItem(name: \"Item AE\", price: 4_000)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2p2 \u003d IndividualMenuItem(name: \"Item AF\", price: 4_500)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2q1 \u003d IndividualMenuItem(name: \"Item AG\", price: 4_000)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let item2q2 \u003d IndividualMenuItem(name: \"Item AH\", price: 4_500)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3a1 \u003d IndividualMenuItem(name: \"Fried Fish Rice\", price: 5_000)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3a2 \u003d IndividualMenuItem(name: \"Fried Chicken Noodles\", price: 4_800)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Derek"
        },
        "content": "        assert(categories.count \u003e\u003d 7)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        item2a1.addAddOns([item2b1, item2b2, item2d1])"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let now \u003d DateInterval(start: Date(timeIntervalSinceNow: 0),"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Derek"
        },
        "content": "                               end: Date(timeIntervalSinceNow: 10))"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount1 \u003d Discount(name: \"Special Promo\","
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             priceModification: .absolute(amount: 500),"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             stackable: true,"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             timeCondition: .dayRange(now))"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount2 \u003d Discount(name: \"Item Special\","
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             priceModification: .multiplier(factor: 0.05),"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             stackable: false,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             timeCondition: .dayRange(now))"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item1a1.addDiscount(discount1)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item1a1.addDiscount(discount2)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item1a2.addDiscount(discount1)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2a1.addDiscount(discount1)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2a2.addDiscount(discount1)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item1a1.categories.append(categories[0])"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item1a2.categories.append(categories[0])"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item1b1.categories.append(categories[1])"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item1b2.categories.append(categories[1])"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2a1.categories.append(categories[2])"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2a2.categories.append(categories[2])"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2b1.categories.append(categories[3])"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2b2.categories.append(categories[3])"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2c1.categories.append(categories[4])"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2c2.categories.append(categories[4])"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2d1.categories.append(categories[5])"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Derek"
        },
        "content": "        item2d2.categories.append(categories[5])"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2e1.categories.append(categories[6])"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2e2.categories.append(categories[6])"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2f1.categories.append(categories[7])"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2f2.categories.append(categories[7])"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2g1.categories.append(categories[8])"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2g2.categories.append(categories[8])"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2h1.categories.append(categories[9])"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2h2.categories.append(categories[9])"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2i1.categories.append(categories[10])"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2i2.categories.append(categories[10])"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2j1.categories.append(categories[11])"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2j2.categories.append(categories[11])"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2k1.categories.append(categories[12])"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2k2.categories.append(categories[12])"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2l1.categories.append(categories[13])"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2l2.categories.append(categories[13])"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2m1.categories.append(categories[14])"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2m2.categories.append(categories[14])"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2n1.categories.append(categories[15])"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2n2.categories.append(categories[15])"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2o1.categories.append(categories[16])"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2o2.categories.append(categories[16])"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2p1.categories.append(categories[17])"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2p2.categories.append(categories[17])"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2q1.categories.append(categories[18])"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item2q2.categories.append(categories[18])"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item3a1.categories.append(categories[19])"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        item3a2.categories.append(categories[19])"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return [item1a1, item1a2, item1b1, item1b2,"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Derek"
        },
        "content": "                item2a1, item2a2, item2b1, item2b2, item2c1, item2c2, item2d1, item2d2,"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                item2e1, item2e2, item2f1, item2f2, item2g1, item2g2, item2h1, item2h2,"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                item2i1, item2i2, item2j1, item2j2, item2k1, item2k2, item2l1, item2l2,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                item2m1, item2m2, item2n1, item2n2, item2o1, item2o2, item2p1, item2p2,"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                item2q1, item2q2,"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Derek"
        },
        "content": "                item3a1, item3a2]"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func createCustomers() -\u003e [Customer] {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let customer1 \u003d Customer()"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let customer2 \u003d Customer()"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let customer3 \u003d Customer()"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Derek"
        },
        "content": "        return [customer1, customer2, customer3]"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func createOrders(customers: [Customer]) -\u003e [Order] {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Derek"
        },
        "content": "        assert(customers.count \u003e\u003d 3)"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order1 \u003d Order(queueNumber: 123, customer: customers[0])"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order2 \u003d Order(queueNumber: 456, customer: customers[1])"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order3 \u003d Order(queueNumber: 789, customer: customers[2])"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let order4 \u003d Order(queueNumber: 147, customer: customers[0])"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return [order1, order2, order3, order4]"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Derek"
        },
        "content": "    static func createOrderItems(menuItems: [IndividualMenuItem],"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                 orders: [Order],"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                 menuItemOptions: [MenuItemOption]) -\u003e [OrderItem] {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Derek"
        },
        "content": "        assert(menuItems.count \u003e\u003d 13)"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        assert(orders.count \u003e\u003d 4)"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let orderItem1 \u003d OrderItem(order: orders[0],"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   menuItem: menuItems[0],"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   quantity: 1,"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   comment: \"Cut the noodles please\","
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   diningOption: .eatin)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let orderItem2 \u003d OrderItem(order: orders[0],"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   menuItem: menuItems[12], // Fried Fish Rice"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   quantity: 2,"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   comment: \"\","
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   diningOption: .eatin)"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let orderItem3 \u003d OrderItem(order: orders[0],"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   menuItem: menuItems[13], // Fried Chicken Noodles"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   quantity: 1,"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   comment: \"Don\u0027t spill my soup please\","
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                   diningOption: .takeaway)"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let orderItem4 \u003d OrderItem(order: orders[1],"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   menuItem: menuItems[0],"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   quantity: 1,"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   comment: \"Cut the noodles please. No pork no lard. Actually I want halal version.\","
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   diningOption: .eatin)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let orderItem5 \u003d OrderItem(order: orders[2],"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   menuItem: menuItems[12],"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   quantity: 2,"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   comment: \"\","
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   diningOption: .eatin)"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let orderItem6 \u003d OrderItem(order: orders[2],"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   menuItem: menuItems[13],"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   quantity: 1,"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   comment: \"Make it spicy level 999. Thanks.\","
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   diningOption: .takeaway)"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let orderItem7 \u003d OrderItem(order: orders[3],"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   menuItem: menuItems[13],"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   quantity: 2,"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   comment: \"\","
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                   diningOption: .eatin)"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderItem4.addons.append(orderItem5)"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderItem4.addons.append(orderItem6)"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderItem6.options.append(OrderItemOption(menuItemOption: menuItemOptions[0],"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                  value: .boolean(true)))"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderItem6.options.append(OrderItemOption(menuItemOption: menuItemOptions[0],"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                  value: .boolean(false))) // Should not be displayed in backlog"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderItem6.options.append(OrderItemOption(menuItemOption: menuItemOptions[1],"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                  value: .quantity(2)))"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderItem6.options.append(OrderItemOption(menuItemOption: menuItemOptions[1],"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                  value: .quantity(0))) // Should not be displayed in backlog"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderItem6.options.append(OrderItemOption(menuItemOption: menuItemOptions[2],"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                                  value: .multipleChoice(1)))"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderItem6.options.append(OrderItemOption(menuItemOption: menuItemOptions[4],"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                  value: .multipleResponse([1, 2, 3])))"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        orderItem6.options.append(OrderItemOption(menuItemOption: menuItemOptions[4],"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "                                                  value: .multipleResponse([]))) // Should not be displayed in backlog"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return [orderItem1, orderItem2, orderItem3, orderItem4, orderItem5, orderItem6, orderItem7]"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "namjjd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 45,
      "namjjd": 72,
      "Derek": 129,
      "Caryn Heng": 90,
      "E-Liang Tan": 87
    }
  },
  {
    "path": "NAME/Utilities/Int+Extensions.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Int+Extensions.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension Int {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init?(nilOnInvalidValue value: Double) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard value \u003e Double(Int.min) \u0026\u0026 value \u003c Double(Int.max) else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.init(value)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func formattedAsPrice() -\u003e String {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let formatter \u003d NumberFormatter()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        formatter.numberStyle \u003d .currency"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let result \u003d formatter.string(from: (Double(self) / 1_000) as NSNumber) else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            fatalError(\"Apple u wot m8\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func formattedAsQueueNumberTitle() -\u003e String {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return OrderConstants.orderNumberPrefix + String(self)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 27,
      "Caryn Heng": 4
    }
  },
  {
    "path": "NAME/Utilities/RealmStorageManager.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  RealmStorageManager.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "private let deleteRealmIfMigrationNeeded \u003d true"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class RealmStorageManager: StorageManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    static let shared \u003d RealmStorageManager()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private let realm: Realm \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        let realmConfig \u003d Realm.Configuration(deleteRealmIfMigrationNeeded: deleteRealmIfMigrationNeeded)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let realm \u003d try Realm(configuration: realmConfig)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            return realm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            fatalError(\"Could not initialize Realm due to error \\(error)\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    private init() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func writeTransaction(_ block: ((StorageManager) throws -\u003e Void)) throws {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        try realm.write { [unowned self] in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            try block(self)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func clearData() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        realm.deleteAll()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add\u003cT: Storable\u003e(_ object: T, update: Bool) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        realm.add(object, update: update)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add\u003cS: Sequence\u003e(objects: S, update: Bool) where S.Element: Storable {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        realm.add(objects, update: update)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func delete\u003cT: Storable\u003e(_ object: T) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        realm.delete(object)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func allEstablishments() -\u003e [Establishment] {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return Array(realm.objects(Establishment.self))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func allOrders() -\u003e [Order] {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return Array(realm.objects(Order.self))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getMenuEditable(id: String) -\u003e MenuEditable? {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let predicate \u003d NSPredicate(format: \"id \u003d %@\", id)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // swiftlint:disable first_where"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Reason for first_where is that Swift is **eager**, hence filter(...).first"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // is more expensive than first(where:)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Note that the first(where:) method on Results comes from conformance to Sequence."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Using it is worse than performing filter(...).first since Realm is **lazy**."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let individualMenuItems \u003d realm.objects(IndividualMenuItem.self).filter(predicate).first as MenuEditable?"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let setMenuItems \u003d realm.objects(SetMenuItem.self).filter(predicate).first as MenuEditable?"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // swiftlint:enable first_where"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return [individualMenuItems, setMenuItems].compactMap { $0 }.first"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getMenuDisplayable(id: String) -\u003e MenuDisplayable? {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return getMenuEditable(id: id)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getOrder(id: String) -\u003e Order? {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let predicate \u003d NSPredicate(format: \"id \u003d %@\", id)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // swiftlint:disable first_where"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return realm.objects(Order.self).filter(predicate).first"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // swiftlint:enable first_where"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getQueueNumber() -\u003e Int {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return (realm.objects(Order.self).sorted(byKeyPath: \"queueNumber\", ascending: true).last?.queueNumber ?? 0) + 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getAccount(username: String) -\u003e Account? {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let predicate \u003d NSPredicate(format: \"username \u003d %@\", username)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // swiftlint:disable first_where"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return realm.objects(Account.self).filter(predicate).first"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // swiftlint:enable first_where"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getEstablishment(id: String) -\u003e Establishment? {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let predicate \u003d NSPredicate(format: \"id \u003d %@\", id)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // swiftlint:disable first_where"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return realm.objects(Establishment.self).filter(predicate).first"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // swiftlint:enable first_where"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getStall(id: String) -\u003e Stall? {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        let predicate \u003d NSPredicate(format: \"id \u003d %@\", id)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // swiftlint:disable first_where"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        return realm.objects(Stall.self).filter(predicate).first"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // swiftlint:enable first_where"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func updateEstablishment(id: String, name: String?, location: String?, details: String?) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let est \u003d getEstablishment(id: id) else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if let name \u003d name {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            est.name \u003d name"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if let location \u003d location {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            est.location \u003d location"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if let details \u003d details {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            est.details \u003d details"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        realm.add(est, update: true)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func updateStall(id: String, name: String?, location: String?, details: String?) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        guard let stall \u003d getStall(id: id) else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            return"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if let name \u003d name {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            stall.name \u003d name"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if let location \u003d location {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            stall.location \u003d location"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        if let details \u003d details {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "            stall.details \u003d details"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        realm.add(stall, update: true)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 21,
      "Caryn Heng": 68,
      "E-Liang Tan": 50
    }
  },
  {
    "path": "NAME/Utilities/ShoppingCart.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  ShoppingCart.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 17/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol ShoppingCart: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addOrderItem(_ orderItem: OrderItem)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func createOrder() throws -\u003e Order"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class ProductionShoppingCart: ShoppingCart {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private var orderItems: [OrderItem] \u003d []"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let storageManager: StorageManager"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(storageManager: StorageManager) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.storageManager \u003d storageManager"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func addOrderItem(_ orderItem: OrderItem) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        orderItems.append(orderItem)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func createOrder() throws -\u003e Order {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let queueNumber \u003d storageManager.getQueueNumber()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // TODO get customer properly"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let customer \u003d Customer()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let order \u003d Order(queueNumber: queueNumber, customer: customer)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        orderItems.forEach { $0.order \u003d order }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try storageManager.writeTransaction { manager in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            manager.add(objects: orderItems, update: false)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            manager.add(customer, update: false)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            manager.add(order, update: false)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return order"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 42
    }
  },
  {
    "path": "NAME/Utilities/StorageManager.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  StorageManager.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import RealmSwift // For Object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "typealias Storable \u003d Object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "protocol StorageManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func writeTransaction(_ block: ((StorageManager) throws -\u003e Void)) throws"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func clearData()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add\u003cT: Storable\u003e(_ object: T, update: Bool)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func add\u003cS: Sequence\u003e(objects: S, update: Bool) where S.Element: Storable"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func delete\u003cT: Storable\u003e(_ object: T)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func allEstablishments() -\u003e [Establishment]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getEstablishment(id: String) -\u003e Establishment?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func updateEstablishment(id: String, name: String?, location: String?, details: String?)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getStall(id: String) -\u003e Stall?"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func updateStall(id: String, name: String?, location: String?, details: String?)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func allOrders() -\u003e [Order]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getOrder(id: String) -\u003e Order?"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getMenuEditable(id: String) -\u003e MenuEditable?"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getMenuDisplayable(id: String) -\u003e MenuDisplayable?"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getQueueNumber() -\u003e Int"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    func getAccount(username: String) -\u003e Account?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 5,
      "Caryn Heng": 12,
      "E-Liang Tan": 22
    }
  },
  {
    "path": "NAME/Utilities/String+Extension.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  String+Extension.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 18/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "extension String {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func priceAsDouble() -\u003e Double? {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let formatter \u003d NumberFormatter()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        formatter.numberStyle \u003d .currency"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return formatter.number(from: self) as? Double"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func asPriceInt() -\u003e Int? {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let priceDouble \u003d Double(self), priceDouble \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return Int(nilOnInvalidValue: priceDouble * 1_000)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 24
    }
  },
  {
    "path": "NAME/Utilities/UIColor+Extensions.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  UIColor+Extensions.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Created by Caryn Heng on 18/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "extension UIColor {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    enum Custom {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // MARK: Purple"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let palePurple \u003d #colorLiteral(red: 0.8078431373, green: 0.8117647059, blue: 0.9294117647, alpha: 1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let lightPurple \u003d #colorLiteral(red: 0.5026787498, green: 0.50296669, blue: 1, alpha: 1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let purple \u003d #colorLiteral(red: 0.431372549, green: 0.4352941176, blue: 0.8666666667, alpha: 1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let deepPurple \u003d #colorLiteral(red: 0.3704003619, green: 0.3706550785, blue: 0.7398769065, alpha: 1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let darkPurple \u003d #colorLiteral(red: 0.2686530235, green: 0.2698314586, blue: 0.5443779012, alpha: 1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // MARK: Gray"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let paleGray \u003d #colorLiteral(red: 0.9490196078, green: 0.9490196078, blue: 0.9490196078, alpha: 1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let lightGray \u003d #colorLiteral(red: 0.831372549, green: 0.831372549, blue: 0.831372549, alpha: 1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // MARK: Green"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let green \u003d #colorLiteral(red: 0.3186549923, green: 0.7347272878, blue: 0.4403526009, alpha: 1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // MARK: Red"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let salmonRed \u003d #colorLiteral(red: 0.8901960784, green: 0.3882352941, blue: 0.4078431373, alpha: 1)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        // MARK: Orange"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        static let orange \u003d #colorLiteral(red: 0.9176475406, green: 0.639752686, blue: 0.2762946486, alpha: 1)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Caryn Heng": 33
    }
  },
  {
    "path": "NAME/Views/PassthroughStackView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  PassthroughStackView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 17/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "/// A stack view which returns an arranged subview or nil as the hit test result."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "///"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "/// See: \u003chttp://www.openradar.me/30592429\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class PassthroughStackView: UIStackView {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func hitTest(_ point: CGPoint, with event: UIEvent?) -\u003e UIView? {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        for subview in arrangedSubviews {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            let pointInSubview \u003d convert(point, to: subview)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            if subview.point(inside: pointInSubview, with: event) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "                return subview"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 24
    }
  },
  {
    "path": "NAME/Views/QuantityView.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  QuantityView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "protocol QuantityViewDelegate: class {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func valueDidChange(newValue: Int)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class QuantityView: UIView {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    weak var delegate: QuantityViewDelegate?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let titleLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILabel(frame: .zero)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.font \u003d .preferredFont(forTextStyle: .body)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.text \u003d QuantityViewConstants.title"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var increaseButton: UIButton \u003d {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIButton(type: .system)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.contentHorizontalAlignment \u003d .center"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitle(QuantityViewConstants.increaseQuantityTitle, for: .normal)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.setTitleColor(.gray, for: .normal)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addTarget(self, action: #selector(increaseButtonDidTap), for: .touchUpInside)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var decreaseButton: UIButton \u003d {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UIButton(type: .system)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.contentHorizontalAlignment \u003d .center"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.setTitle(QuantityViewConstants.decreaseQuantityTitle, for: .normal)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.setTitleColor(.gray, for: .normal)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.addTarget(self, action: #selector(decreaseButtonDidTap), for: .touchUpInside)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private lazy var quantityLabel: UILabel \u003d {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let result \u003d UILabel(frame: .zero)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.textAlignment \u003d .center"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.font \u003d UIFont.boldSystemFont(ofSize: QuantityViewConstants.quantityFontSize)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Caryn Heng"
        },
        "content": "        result.textColor \u003d UIColor.Custom.deepPurple"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        result.text \u003d String(quantity)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var quantity: Int {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            quantity \u003d max(quantity, minimum)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            quantity \u003d min(quantity, maximum)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            quantityLabel.text \u003d String(quantity)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var maximum: Int"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var minimum: Int"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    init(quantity: Int \u003d 0, minimum: Int \u003d .min, maximum: Int \u003d .max) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.minimum \u003d minimum"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.maximum \u003d maximum"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        super.init(frame: .zero)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubview(titleLabel)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubview(increaseButton)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubview(decreaseButton)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        addSubview(quantityLabel)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        configureConstraints()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func configureConstraints() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        titleLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.centerY.equalTo(quantityLabel)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalToSuperview().offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.size.equalTo(titleLabel.intrinsicContentSize)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        increaseButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalToSuperview()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.height.equalToSuperview().dividedBy(3)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.width.equalTo(quantityLabel)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.centerX.equalTo(quantityLabel)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        quantityLabel.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(increaseButton.snp.bottom)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.leading.equalTo(titleLabel.snp.trailing).offset(ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.height.equalToSuperview().dividedBy(3)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.width.equalTo(QuantityViewConstants.quantityWidth)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.trailing.lessThanOrEqualToSuperview().offset(-ConstraintConstants.standardValue)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        decreaseButton.snp.makeConstraints { make in"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.top.equalTo(quantityLabel.snp.bottom)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.bottom.equalToSuperview()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.centerX.equalTo(quantityLabel)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.height.equalToSuperview().dividedBy(3)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            make.width.equalTo(quantityLabel)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func increaseButtonDidTap() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        quantity +\u003d 1"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.valueDidChange(newValue: quantity)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    @objc"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private func decreaseButtonDidTap() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        quantity -\u003d 1"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        delegate?.valueDidChange(newValue: quantity)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 118,
      "Caryn Heng": 4
    }
  },
  {
    "path": "NAMETests/Models/BillItemTests.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  BillItemTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  NAMETests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  Created by Derek Nam on 18/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "@testable import NAME"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "class BillItemTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "    class OrderItemStub: OrderItemProtocol {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var name: String \u003d \"\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var originalPrice: Int \u003d 5_000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var discounts: [Discount] \u003d []"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var price: Int \u003d 5_000"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBillItem_attributesSetCorrectly() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let itemMock \u003d OrderItemStub()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billItem \u003d BillItem(source: itemMock, discounts: [])"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.originalPrice, 5_000)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.discountedPrice, 5_000)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.discounts, [])"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertNil(billItem.containsStackableDiscounts)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Test Bill Item that contains (a) stackable discount(s)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBillItem_StackableDiscounts_discountedPriceNonNegative() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let itemMock \u003d OrderItemStub()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount1 \u003d Discount(name: \"d1\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 priceModification: PriceModification.absolute(amount: 6_000),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 stackable: true,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billItem \u003d BillItem(source: itemMock, discounts: [discount1])"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.originalPrice, 5_000)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.discountedPrice, 0)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.containsStackableDiscounts, Optional(true))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBillItem_StackableDiscounts_discountedPriceComputedCorrectly() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let itemMock \u003d OrderItemStub()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount1 \u003d Discount(name: \"d1\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 priceModification: PriceModification.absolute(amount: 1_000),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 stackable: true,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount2 \u003d Discount(name: \"d2\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 priceModification: PriceModification.multiplier(factor: 0.5),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 stackable: true,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billItem \u003d BillItem(source: itemMock, discounts: [discount1, discount2])"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.originalPrice, 5_000)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.discountedPrice, 1_500)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.containsStackableDiscounts, Optional(true))"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "    // MARK: - Test Bill Item that contains a non stackable discount"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBillItem_nonStackableDiscounts_discountedPriceNonNegative() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let itemMock \u003d OrderItemStub()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount1 \u003d Discount(name: \"d1\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 priceModification: PriceModification.absolute(amount: 6_000),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 stackable: false,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billItem \u003d BillItem(source: itemMock, discounts: [discount1])"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.originalPrice, 5_000)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.discountedPrice, 0)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.containsStackableDiscounts, Optional(false))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBillItem_nonStackableDiscounts_discountedPriceComputedCorrectly() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let itemMock \u003d OrderItemStub()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount1 \u003d Discount(name: \"d1\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 priceModification: PriceModification.multiplier(factor: 0.4),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 stackable: false,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billItem \u003d BillItem(source: itemMock, discounts: [discount1])"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.originalPrice, 5_000)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.discountedPrice, 3_000)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billItem.containsStackableDiscounts, Optional(false))"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 100
    }
  },
  {
    "path": "NAMETests/Models/BillTests.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  BillTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  NAMETests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  Created by Derek Nam on 18/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "@testable import NAME"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "class BillTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "    struct BillItemStub: BillItemProtocol {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var source: OrderItemProtocol?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var originalPrice: Int"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var discountedPrice: Int"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var containsStackableDiscounts: Bool?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "        init(originalPrice: Int, discountedPrice: Int, containsStackableDiscounts: Bool?) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.originalPrice \u003d originalPrice"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.discountedPrice \u003d discountedPrice"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.containsStackableDiscounts \u003d containsStackableDiscounts"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_subtotal_computedCorrectly() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 200,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 300,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: true)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 500,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [],"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.subtotal, 1_000)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_NoEstablishmentDiscountsSurcharges() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 200,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 300,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: true)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 500,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [],"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.subtotal,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       bill.grandTotal,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       \"Should not differ if no establishment modifiers are present\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_WithEstablishmentStackableDiscounts() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 200,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 300,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: true)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 500,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount1 \u003d Discount(name: \"Discount\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 priceModification: .absolute(amount: 500),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 stackable: true,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 timeCondition: .dayRange(DateInterval()))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount2 \u003d Discount(name: \"Discount\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 priceModification: .multiplier(factor: 0.1),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 stackable: true,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 timeCondition: .dayRange(DateInterval()))"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [discount1, discount2],"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertNotEqual(bill.subtotal,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          bill.grandTotal,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          \"Stackable discount should only be applied on stackable or undiscounted items\")"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.grandTotal, 400)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_WithEstablishmentStackableDiscounts_BoundedByStackableOrUndiscounted() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 200,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 300,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: true)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 500,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount1 \u003d Discount(name: \"Discount\","
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 priceModification: .absolute(amount: 1_234),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 stackable: true,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 timeCondition: .dayRange(DateInterval()))"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [discount1],"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertNotEqual(bill.subtotal,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          bill.grandTotal,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          \"Stackable discount should only be applied on stackable or undiscounted items\")"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.grandTotal, 200)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_WithEstablishmentNonStackableDiscount_AbsoluteOnUndiscountedItems() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 5_000,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 8_000,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 8_000,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 500,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount \u003d Discount(name: \"Discount\","
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 priceModification: .absolute(amount: 1_234),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 stackable: false,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 timeCondition: .dayRange(DateInterval()))"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [discount],"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertNotEqual(bill.subtotal,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          bill.grandTotal,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          \"Unstackable discount should be applied on all undiscounted items\")"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.grandTotal, 12_266)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_WithEstablishmentNonStackableDiscount_AbsoluteOnDiscountedItems() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 4_000,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: true)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 8_000,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 700,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: true)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 300,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount \u003d Discount(name: \"Discount\","
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                priceModification: .absolute(amount: 1_234),"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                stackable: false,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                timeCondition: .dayRange(DateInterval()))"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [discount],"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.subtotal,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       bill.grandTotal,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       \"Unstackable discount should not apply on discounted items\")"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.grandTotal, 5_000)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_WithEstablishmentNonStackableDiscount_AbsoluteOnNonstackableItems() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 4_000,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 8_000,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 700,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 300,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount \u003d Discount(name: \"Discount\","
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                priceModification: .absolute(amount: 1_234),"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                stackable: false,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                timeCondition: .dayRange(DateInterval()))"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [discount],"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.subtotal,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       bill.grandTotal,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       \"Unstackable discount should not apply on non stackable items\")"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.grandTotal, 5_000)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 212
    }
  },
  {
    "path": "NAMETests/Models/BillUnstackableEstablishmentDiscountTests.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  BillUnstackableEstablishmentDiscountTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  NAMETests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  Created by Derek Nam on 18/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "@testable import NAME"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "class BillUnstackableEstablishmentDiscountTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "    struct BillItemStub: BillItemProtocol {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var source: OrderItemProtocol?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var originalPrice: Int"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var discountedPrice: Int"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var containsStackableDiscounts: Bool?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": "        init(originalPrice: Int, discountedPrice: Int, containsStackableDiscounts: Bool?) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.originalPrice \u003d originalPrice"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.discountedPrice \u003d discountedPrice"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.containsStackableDiscounts \u003d containsStackableDiscounts"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_WithEstablishmentNonStackableDiscount_MultiplierOnUndiscountedItems() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 5_000,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 8_000,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 8_000,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 500,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount \u003d Discount(name: \"Discount\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                priceModification: .multiplier(factor: 0.8),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                stackable: false,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                timeCondition: .dayRange(DateInterval()))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [discount],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertNotEqual(bill.subtotal,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          bill.grandTotal,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          \"Unstackable discount should be applied on all undiscounted items\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.grandTotal, 2_700)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_WithEstablishmentNonStackableDiscount_MultiplierOnDiscountedItems() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 4_000,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: true)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 8_000,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 700,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: true)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 300,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount \u003d Discount(name: \"Discount\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                priceModification: .multiplier(factor: 0.8),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                stackable: false,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                timeCondition: .dayRange(DateInterval()))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [discount],"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.subtotal,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       bill.grandTotal,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       \"Unstackable discount should not apply on discounted items\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.grandTotal, 5_000)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_WithEstablishmentNonStackableDiscount_MultiplierOnNonstackableItems() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 4_000,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 8_000,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 700,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 300,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let discount \u003d Discount(name: \"Discount\","
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                priceModification: .multiplier(factor: 0.8),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                stackable: false,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                timeCondition: .dayRange(DateInterval()))"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [discount],"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [])"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.subtotal,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       bill.grandTotal,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Derek"
        },
        "content": "                       \"Unstackable discount should not apply on unstackable items\")"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.grandTotal, 5_000)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testBill_grandTotal_WithEstablishmentSurcharges() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item1 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 200,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: false)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item2 \u003d BillItemStub(originalPrice: 5_000,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 300,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: true)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let item3 \u003d BillItemStub(originalPrice: 500,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 discountedPrice: 500,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                 containsStackableDiscounts: nil)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let surcharge1 \u003d Surcharge(name: \"GST\", priceModification: .multiplier(factor: 0.07))"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let surcharge2 \u003d Surcharge(name: \"Service charge\", priceModification: .multiplier(factor: 0.10))"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let bill \u003d Bill(items: [item1, item2, item3],"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentDiscounts: [],"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Derek"
        },
        "content": "                        establishmentSurcharges: [surcharge1, surcharge2])"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertNotEqual(bill.subtotal,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          bill.grandTotal,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Derek"
        },
        "content": "                          \"Should differ since surcharges are present\")"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(bill.grandTotal, 1_170)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 135
    }
  },
  {
    "path": "NAMETests/NAMETests.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAMETests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAMETests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 E-Liang Tan. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "@testable import NAME"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class NAMETests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func testExample() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // This is an example of a functional test case."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func testPerformanceExample() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // This is an example of a performance test case."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        self.measure {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "            // Put the code you want to measure the time of here."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E-Liang Tan": 34
    }
  },
  {
    "path": "NAMETests/Scenes/Common/MenuInfo/Interactor/MenuInfoInteractorTest.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  MenuInfoInteractorTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAMETests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 21/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import RealmSwift"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "@testable import NAME"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "private let menuId \u003d \"5\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "private final class StorageManagerStub: TestStorageManager {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let menuItem: MenuEditable \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let option \u003d MenuItemOption(name: \"Vegetable\", options: .boolean(price: 500), defaultValue: .boolean(false))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return IndividualMenuItem(name: \"Never\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                  details: \"Gonna\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                  price: 5_000,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                  quantity: 1,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                  addOns: [],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                  options: [option])"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func getMenuEditable(id: String) -\u003e MenuEditable? {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(id, menuId)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return menuItem"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func getMenuDisplayable(id: String) -\u003e MenuDisplayable? {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return getMenuEditable(id: id)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "private final class Output: MenuInfoInteractorOutput {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var comment: String?"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    var menuDisplayable: MenuDisplayable?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func presentMenuDisplayable(_ menuDisplayable: MenuDisplayable) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.menuDisplayable \u003d menuDisplayable"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func presentComment(_ comment: String) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        self.comment \u003d comment"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "private final class Worker: MenuInfoWorker {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "private final class TestDependencyInjector: DependencyInjector {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    let storageManager: StorageManager \u003d StorageManagerStub()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    lazy var authManager: AuthManager \u003d ProductionAuthManager(storageManager: storageManager)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    lazy var shoppingCart: ShoppingCart \u003d ProductionShoppingCart(storageManager: storageManager)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class MenuInfoInteractorTest: XCTestCase {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    private let injector \u003d TestDependencyInjector()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func testComment() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let output \u003d Output()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let interactor \u003d MenuInfoInteractor(output: output,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            menuId: menuId,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            injector: injector,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            toParentMediator: nil,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            worker: Worker())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let comment \u003d \"Never gonna give you up\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        interactor.changeComment(comment)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(output.comment, comment)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func testChangeName() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let output \u003d Output()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let interactor \u003d MenuInfoInteractor(output: output,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            menuId: menuId,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            injector: injector,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            toParentMediator: nil,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            worker: Worker())"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let name \u003d \"Rick Astley\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        interactor.changeName(name)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(output.menuDisplayable?.name, name)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func testChangeDetails() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let output \u003d Output()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let interactor \u003d MenuInfoInteractor(output: output,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            menuId: menuId,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            injector: injector,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            toParentMediator: nil,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            worker: Worker())"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let details \u003d \"You have been rickrolled\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        interactor.changeDetails(details)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(output.menuDisplayable?.details, details)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func testChangePrice() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let output \u003d Output()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let interactor \u003d MenuInfoInteractor(output: output,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            menuId: menuId,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            injector: injector,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            toParentMediator: nil,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            worker: Worker())"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let priceString \u003d \"0.42\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        guard let price \u003d priceString.asPriceInt() else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            XCTFail(\"Invalid priceString used\")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "            return"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        interactor.changePrice(priceString)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(output.menuDisplayable?.price, price)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func testLoadMenuDisplayable() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let menuDisplayable \u003d injector.storageManager.getMenuDisplayable(id: menuId)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let output \u003d Output()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        let interactor \u003d MenuInfoInteractor(output: output,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            menuId: menuId,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            injector: injector,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            toParentMediator: nil,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "                                            worker: Worker())"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        interactor.loadMenuDisplayable()"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(menuDisplayable?.id, output.menuDisplayable?.id)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(menuDisplayable?.name, output.menuDisplayable?.name)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(menuDisplayable?.details, output.menuDisplayable?.details)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(menuDisplayable?.imageURL, output.menuDisplayable?.imageURL)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(menuDisplayable?.isHidden, output.menuDisplayable?.isHidden)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        XCTAssertEqual(menuDisplayable?.quantity, output.menuDisplayable?.quantity)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 140
    }
  },
  {
    "path": "NAMETests/Scenes/OrderConfirmation/OrderToBillProcessorTests.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  OrderToBillProcessorTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  NAMETests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  Created by Derek Nam on 18/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Derek"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Derek"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Derek"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Derek"
        },
        "content": "@testable import NAME"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Derek"
        },
        "content": "class OrderToBillProcessorTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Derek"
        },
        "content": "    class OrderStub: OrderProtocol {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var orderItems: [OrderItemProtocol] \u003d []"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var establishmentDiscounts: [Discount]?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var establishmentSurcharges: [Surcharge]?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Derek"
        },
        "content": "    class OrderItemStub: OrderItemProtocol {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var name: String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var originalPrice: Int"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Derek"
        },
        "content": "        var discounts: [Discount]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Derek"
        },
        "content": "        init(name: String \u003d \"\", originalPrice: Int \u003d 5_000, discounts: [Discount] \u003d []) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.name \u003d name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.originalPrice \u003d originalPrice"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Derek"
        },
        "content": "            self.discounts \u003d discounts"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Derek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let discount1 \u003d Discount(name: \"d1\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             priceModification: PriceModification.absolute(amount: 2_000),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             stackable: true,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let discount2 \u003d Discount(name: \"d2\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             priceModification: PriceModification.multiplier(factor: 0.2),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             stackable: true,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let discount3 \u003d Discount(name: \"d3\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             priceModification: PriceModification.multiplier(factor: 0.5),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             stackable: false,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let discount4 \u003d Discount(name: \"d4\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             priceModification: PriceModification.absolute(amount: 1_000),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             stackable: false,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let discount5 \u003d Discount(name: \"d5\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             priceModification: PriceModification.absolute(amount: 7_000),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             stackable: false,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Derek"
        },
        "content": "                             timeCondition: TimeCondition.dayRange(DateInterval()))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let surcharge1 \u003d Surcharge(name: \"s1\", priceModification: .multiplier(factor: 0.1))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Derek"
        },
        "content": "    let surcharge2 \u003d Surcharge(name: \"s2\", priceModification: .multiplier(factor: 0.07))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testProcessor_ReturnsNilWhenOrderItemsEmpty() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order \u003d OrderStub()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billResult \u003d OrderToBillProcessor.process(order: order)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertNil(billResult)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testProcessor_ReturnsNoEstablishmentDiscountsCorrectly() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order \u003d OrderStub()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item1\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 4_000,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount3]))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item2\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 4_800,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount3]))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billResult \u003d OrderToBillProcessor.process(order: order)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items.count, 2)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].discountedPrice, 2_000)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].discountedPrice, 2_400)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testProcessor_WithEstablishmentDiscounts_NoSurcharges() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order \u003d OrderStub()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.establishmentDiscounts \u003d [discount1, discount2]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item1\","
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 3_800,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount3]))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item2\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 4_800,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount3]))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billResult \u003d OrderToBillProcessor.process(order: order)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items.count, 2)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].containsStackableDiscounts, true)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].discountedPrice, 1_800)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].discountedPrice, 2_400)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.grandTotal, 2_400)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testProcessor_WithEstablishmentDiscounts_BestNonStackable() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order \u003d OrderStub()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.establishmentDiscounts \u003d [discount1, discount2, discount3, discount4, discount5]"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item1\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 3_800,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount3]))"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item2\","
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 4_800,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount3]))"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billResult \u003d OrderToBillProcessor.process(order: order)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items.count, 2)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].containsStackableDiscounts, nil)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].containsStackableDiscounts, nil)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].discountedPrice, 3_800)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].discountedPrice, 4_800)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.grandTotal, 1_600)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testProcessor_WithEstablishmentDiscounts_BestStackable() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order \u003d OrderStub()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.establishmentDiscounts \u003d [discount1, discount2, discount3, discount4]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item1\","
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 3_800,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount2, discount3]))"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item2\","
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 4_800,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount3]))"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billResult \u003d OrderToBillProcessor.process(order: order)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items.count, 2)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].containsStackableDiscounts, true)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].containsStackableDiscounts, false)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].discountedPrice, 1_050)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].discountedPrice, 2_400)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.establishmentDiscounts.count, 2)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.establishmentDiscounts.first?.stackable, true)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.grandTotal, 2_400)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testProcessor_WithEstablishmentDiscounts_BestNoEstDiscounts() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order \u003d OrderStub()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.establishmentDiscounts \u003d [discount1, discount2, discount3]"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item1\","
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 3_800,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount5]))"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item2\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 4_800,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount5]))"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billResult \u003d OrderToBillProcessor.process(order: order)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items.count, 2)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].containsStackableDiscounts, false)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].containsStackableDiscounts, false)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].discountedPrice, 0)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].discountedPrice, 0)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.establishmentDiscounts.count, 0)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.grandTotal, 0)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Derek"
        },
        "content": "    func testProcessor_WithEstablishmentDiscountsSurcharges() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let order \u003d OrderStub()"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.establishmentDiscounts \u003d [discount1, discount2, discount3, discount4]"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.establishmentSurcharges \u003d [surcharge1, surcharge2]"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item1\","
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 3_800,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount2, discount3]))"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item2\","
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 4_800,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount1, discount3]))"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item3\","
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 5_200,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount3, discount4]))"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Derek"
        },
        "content": "        order.orderItems.append(OrderItemStub(name: \"item4\","
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              originalPrice: 3_500,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Derek"
        },
        "content": "                                              discounts: [discount4, discount5]))"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Derek"
        },
        "content": "        let billResult \u003d OrderToBillProcessor.process(order: order)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items.count, 4)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].containsStackableDiscounts, true)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].containsStackableDiscounts, false)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[2].containsStackableDiscounts, false)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[3].containsStackableDiscounts, false)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[0].discountedPrice, 1_050)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[1].discountedPrice, 2_400)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[2].discountedPrice, 2_600)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.items[3].discountedPrice, 0)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.establishmentDiscounts.count, 2)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.establishmentDiscounts.first?.stackable, true)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Derek"
        },
        "content": "        XCTAssertEqual(billResult?.grandTotal, 5_850)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Derek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Derek"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Derek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Derek": 204
    }
  },
  {
    "path": "NAMETests/Utilities/StorageManager+Extensions.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  StorageManager+Extensions.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  NAMETests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Created by Julius on 21/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//  Copyright Â© 2019 NAME. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "@testable import NAME"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "// Make all functions optional to facilitate testing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "class TestStorageManager: StorageManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func updateEstablishment(id: String, name: String?, location: String?, details: String?) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func updateStall(id: String, name: String?, location: String?, details: String?) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getEstablishment(id: String) -\u003e Establishment? {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getStall(id: String) -\u003e Stall? {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func writeTransaction(_ block: ((StorageManager) throws -\u003e Void)) throws {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        try block(self)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func clearData() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func add\u003cT\u003e(_ object: T, update: Bool) where T: Storable {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func add\u003cS\u003e(objects: S, update: Bool) where S: Sequence, S.Element: Storable {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func delete\u003cT\u003e(_ object: T) where T: Storable {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func allEstablishments() -\u003e [Establishment] {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return []"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func allOrders() -\u003e [Order] {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return []"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getOrder(id: String) -\u003e Order? {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getMenuEditable(id: String) -\u003e MenuEditable? {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getMenuDisplayable(id: String) -\u003e MenuDisplayable? {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getQueueNumber() -\u003e Int {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    func getAccount(username: String) -\u003e Account? {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 74
    }
  },
  {
    "path": "NAMEUITests/NAMEUITests.swift",
    "fileType": "swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAMEUITests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  NAMEUITests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Created by E-Liang Tan on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//  Copyright Â© 2019 E-Liang Tan. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "class NAMEUITests: XCTestCase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // In UI tests it is usually best to stop immediately when a failure occurs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        continueAfterFailure \u003d false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // UI tests must launch the application that they test. Doing this in setup will make sure it happens for"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // each test method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        XCUIApplication().launch()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // In UI tests itâs important to set the initial state - such as interface orientation - required for your"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Julius Putra Tanu Setiaji"
        },
        "content": "        // tests before they run. The setUp method is a good place to do this."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    func testExample() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Use recording to get started writing UI tests."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E-Liang Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Julius Putra Tanu Setiaji": 4,
      "E-Liang Tan": 32
    }
  }
]
