[
  {
    "path": "GenericGameInterface.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericGameInterface.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericGameInterface {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 10
    }
  },
  {
    "path": "SailingThroughHistory/AppDelegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  AppDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseCore"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@UIApplicationMain"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class AppDelegate: UIResponder, UIApplicationDelegate {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var window: UIWindow?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func application(_ application: UIApplication,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -\u003e Bool {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            FirebaseApp.configure()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationWillResignActive(_ application: UIApplication) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationDidEnterBackground(_ application: UIApplication) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationWillEnterForeground(_ application: UIApplication) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationDidBecomeActive(_ application: UIApplication) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func applicationWillTerminate(_ application: UIApplication) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 37
    }
  },
  {
    "path": "SailingThroughHistory/Common/Array+Rotate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Array.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 21/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension Array {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func rotatedLeft(by distance: UInt) -\u003e Array {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return self.indices"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .map { self[($0 + Int(distance)) % self.count] }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 14
    }
  },
  {
    "path": "SailingThroughHistory/Common/CGPoint+Arithmetic.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  CGPoint+Arithmetic.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension CGPoint {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func + (point1: CGPoint, point2: CGPoint) -\u003e CGPoint {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return CGPoint(x: point1.x + point2.x, y: point1.y + point2.y)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func * (point: CGPoint, multiplier: CGFloat) -\u003e CGPoint {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return CGPoint(x: point.x * multiplier, y: point.y * multiplier)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 19
    }
  },
  {
    "path": "SailingThroughHistory/Common/CGRect+Rect.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  CGRect+Rect.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension CGRect {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(fromRect rect: Rect) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.init(x: rect.originX, y: rect.originY, width: rect.width, height: rect.height)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func toRect() -\u003e Rect {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let rect \u003d Rect(originX: Double(origin.x), originY: Double(origin.y),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                              height: Double(height), width: Double(width))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return rect"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 22
    }
  },
  {
    "path": "SailingThroughHistory/Common/CGRect+Translate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  CGRect+Translate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 16/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension CGRect {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Calculates the CGRect for a given bounds that\u0027s equivalent to the input CGRect contained in another bound."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - otherBounds: The bounds that contain the other frame."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - otherFrame: The frame to match."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - bounds: The current bounds."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func translatingFrom(otherBounds: Rect, otherFrame: Rect, to bounds: CGRect) -\u003e CGRect {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let otherBoundsCg \u003d CGRect(fromRect: otherBounds)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let otherFrameCg \u003d CGRect(fromRect: otherFrame)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let ratio \u003d min(bounds.width / otherBoundsCg.width, bounds.height / otherBoundsCg.height)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Transforms the size of the rect to match."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var newRect \u003d  otherFrameCg.applying("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(scaleX: 1 / otherFrameCg.width, y: 1 / otherFrameCg.height))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        newRect \u003d newRect.applying("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(scaleX: ratio * otherFrameCg.width, y: ratio * otherFrameCg.height))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Changes the position of the rect to match."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        newRect \u003d newRect.applying("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(translationX: -newRect.origin.x, y: -newRect.origin.y))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        newRect \u003d newRect.applying("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(translationX: ratio * otherFrameCg.origin.x, y: ratio * otherFrameCg.origin.y))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return newRect"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 37
    }
  },
  {
    "path": "SailingThroughHistory/Common/ComparablePair.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ComparablePair.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "/// Compare by weight"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "struct ComparablePair\u003cT\u003e: Comparable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    public let object: T"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    public let weight: Double"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(object: T, weight: Double) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.object \u003d object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.weight \u003d weight"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    static func \u003c (lhs: ComparablePair, rhs: ComparablePair) -\u003e Bool {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return lhs.weight \u003c rhs.weight"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    static func \u003d\u003d (lhs: ComparablePair, rhs: ComparablePair) -\u003e Bool {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return lhs.weight \u003d\u003d rhs.weight"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 28
    }
  },
  {
    "path": "SailingThroughHistory/Common/Double+Lerp.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Double+Lerp.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Double {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func clamp(_ value: Double, _ lower: Double, _ upper: Double) -\u003e Double {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return max(min(value, upper), lower)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func lerp(_ alpha: Double, _ lower: Double, _ upper: Double) -\u003e Double {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return alpha * lower + (1.0 - alpha) * upper"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/Common/Float+Epsilon.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Float+Epsilon.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Float {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // largest value engine is designed to handle"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let infinity: Float \u003d 1e9"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let epsilon: Float \u003d 1e-6"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let sqrt3: Float \u003d sqrt(3)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // randoms between 0 and 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func random() -\u003e Float {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Float(arc4random()) / Float(UINT32_MAX)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 21
    }
  },
  {
    "path": "SailingThroughHistory/Common/GameObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  GameObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 16/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class GameObject: Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let frame: GameVariable\u003cRect\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame \u003d GameVariable(value: try container.decode(Rect.self, forKey: .frame))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(frame.value, forKey: .frame)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame \u003d GameVariable(value: Rect())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(frame: Rect) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame \u003d GameVariable(value: frame)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscibeToFrame(with callback: @escaping (Rect) -\u003e Void) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        frame.subscribe(with: callback)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(frame: Rect) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame.value \u003d frame"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addToMap(map: Map) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addGameObject(gameObject: self)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case frame"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension GameObject: Hashable {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        hasher.combine(ObjectIdentifier(self))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func \u003d\u003d (lhs: GameObject, rhs: GameObject) -\u003e Bool {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ObjectIdentifier(lhs) \u003d\u003d ObjectIdentifier(rhs)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 9,
      "Yang Shuqi": 1,
      "Jason Chong": 42,
      "yuhongherald": 3
    }
  },
  {
    "path": "SailingThroughHistory/Common/Int+Lerp.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Int+Lerp.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Int {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func clamp(_ value: Int, _ lower: Int, _ upper: Int) -\u003e Int {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if lower \u003e value {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return lower"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } else if upper \u003c value {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return upper"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return value"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 18
    }
  },
  {
    "path": "SailingThroughHistory/Common/PriorityQueue.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "// Copyright (c) 2018 NUS CS3217. All rights reserved."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": " The `PriorityQueue` accepts and maintains the elements in an order specified by"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": " their priority. For example, a Minimum Priority Queue of integers will serve"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": " (poll) the smallest integer first."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": " Elements with the same priority are allowed, and such elements may be served in"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": " any order arbitrarily."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": " `PriorityQueue` is a generic type with a type parameter `Type` that has to be"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": " `Comparable` so that `Type` can be compared."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": " - Authors: CS3217"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": " - Date: 2018"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "struct PriorityQueue\u003cType: Comparable\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Creates either a Min or Max `PriorityQueue`. Defaults to `min \u003d true`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// - Parameter min: Whether to return smallest elements first."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Uses a binary heap implementation, root at index 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Given element at index i, its left child is 2i + 1 and right 2i + 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let isMin: Bool"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var backEndArray \u003d [Type]()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(min: Bool \u003d true) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        isMin \u003d min"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Adds the element."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    mutating func add(_ item: Type) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        backEndArray.append(item)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        bubbleUp(index: count - 1)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Returns the currently highest priority element."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// - Returns: the element if not nil"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    func peek() -\u003e Type? {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        return backEndArray.first"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Removes and returns the highest priority element."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// - Returns: the element if not nil"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    mutating func poll() -\u003e Type? {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let highestPriorityElement \u003d peek() else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let elementToSwap \u003d backEndArray.popLast() else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        if count \u003d\u003d 0 {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "            return highestPriorityElement"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        backEndArray[0] \u003d elementToSwap"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        bubbleDown(index: 0)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        return highestPriorityElement"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// The number of elements in the `PriorityQueue`."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    var count: Int {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        return backEndArray.count"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Whether the `PriorityQueue` is empty."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isEmpty: Bool {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        return backEndArray.isEmpty"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Moves the element down the heap until child elements"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// are not higher priority than the element"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "    private mutating func bubbleDown(index: Int) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        //no children"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        if 2 * index + 1 \u003e\u003d count {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        let childIndex: Int"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        if 2 * index + 2 \u003c count \u0026\u0026 isHigherPriority(from: backEndArray[2 * index + 2],"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "                                                            to: backEndArray[2 * index + 1]) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "            childIndex \u003d 2 * index + 2"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "            childIndex \u003d 2 * index + 1"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        if isHigherPriority(from: backEndArray[childIndex], to: backEndArray[index]) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "            backEndArray.swapAt(childIndex, index)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "            bubbleDown(index: childIndex)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Moves the element up the heap until parent element"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// is not lower priority than the element"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "    private mutating func bubbleUp(index: Int) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        // No more parent, element is at top of heap"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        if index \u003c\u003d 0 {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        let parentIndex \u003d (index - 1) / 2"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        if isLowerPriority(from: backEndArray[parentIndex], to: backEndArray[index]) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "            backEndArray.swapAt(parentIndex, index)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "            bubbleUp(index: parentIndex)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Returns if original has lower priority than comparedTo."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func isLowerPriority(from: Type, to: Type) -\u003e Bool {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        return isMin ? from \u003e to : from \u003c to"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Returns if original has higher priority than comparedTo."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func isHigherPriority(from: Type, to: Type) -\u003e Bool {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "        return isMin ? from \u003c to : from \u003e to"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 116
    }
  },
  {
    "path": "SailingThroughHistory/Common/String+Crypto.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  StringHashDigest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 16/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "import CommonCrypto"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "enum HashOutput {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case hex"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    case base64"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "enum HashType {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    case md5"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    case sha1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    case sha224"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    case sha256"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    case sha384"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    case sha512"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    var length: Int32 {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .md5:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "            return CC_MD5_DIGEST_LENGTH"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .sha1:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "            return CC_SHA1_DIGEST_LENGTH"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .sha224:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "            return CC_SHA224_DIGEST_LENGTH"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .sha256:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "            return CC_SHA256_DIGEST_LENGTH"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .sha384:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "            return CC_SHA384_DIGEST_LENGTH"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .sha512:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "            return CC_SHA512_DIGEST_LENGTH"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "extension String {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    func hashed(_ type: HashType, output: HashOutput \u003d .hex) -\u003e String? {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let message \u003d data(using: .utf8) else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        return message.hashed(type, output: output)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Data {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    func hashed(_ type: HashType, output: HashOutput \u003d .hex) -\u003e String? {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        var digest \u003d Data(count: Int(type.length))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        _ \u003d digest.withUnsafeMutableBytes { (digestBytes: UnsafeMutablePointer\u003cUInt8\u003e) in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "            self.withUnsafeBytes { (messageBytes: UnsafePointer\u003cUInt8\u003e) in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "                let length \u003d CC_LONG(self.count)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "                switch type {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "                case .md5:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "                    CC_MD5(messageBytes, length, digestBytes)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "                case .sha1:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "                    CC_SHA1(messageBytes, length, digestBytes)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "                case .sha224:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "                    CC_SHA224(messageBytes, length, digestBytes)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "                case .sha256:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "                    CC_SHA256(messageBytes, length, digestBytes)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "                case .sha384:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "                    CC_SHA384(messageBytes, length, digestBytes)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "                case .sha512:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "                    CC_SHA512(messageBytes, length, digestBytes)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch output {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .hex:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "            return digest.map { String(format: \"%02hhx\", $0) }.joined()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .base64:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "            return digest.base64EncodedString()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 82
    }
  },
  {
    "path": "SailingThroughHistory/Common/Vector2F.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Vector2F.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct Vector2F {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let zero \u003d Vector2F(xCoord: 0, yCoord: 0)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let one \u003d Vector2F(xCoord: 1, yCoord: 1)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let xAxis \u003d Vector2F(xCoord: 1, yCoord: 0)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let yAxis \u003d Vector2F(xCoord: 0, yCoord: 1)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // randoms a direction vector"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func random() -\u003e Vector2F {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var vector \u003d Vector2F(xCoord: Float.random(), yCoord: Float.random())"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return vector.normalize()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func - (lhs: Vector2F, rhs: Vector2F) -\u003e Vector2F {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Vector2F(xCoord: lhs.xCoord - rhs.xCoord, yCoord: lhs.yCoord - rhs.yCoord)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func + (lhs: Vector2F, rhs: Vector2F) -\u003e Vector2F {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Vector2F(xCoord: lhs.xCoord + rhs.xCoord, yCoord: lhs.yCoord + rhs.yCoord)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func * (lhs: Vector2F, rhs: Float) -\u003e Vector2F {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Vector2F(xCoord: lhs.xCoord * rhs, yCoord: lhs.yCoord * rhs)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func / (lhs: Vector2F, rhs: Float) -\u003e Vector2F {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Vector2F(xCoord: lhs.xCoord / rhs, yCoord: lhs.yCoord / rhs)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var xCoord: Float"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var yCoord: Float"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var magnitude: Float {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return (xCoord * xCoord + yCoord * yCoord).squareRoot()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    @discardableResult"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    mutating func normalize() -\u003e Vector2F {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let magnitude \u003d self.magnitude"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if magnitude !\u003d 0 {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            xCoord /\u003d magnitude"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            yCoord /\u003d magnitude"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return self"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    mutating func add(other: Vector2F) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        xCoord +\u003d other.xCoord"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        yCoord +\u003d other.yCoord"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func dot(other: Vector2F) -\u003e Float {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return xCoord * other.xCoord + yCoord * other.yCoord"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func cross(other: Vector2F) -\u003e Float {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return xCoord * other.yCoord - yCoord * other.xCoord"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 66
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/EventParameter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  EventParameters.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Event parameters for different events."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Not implemented due to time constraints."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "struct EventParameter: Codable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension EventParameter: Equatable {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func \u003d\u003d (lhs: EventParameter, rhs: EventParameter) -\u003e Bool {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 23
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/GameParameter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GameParameter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Class for setting of initial state of the game."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class GameParameter: GenericLevel, Codable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    let maxTaxAmount \u003d 2000"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    let defaultTaxAmount \u003d 1000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var upgrades: [Upgrade] \u003d [BiggerShipUpgrade(), FasterShipUpgrade(), BiggerSailsUpgrade(), MercernaryUpgrade()]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var playerParameters \u003d [TeamParameter]()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParameters \u003d [ItemParameter]()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var teams: [Team]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var numOfTurn \u003d GameConstants.numOfTurn"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var timeLimit \u003d Int(GameConstants.playerTurnDuration)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var map: Map"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(map: Map, teams: [String]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.teams \u003d teams.map { Team(name: $0) }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.playerParameters \u003d teams.map { TeamParameter(name: \"\\($0) players\", teamName: $0, node: nil) }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemParameters \u003d ItemParameter.allCases"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameters \u003d try values.decode([TeamParameter].self, forKey: .playerParameters)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemParameters \u003d try values.decode([ItemParameter].self, forKey: .itemParameters)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teams \u003d try values.decode([Team].self, forKey: .teams)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        numOfTurn \u003d try values.decode(Int.self, forKey: .numOfTurn)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        timeLimit \u003d try values.decode(Int.self, forKey: .timeLimit)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map \u003d try values.decode(Map.self, forKey: .map)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgradeTypes \u003d try values.decode([UpgradeType].self, forKey: .upgrades)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        upgrades \u003d upgradeTypes.map { $0.toUpgrade() }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in map.getNodes() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let index \u003d teams.map({ $0.startId }).firstIndex(of: node.identifier) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                teams[index].startingNode \u003d node"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let port \u003d node as? Port else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            port.assignOwner(teams.first(where: { team in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                team.name \u003d\u003d port.ownerName"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(playerParameters, forKey: .playerParameters)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(itemParameters, forKey: .itemParameters)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(teams, forKey: .teams)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(numOfTurn, forKey: .numOfTurn)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(timeLimit, forKey: .timeLimit)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(map, forKey: .map)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgradeTypes \u003d upgrades.map { $0.type }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(upgradeTypes, forKey: .upgrades)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case playerParameters"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case itemParameters"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case teams"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case numOfTurn"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case timeLimit"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case map"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case upgrades"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 16,
      "Yang Shuqi": 56,
      "Jason Chong": 6
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/Item.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Item.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Modal for item to store item parameter, total weight and quantity."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Item: GenericItem, Codable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return itemParameter.rawValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    let itemParameter: ItemParameter"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weight: Int {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        let unitWeight \u003d itemParameter.unitWeight"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        return quantity * unitWeight"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var quantity: Int {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "            return realQuantity"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        set(value) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard value \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "                print(\"Tried to set item quantity below 0.\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "                realQuantity \u003d 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "            realQuantity \u003d value"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "            decimalQuantity \u003d Double(realQuantity)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var realQuantity \u003d 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var decimalQuantity \u003d 0.0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(itemParameter: ItemParameter, quantity: Int) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemParameter \u003d itemParameter"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        try itemParameter \u003d values.decode(ItemParameter.self, forKey: .itemParameter)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        try quantity \u003d values.decode(Int.self, forKey: .quantity)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemParameter, forKey: .itemParameter)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(quantity, forKey: .quantity)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    func combine(with item: inout GenericItem) -\u003e Bool {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard itemParameter \u003d\u003d item.itemParameter else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        quantity +\u003d item.quantity"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        item.quantity \u003d 0"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Remove Item quantity by input amount."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// - Returns:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    ///   If Item quantity is enough, return 0."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "    ///   If Item quantity is not enough, return deficit as positive integer."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    func remove(amount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        if quantity \u003c amount {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "            let deficit \u003d amount - quantity"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "            quantity \u003d 0"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "            return deficit"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        quantity -\u003d amount"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(at port: Port) -\u003e Int? {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let unitValue \u003d port.getBuyValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        return unitValue * quantity"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(at port: Port) -\u003e Int? {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let unitValue \u003d port.getSellValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        let value \u003d unitValue * quantity"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        quantity \u003d 0"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        return value"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "    func copy() -\u003e Item {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Item(itemParameter: itemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case quantity"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemParameter"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 95,
      "Yang Shuqi": 10
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/ItemParameter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ItemParameter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Enums to store item types, default prices and unit weights."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "enum ItemParameter: String, Codable, CaseIterable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    case teaLeaves \u003d \"Tea Leaves\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    case silk \u003d \"Silk\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    case perfume \u003d \"Perfume\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    case opium \u003d \"Opium\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    case food \u003d \"Food\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    static let defaultPrice \u003d 100"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var unitWeight: Int {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .teaLeaves:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "            return 25"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .silk:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "            return 20"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .perfume:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "            return 10"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .opium:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "            return 10"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .food:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "            return 5"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Create a quantized representation"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    func createItem(quantity: Int) -\u003e GenericItem {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Item(itemParameter: self, quantity: quantity)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Global pricing information"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(ports: [Port]) -\u003e Int {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ports.map({ $0.getBuyValue(of: self) }).compactMap({ $0 }).max() ?? 0"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getSellValue(ports: [Port]) -\u003e Int {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ports.map({ $0.getSellValue(of: self) }).compactMap({ $0 }).min() ?? 0"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let decoded \u003d try ItemParameter(rawValue: container.decode(String.self, forKey: .type))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let unwrappedDecoded \u003d decoded else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Unknown Item\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self \u003d unwrappedDecoded"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(self.rawValue, forKey: .type)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "extension ItemParameter: Hashable {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        hasher.combine(rawValue)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 55,
      "Yang Shuqi": 3,
      "Jason Chong": 17
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/Map.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Map.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Model to store initial position of nodes, paths, objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Map: Codable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    let basePirateRate \u003d 0.03"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var map: String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var bounds: Rect"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIDPair: [Int: Node]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var gameObjects \u003d GameVariable(value: [GameObject]())"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var npcs: [NPC] {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return gameObjects.value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .compactMap { $0 as? NPC }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var nodes \u003d GameVariable(value: Set\u003cNode\u003e()) // need acces to nodes and paths"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var pathsVariable \u003d GameVariable(value: [Node: [Path]]())"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var paths: [Node: [Path]] {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pathsVariable.value \u003d newValue"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return pathsVariable.value"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(map: String, bounds: Rect?) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let unwrappedBounds \u003d bounds else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            fatalError(\"Map bounds shouldn\u0027t be nil.\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.bounds \u003d unwrappedBounds"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIDPair \u003d [Int: Node]()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Update weather information to the month."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - month: current month"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func updateWeather(for month: Int) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for path in paths.values.flatMap({ $0 }) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for weather in path.modifiers {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                weather.update(currentMonth: month)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Change map background."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - map: image name of the new background"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - bounds: bounds of the new background"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changeBackground(_ map: String, with bounds: Rect?) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let unwrappedBounds \u003d bounds else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            fatalError(\"Map bounds shouldn\u0027t be nil.\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.bounds \u003d unwrappedBounds"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Add node to the map. Map node id to the node."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addNode(_ node: Node) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodes.value.insert(node)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIDPair[node.identifier] \u003d node"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Remove node from the map. Remove mapping from the node id to the node."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func removeNode(_ node: Node) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodes.value.remove(node)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIDPair.removeValue(forKey: node.identifier)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Remove all paths related with removed node"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let pathsOfNode \u003d paths[node] else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in pathsOfNode {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            paths[path.toNode]?.removeAll(where: { $0 \u003d\u003d path })"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            paths[path.fromNode]?.removeAll(where: { $0 \u003d\u003d path })"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Add path to the map. Path should be added to both fromNode and toNode."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func add(path: Path) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard nodes.value.contains(path.toNode) \u0026\u0026 nodes.value.contains(path.fromNode)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 path.toNode !\u003d path.fromNode else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"\\(path) is not added to map due to absense of its nodes\")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if paths[path.fromNode] \u003d\u003d nil {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            paths[path.fromNode] \u003d []"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if paths[path.toNode] \u003d\u003d nil {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            paths[path.toNode] \u003d []"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths[path.fromNode]?.append(path)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths[path.toNode]?.append(path)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Remove path from the map."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func removePath(_ path: Path) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pathsVariable.value[path.fromNode]?.removeAll(where: { $0 \u003d\u003d path })"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pathsVariable.value[path.toNode]?.removeAll(where: { $0 \u003d\u003d path })"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Return all nodes in the map."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getNodes() -\u003e Set\u003cNode\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return nodes.value"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Return all paths related to node."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getPaths(of node: Node) -\u003e [Path] {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return paths[node] ?? [Path]()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Return all paths in the map."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getAllPaths() -\u003e Set\u003cPath\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var pathSet \u003d Set\u003cPath\u003e()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in paths {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            path.value.forEach { pathSet.insert($0) }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return pathSet"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Add gameobject to the map"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addGameObject(gameObject: GameObject) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        gameObjects.value.append(gameObject)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToNodes(with callback: @escaping (Set\u003cNode\u003e) -\u003e Void) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodes.subscribe(with: callback)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToPaths(with callback: @escaping ([Node: [Path]]) -\u003e Void) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pathsVariable.subscribe(with: callback)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToObjects(with callback: @escaping (([GameObject]) -\u003e Void)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameObjects.subscribe(with: callback)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Get all pirates island in the map."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPiratesIslands() -\u003e [(Node, PirateIsland)] {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return getNodes().map { node in"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            node.objects"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .compactMap { $0 as? PirateIsland }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .map { (node, $0) }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }.flatMap { $0 }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Remove all NPCs in the map."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func removeAllNpcs() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameObjects.value \u003d gameObjects"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .value"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .filter { $0 as? NPC \u003d\u003d nil }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.nextID \u003d try container.decode(Int.self, forKey: .nodeNextId)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID \u003d try container.decode([Int].self, forKey: .nodeReuseId)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.map \u003d try container.decode(String.self, forKey: .map)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.bounds \u003d try container.decode(Rect.self, forKey: .bounds)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var nodesArrayForType \u003d try container.nestedUnkeyedContainer(forKey: CodingKeys.nodes)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var nodes \u003d Set\u003cNode\u003e()"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIDPair \u003d [Int: Node]()"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        while !nodesArrayForType.isAtEnd {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let node \u003d try nodesArrayForType.nestedContainer(keyedBy: NodeTypeKey.self)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let type \u003d try node.decode(NodeTypes.self, forKey: NodeTypeKey.type)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            switch type {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .port:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let node \u003d try node.decode(Port.self, forKey: NodeTypeKey.node)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodes.insert(node)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodeIDPair[node.identifier] \u003d node"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .sea:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let node \u003d try node.decode(Sea.self, forKey: NodeTypeKey.node)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodes.insert(node)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodeIDPair[node.identifier] \u003d node"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.nodes.value \u003d nodes"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var simplifiedPaths \u003d try container.nestedUnkeyedContainer(forKey: .paths)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        while !simplifiedPaths.isAtEnd {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let simplifiedPath \u003d try simplifiedPaths.nestedContainer(keyedBy: PathKeys.self)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let fromId \u003d try simplifiedPath.decode(Int.self, forKey: PathKeys.fromId)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let toId \u003d try simplifiedPath.decode(Int.self, forKey: PathKeys.toId)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let fromNode \u003d nodeIDPair[fromId], let toNode \u003d nodeIDPair[toId] else {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var volatilesArrayForType \u003d try simplifiedPath.nestedUnkeyedContainer(forKey: PathKeys.volatiles)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var modifiers \u003d [Volatile]()"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            while !volatilesArrayForType.isAtEnd {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let volatile \u003d try volatilesArrayForType.nestedContainer(keyedBy: VolatileTypeKey.self)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let type \u003d try volatile.decode(VolatileTypes.self, forKey: VolatileTypeKey.type)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                switch type {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                case .volatileMonsoon:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    let volatile \u003d try volatile.decode(VolatileMonsoon.self, forKey: VolatileTypeKey.volatile)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    modifiers.append(volatile)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                case .weather:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    let volatile \u003d try volatile.decode(Weather.self, forKey: VolatileTypeKey.volatile)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    modifiers.append(volatile)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let path \u003d Path(from: fromNode, to: toNode)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            path.modifiers \u003d modifiers"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if self.paths[fromNode] \u003d\u003d nil {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.paths[fromNode] \u003d []"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if self.paths[toNode] \u003d\u003d nil {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.paths[toNode] \u003d []"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.paths[fromNode]?.append(path)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.paths[toNode]?.append(path)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.pathsVariable.value \u003d paths"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var objectsWithType \u003d try container.nestedUnkeyedContainer(forKey: CodingKeys.objects)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        while !objectsWithType.isAtEnd {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let object \u003d try objectsWithType.nestedContainer(keyedBy: ObjectTypeKey.self)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let type \u003d try object.decode(ObjectType.self, forKey: .type)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            switch type {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .npc:"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let object \u003d try object.decode(NPC.self, forKey: .object)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                addGameObject(gameObject: object)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .ship:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let object \u003d try object.decode(ShipUI.self, forKey: .object)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                addGameObject(gameObject: object)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .pirate:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let object \u003d try object.decode(PirateIsland.self, forKey: .object)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                addGameObject(gameObject: object)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(map, forKey: .map)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(Node.nextID, forKey: .nodeNextId)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(Node.reuseID, forKey: .nodeReuseId)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var nodesWithType \u003d [NodeWithType]()"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in nodes.value {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if node is Port {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodesWithType.append(NodeWithType(node: node, type: NodeTypes.port))"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if node is Sea {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodesWithType.append(NodeWithType(node: node, type: NodeTypes.sea))"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(nodesWithType, forKey: .nodes)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var simplifiedPaths \u003d [SimplifiedPath]()"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for pair in getAllPaths() {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let fromID \u003d pair.fromNode.identifier"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let toID \u003d pair.toNode.identifier"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var volatileWithType \u003d [VolatileWithType]()"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            for volatile in pair.modifiers {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if volatile is VolatileMonsoon {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    volatileWithType.append(VolatileWithType(volatile: volatile, type: VolatileTypes.volatileMonsoon))"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if volatile is Weather {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    volatileWithType.append(VolatileWithType(volatile: volatile, type: VolatileTypes.weather))"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            simplifiedPaths.append(SimplifiedPath(fromId: fromID, toId: toID, volatiles: volatileWithType))"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(simplifiedPaths, forKey: .paths)"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(bounds, forKey: .bounds)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nodesWithType, forKey: .nodes)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var objectsWithType \u003d [ObjectWithType]()"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for object in gameObjects.value {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if object is ShipUI {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else if object is PirateIsland {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objectsWithType.append(ObjectWithType(object: object, type: ObjectType.pirate))"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else if object is NPC {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objectsWithType.append(ObjectWithType(object: object, type: ObjectType.npc))"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(objectsWithType, forKey: .objects)"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case map"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case nodes"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case paths"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case bounds"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "henry"
        },
        "content": "        case entities"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case nodeNextId"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case nodeReuseId"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "henry"
        },
        "content": "        case npcs"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case objects"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum NodeTypeKey: String, CodingKey {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case node"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum NodeTypes: String, Codable {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case port"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case sea"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    struct SimplifiedPath: Codable {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var fromId: Int"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var toId: Int"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var volatiles: [VolatileWithType]"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        init(fromId: Int, toId: Int, volatiles: [VolatileWithType]) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.fromId \u003d fromId"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.toId \u003d toId"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.volatiles \u003d volatiles"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum PathKeys: String, CodingKey {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case fromId"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case toId"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case volatiles"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum VolatileTypeKey: String, CodingKey {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case volatile"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum VolatileTypes: String, Codable {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case volatileMonsoon"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case weather"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    struct VolatileWithType: Codable {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var volatile: Volatile"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var type: VolatileTypes"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        init(volatile: Volatile, type: VolatileTypes) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.volatile \u003d volatile"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.type \u003d type"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    enum ObjectTypeKey: String, CodingKey {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "henry"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case object"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    enum ObjectType: String, Codable {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "henry"
        },
        "content": "        case npc"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case pirate"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case ship"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    struct NodeWithType: Codable, Hashable {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var node: Node"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var type: NodeTypes"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        init(node: Node, type: NodeTypes) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.node \u003d node"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.type \u003d type"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    struct ObjectWithType: Codable {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let object: GameObject"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let type: ObjectType"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func checkRep() -\u003e Bool {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in getAllPaths() {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard nodes.value.contains(path.toNode) \u0026\u0026 nodes.value.contains(path.fromNode) else {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard path.toNode !\u003d path.fromNode else {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in nodes.value {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard nodeIDPair[node.identifier] !\u003d nil else {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in nodeIDPair.values {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard nodes.value.contains(node) else {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 308,
      "henry": 16,
      "Jason Chong": 92,
      "yuhongherald": 1
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/Node.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Node.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Modal for node to store identifier, name, frame and objects in a node."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Node: Codable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static var nextID: Int \u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static var reuseID: [Int] \u003d []"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let identifier: Int"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let name: String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let frame: Rect"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var objects: [GameObject] \u003d []"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(name: String, frame: Rect) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.frame \u003d frame"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        if !Node.reuseID.isEmpty {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.identifier \u003d Node.reuseID.removeLast()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.identifier \u003d Node.nextID"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            Node.nextID +\u003d 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Indicate removal of a node to reuse its identifier."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func remove() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID.append(self.identifier)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        identifier \u003d try values.decode(Int.self, forKey: .identifier)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        frame \u003d try values.decode(Rect.self, forKey: .frame)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var objectsArrayForType \u003d try values.nestedUnkeyedContainer(forKey: CodingKeys.objects)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        while !objectsArrayForType.isAtEnd {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let object \u003d try objectsArrayForType.nestedContainer(keyedBy: ObjectTypeKey.self)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let type \u003d try object.decode(ObjectTypes.self, forKey: ObjectTypeKey.type)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            switch type {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .pirate:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let object \u003d try object.decode(PirateIsland.self, forKey: ObjectTypeKey.object)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                objects.append(object)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .shipUI:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let object \u003d try object.decode(ShipUI.self, forKey: ObjectTypeKey.object)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                objects.append(object)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(identifier, forKey: .identifier)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(frame, forKey: .frame)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var objectsWithType \u003d [ObjectWithType]()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for object in objects {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if object is PirateIsland {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                objectsWithType.append(ObjectWithType(object: object, type: ObjectTypes.pirate))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if object is ShipUI {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                objectsWithType.append(ObjectWithType(object: object, type: ObjectTypes.shipUI))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(objectsWithType, forKey: .objects)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Add game object into the node."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func add(object: GameObject) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.objects.append(object)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case identifier"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case image"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case frame"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case objects"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum ObjectTypeKey: String, CodingKey {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case object"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum ObjectTypes: String, Codable {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case pirate"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case shipUI"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    struct ObjectWithType: Codable, Hashable {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var object: GameObject"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var type: ObjectTypes"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        init(object: GameObject, type: ObjectTypes) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.object \u003d object"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.type \u003d type"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension Node: Hashable {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hasher.combine(self.identifier)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func \u003d\u003d (lhs: Node, rhs: Node) -\u003e Bool {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.identifier \u003d\u003d rhs.identifier"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "// Mark : - Information"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Node {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Get nodes that can be acheived from the node."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - ship: ship that requires the acheivable nodes"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - range: range that that can be achieved from the node"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - map: map contains the node"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Returns:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   The nodes that can be acheieved from the node."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(ship: Pirate_WeatherEntity, range: Double, map: Map) -\u003e [Node] {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var pQueue \u003d PriorityQueue\u003cComparablePair\u003cNode\u003e\u003e()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "        var visited \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "        var next \u003d self"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "        var nodesInRange \u003d [Node]()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pQueue.add(ComparablePair(object: next, weight: 0))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        while !pQueue.isEmpty {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let comparableNode \u003d pQueue.poll()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "            let weight \u003d comparableNode?.weight ?? 0"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "            next \u003d comparableNode?.object ?? self"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "            if visited.contains(next.identifier) || weight \u003e range {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "            visited.insert(next.identifier)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": "            nodesInRange.append(next)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "            for neighbor in map.getPaths(of: next) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "henry"
        },
        "content": "                let cost \u003d neighbor.computeCostOfPath(baseCost: 1, with: ship)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                pQueue.add(ComparablePair\u003cNode\u003e(object: neighbor.toNode, weight: weight + cost))"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "        return nodesInRange"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Get shortest path to another node."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - node: destination node"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - ship: ship that requires the path"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - map: map that contains the nodes"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Returns:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   The nodes on the shortest path."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getCompleteShortestPath(to node: Node, with ship: Pirate_WeatherEntity, map: Map) -\u003e [Node] {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var pQueue \u003d PriorityQueue\u003cComparablePair\u003c[Node]\u003e\u003e()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "henry"
        },
        "content": "        var visited \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "        var next \u003d self"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "henry"
        },
        "content": "        var path \u003d [Node]()"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pQueue.add(ComparablePair(object: [next], weight: 0))"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        while next !\u003d node \u0026\u0026 !pQueue.isEmpty {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let comparablePath \u003d pQueue.poll()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "henry"
        },
        "content": "            path \u003d comparablePath?.object ?? [self]"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "henry"
        },
        "content": "            let weight \u003d comparablePath?.weight ?? 0"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "henry"
        },
        "content": "            next \u003d path.last ?? self"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "henry"
        },
        "content": "            if visited.contains(next.identifier) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "henry"
        },
        "content": "            visited.insert(next.identifier)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for neighbor in map.getPaths(of: next) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "henry"
        },
        "content": "                let cost \u003d neighbor.computeCostOfPath(baseCost: 1, with: ship)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                pQueue.add(ComparablePair\u003c[Node]\u003e(object: path + [neighbor.toNode], weight: weight + cost))"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return path.map { $0 }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Get num of nodes to the destination node."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - node: destination node"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - map: map contains the nodes"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNumNodesTo(to node: Node, map: Map) -\u003e Int? {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "henry"
        },
        "content": "        var queue \u003d [(Node, Int)]()"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "henry"
        },
        "content": "        var visited \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "        var next \u003d self"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        queue.append((next, 0))"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "henry"
        },
        "content": "        var weight \u003d -1"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "henry"
        },
        "content": "        while next !\u003d node \u0026\u0026 !queue.isEmpty {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "henry"
        },
        "content": "            (next, weight) \u003d queue.removeFirst()"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "henry"
        },
        "content": "            if visited.contains(next.identifier) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "henry"
        },
        "content": "            visited.insert(next.identifier)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "henry"
        },
        "content": "            for neighbor in map.getPaths(of: next) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "henry"
        },
        "content": "                queue.append((neighbor.toNode, weight + 1))"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "henry"
        },
        "content": "        return weight \u003c 0 ? nil : weight"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 115,
      "henry": 57,
      "Jason Chong": 33
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/Path.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Path.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Modal for path to store two ends of the path as well as volatiles in the path."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Path: Hashable, Codable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let fromNode: Node"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let toNode: Node"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var modifiers \u003d [Volatile]()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(from fromObject: Node, to toObject: Node) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.fromNode \u003d fromObject"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.toNode \u003d toObject"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        fromNode \u003d try values.decode(Node.self, forKey: .fromNode)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        toNode \u003d try values.decode(Node.self, forKey: .toNode)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var volatilesArrayForType \u003d try values.nestedUnkeyedContainer(forKey: CodingKeys.modifiers)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        while !volatilesArrayForType.isAtEnd {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let volatile \u003d try volatilesArrayForType.nestedContainer(keyedBy: VolatileTypeKey.self)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let type \u003d try volatile.decode(VolatileTypes.self, forKey: VolatileTypeKey.type)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            switch type {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .volatileMonsoom:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let volatile \u003d try volatile.decode(VolatileMonsoon.self, forKey: VolatileTypeKey.volatile)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                modifiers.append(volatile)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .weather:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let volatile \u003d try volatile.decode(Weather.self, forKey: VolatileTypeKey.volatile)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                modifiers.append(volatile)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(fromNode, forKey: .fromNode)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(toNode, forKey: .toNode)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var volatileWithType \u003d [VolatileWithType]()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for volatile in modifiers {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if volatile is VolatileMonsoon {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                volatileWithType.append(VolatileWithType(volatile: volatile, type: VolatileTypes.volatileMonsoom))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if volatile is Weather {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                volatileWithType.append(VolatileWithType(volatile: volatile, type: VolatileTypes.weather))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(volatileWithType, forKey: .modifiers)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func \u003d\u003d (lhs: Path, rhs: Path) -\u003e Bool {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return (lhs.fromNode, lhs.toNode) \u003d\u003d (rhs.fromNode, rhs.toNode)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hasher.combine(fromNode)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hasher.combine(toNode)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Compute the steps required for a player to go through the path. Influenced by volatile modifiers."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "    func computeCostOfPath(baseCost: Double, with ship: Pirate_WeatherEntity) -\u003e Double {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        var result \u003d baseCost"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        for modifier in modifiers {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "            result \u003d Double(modifier.applyVelocityModifier(to: Float(result), with: Float(ship.getWeatherModifier())))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case fromNode"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case toNode"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case modifiers"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum VolatileTypeKey: String, CodingKey {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case volatile"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum VolatileTypes: String, Codable {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case volatileMonsoom"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case weather"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    struct VolatileWithType: Codable {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var volatile: Volatile"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var type: VolatileTypes"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        init(volatile: Volatile, type: VolatileTypes) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.volatile \u003d volatile"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.type \u003d type"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 78,
      "henry": 8,
      "Jason Chong": 19
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/PirateIsland.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PirateUI.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class PirateIsland: GameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static let pirateNodeHeight: Double \u003d 50"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static let pirateNodeWidth: Double \u003d 50"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let influence \u003d 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let chance \u003d 0.2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(in node: Node) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(frame: node.frame)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        try super.init(from: decoder)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 19,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/Port.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Port.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Modal for port to store owner, tax and items."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class Port: Node {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var taxAmount: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var owner: Team? {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.ownerName \u003d self.owner?.name"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var ownerName: String?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParametersSoldByPort: [ItemParameter] {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        return [ItemParameter](itemBuyValue.keys)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParametersBoughtByPort: [ItemParameter] {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        return [ItemParameter](itemSellValue.keys)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemSellValue \u003d [ItemParameter: Int]()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemBuyValue \u003d [ItemParameter: Int]()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let portNodeWidth: Double \u003d 50"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let portNodeHeight: Double \u003d 50"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(team: Team, originX: Double, originY: Double) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let frame \u003d Rect(originX: originX, originY: originY, height: Port.portNodeHeight,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               width: Port.portNodeWidth)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        owner \u003d team"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init(name: team.name, frame: frame)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        initDefaultPrices()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(team: Team?, name: String, originX: Double, originY: Double) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let frame \u003d Rect(originX: originX, originY: originY, height: Port.portNodeHeight,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               width: Port.portNodeWidth)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init(name: name, frame: frame)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        initDefaultPrices()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        ownerName \u003d try values.decode(String?.self, forKey: .ownerName)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        itemBuyValue \u003d try values.decode([ItemParameter: Int].self, forKey: .itemBuyValue)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        itemSellValue \u003d try values.decode([ItemParameter: Int].self, forKey: .itemSellValue)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        taxAmount.value \u003d try values.decode(Int.self, forKey: .tax)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let superDecoder \u003d try values.superDecoder()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try super.init(from: superDecoder)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(owner?.name, forKey: .ownerName)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemBuyValue, forKey: .itemBuyValue)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemSellValue, forKey: .itemSellValue)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(taxAmount.value, forKey: .tax)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let superencoder \u003d container.superEncoder()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try super.encode(to: superencoder)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Assign the ownership of the port to the team."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - team: new owner of the port"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    public func assignOwner(_ team: Team?) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        owner \u003d team"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Collecte tax from the player and pay tax to port owner."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - player: player to collect tax from"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    public func collectTax(from player: GenericPlayer) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "        // Prevent event listeners from firing unneccessarily"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if player.team \u003d\u003d owner {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        player.updateMoney(by: -taxAmount.value)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        owner?.updateMoney(by: taxAmount.value)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Collecte tax from the NPC and pay tax to port owner."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - npc: NPC to collect tax from"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "    public func collectTax(from npc: NPC) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner?.updateMoney(by: taxAmount.value)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Get import price of item."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(of type: ItemParameter) -\u003e Int? {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        return itemBuyValue[type]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "     /// Get export price of item."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getSellValue(of type: ItemParameter) -\u003e Int? {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "        return itemSellValue[type]"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "     /// Set import price of item to value."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setBuyValue(of type: ItemParameter, value: Int) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        let finalValue \u003d max(getSellValue(of: type) ?? 0, value)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "        itemBuyValue[type] \u003d finalValue"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Set export price of item to value."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setSellValue(of type: ItemParameter, value: Int) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "        let finalValue \u003d min(getBuyValue(of: type) ?? value, value)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "        itemSellValue[type] \u003d finalValue"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Availability at ports"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "    func delete(_ type: ItemParameter) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "        if getBuyValue(of: type) !\u003d nil {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "            itemBuyValue.removeValue(forKey: type)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "        if getSellValue(of: type) !\u003d nil {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "            itemSellValue.removeValue(forKey: type)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getAllItemParameters() -\u003e [ItemParameter] {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // default/placeholder for all items"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Array(Set(itemParametersSoldByPort + itemParametersBoughtByPort))"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func initDefaultPrices() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "        ItemParameter.allCases.forEach { [weak self] itemType in"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.itemSellValue[itemType] \u003d ItemParameter.defaultPrice"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.itemBuyValue[itemType] \u003d ItemParameter.defaultPrice"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case ownerName"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case itemParameters"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemBuyValue"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemSellValue"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case tax"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 67,
      "henry": 41,
      "Jason Chong": 35,
      "yuhongherald": 2
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/Sea.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Sea.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class Sea: Node {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let seaNodeWidth: Double \u003d 50"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let seaNodeHeight: Double \u003d 50"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(name: String, originX: Double, originY: Double) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let frame \u003d Rect(originX: originX, originY: originY, height: Sea.seaNodeHeight,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               width: Sea.seaNodeWidth)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init(name: name, frame: frame)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try super.init(from: decoder)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 5,
      "Jason Chong": 17
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/TeamParameter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  PlayerParameter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Initial state of each team."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TeamParameter: Codable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    let itemsConsumed: [(ItemParameter, Int)] \u003d [(.food, 1)]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    let startingItems: [(ItemParameter, Int)] \u003d [(.food, 5)]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var name: String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var teamName: String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var money \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private(set) var startingId: Int?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var startingNode: Node? {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.startingId \u003d startingNode?.identifier"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(name: String, teamName: String, node: Node?) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.teamName \u003d teamName"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.startingNode \u003d node"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamName \u003d try values.decode(String.self, forKey: .teamName)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let moneyValue \u003d try values.decode(Int.self, forKey: .money)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        startingNode \u003d try values.decode(Node?.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        money \u003d GameVariable(value: moneyValue)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getName() -\u003e String {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return name"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getTeam() -\u003e Team {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return Team(name: teamName)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getMoney() -\u003e Int {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return money.value"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getStartingNode() -\u003e Node? {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        return startingNode"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(money: Int?) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let unwrappedMoney \u003d money {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.money \u003d GameVariable(value: unwrappedMoney)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(teamName, forKey: .teamName)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(money.value, forKey: .money)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(startingId, forKey: .nodeId)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "    enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case teamName"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case money"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case nodeId"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 71,
      "henry": 8
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/VolatileModifier.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  VolatileModifier.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Protocol for volatiles."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol VolatileModifier: Codable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var isActive: Bool { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func applyVelocityModifier(to oldVelocity: Float, with modifier: Float) -\u003e Float"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func update(currentMonth: Int)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "// Generic class inheritate from VolatileModifier to force subclasses conform to codable"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class Volatile: VolatileModifier, Codable {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var isActive \u003d false"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func applyVelocityModifier(to oldVelocity: Float, with modifier: Float) -\u003e Float {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return oldVelocity"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func update(currentMonth: Int) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 7,
      "Jason Chong": 23,
      "yuhongherald": 1
    }
  },
  {
    "path": "SailingThroughHistory/Game Parameters/Weather.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Weather.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Weather: Volatile {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var windVelocity: Float \u003d 0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let strengths: [Float] \u003d Default.Weather.strengths"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func applyVelocityModifier(to oldVelocity: Float, with modifier: Float) -\u003e Float {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if isActive {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return oldVelocity + windVelocity"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return oldVelocity"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Update wind velocity based on current month strength."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func update(currentMonth: Int) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        windVelocity \u003d strengths[currentMonth / 4]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        isActive \u003d windVelocity !\u003d 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 4,
      "Jason Chong": 24
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/GameVariable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GameVariable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "import RxSwift"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class GameVariable\u003cElement\u003e : ObservableVariable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var value: Element {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "            return variable.value"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        set(value) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "            variable.value \u003d value"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let disposeBag \u003d DisposeBag()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var variable: Variable\u003cElement\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(value: Element) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        variable \u003d Variable(value)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(onNext: @escaping (Element) -\u003e Void, onError: @escaping (Error?) -\u003e Void,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                   onDisposed: (() -\u003e Void)?) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        variable.asObservable()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .subscribe(onNext: onNext, onError: onError, onCompleted: nil, onDisposed: onDisposed)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .disposed(by: disposeBag)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with observer: @escaping (Element) -\u003e Void) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        variable.asObservable()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .subscribe(onNext: observer, onError: nil, onCompleted: nil, onDisposed: nil)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .disposed(by: disposeBag)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 26,
      "Jason Chong": 15
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/GenericGameState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericGameState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol GenericGameState: Codable, CustomStringConvertible {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var gameTime: GameVariable\u003cGameTime\u003e { get set }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var gameObjects: [GameObject] { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var map: Map { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var availableUpgrades: [Upgrade] { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var maxTaxAmount: Int { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var itemParameters: [GameVariable\u003cItemParameter\u003e] { get set }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var numTurns: Int { get }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPlayers() -\u003e [GenericPlayer]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startNextTurn(speedMultiplier: Double)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNextPlayer() -\u003e GenericPlayer?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getTeamMoney() -\u003e [Team: Int]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func distributeTeamMoney()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endGame()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 19,
      "Jason Chong": 5,
      "yuhongherald": 2
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/GenericPlayer.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericPlayer.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol GenericPlayer: class, Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var team: Team? { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var isGameMaster: Bool { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var money: GameVariable\u003cInt\u003e { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentCargoWeight: Int { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var weightCapacity: Int { get }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var state: GameVariable\u003cPlayerState\u003e { get }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var node: Node? { get }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e { get }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var hasRolled: Bool { get }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var deviceId: String { get }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var map: Map? { get set }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState? { get set }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // for events"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    var playerShip: ShipAPI? { get }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var homeNode: Int { get }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addShipsToMap(map: Map)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    // update money"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(to amount: Int)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func updateMoney(by amount: Int)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canBuyUpgrade() -\u003e Bool"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    // Subscribes"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToItems(with observer: @escaping (GenericPlayer, [GenericItem]) -\u003e Void)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (GenericPlayer, Int) -\u003e Void)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (GenericPlayer, Int) -\u003e Void)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMoney(with observer: @escaping (GenericPlayer, Int) -\u003e Void)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Before moving"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn(speedMultiplier: Double, map: Map?)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func buyUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    func roll() -\u003e (Int, [Int])"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Moving - Auto progress to End turn if cannot dock"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func move(nodeId: Int)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPath(to nodeId: Int) -\u003e [Int]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int) -\u003e [Node]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "    // After moving can choose to dock"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPirateEncounterChance(at nodeId: Int) -\u003e Double"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Docked - End turn is manual here"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemParameters() -\u003e [ItemParameter]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemParameter: ItemParameter, quantity: Int) throws"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemParameter: ItemParameter, quantity: Int) throws"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setTax(port: Port, amount: Int) throws"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "    // End turn - supplies are removed here"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func endTurn() -\u003e [InfoMessage]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func canTradeAt(port: Port) -\u003e Bool"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "func \u003d\u003d (lhs: GenericPlayer, rhs: GenericPlayer?) -\u003e Bool {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    return lhs.name \u003d\u003d rhs?.name"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "func !\u003d (lhs: GenericPlayer, rhs: GenericPlayer?) -\u003e Bool {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "    return !(lhs \u003d\u003d rhs)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 51,
      "Yang Shuqi": 2,
      "Jason Chong": 21,
      "yuhongherald": 2
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/GenericTeam.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  GenericTeam.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/28/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol GenericTeam: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var money: GameVariable\u003cInt\u003e { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(name: String)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func updateMoney(by amount: Int)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "func \u003d\u003d (lhs: GenericTeam, rhs: GenericTeam?) -\u003e Bool {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    return lhs.name \u003d\u003d rhs?.name"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "func !\u003d (lhs: GenericTeam, rhs: GenericTeam?) -\u003e Bool {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    return !(lhs \u003d\u003d rhs)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 25
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/InGameMessage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  InGameMessage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 2/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "enum InGameMessage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    case info(message: String)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case error(message: String)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMsg() -\u003e String {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .info(let msg):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "            return msg"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .error(let msg):"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "            return msg"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 23
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/ItemStorage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ItemStorage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol ItemStorage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemParameters(ship: ShipAPI) -\u003e [ItemParameter]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(ship: ShipAPI, itemParameter: ItemParameter) -\u003e Int"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buyItem(ship: ShipAPI, itemParameter: ItemParameter, quantity: Int) throws"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(ship: ShipAPI, itemParameter: ItemParameter, quantity: Int) throws"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    func removeItem(ship: ShipAPI, by itemParameter: ItemParameter, with quantity: Int) -\u003e Int"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 17
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/Navigatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Navigatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol Navigatable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(ship: ShipAPI, roll: Int, speedMultiplier: Double) -\u003e [Node]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func move(ship: inout ShipAPI, node: Node)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock(ship: ShipAPI) -\u003e Bool"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock(ship: inout ShipAPI) throws -\u003e Port"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 16
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/ObservableVariable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ObservableVariable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol ObservableVariable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    associatedtype Element: Any"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(onNext: @escaping (Element) -\u003e Void, onError: @escaping (Error?) -\u003e Void, onDisposed: (() -\u003e Void)?)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with observer: @escaping (Element) -\u003e Void)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 12,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/Pirate_WeatherEntity.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Pirate_WeatherEntity.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 25/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol Pirate_WeatherEntity {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startPirateChase()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 14
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/PlayerState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PlayerState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "enum PlayerState {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    case moving"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case docked"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    case endTurn"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 15
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/ShipAPI.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipAPI.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol ShipAPI: Pirate_WeatherEntity {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemManager: ItemStorage { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var upgradeManager: Upgradable { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var navigationManager: Navigatable { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isChasedByPirates: Bool { get set }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var turnsToBeingCaught: Int { get set }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var shipChassis: ShipChassis? { get set }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var auxiliaryUpgrade: AuxiliaryUpgrade? { get set }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeId: Int { get set }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node: Node { get }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var currentCargoWeight: Int { get }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weightCapacity: Int { get set }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e { get }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    var owner: GenericPlayer? { get set }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    var items: GameVariable\u003c[GenericItem]\u003e { get set }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isDocked: Bool { get set }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    var shipObject: ShipUI? { get set }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    var map: Map? { get set }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endTurn(speedMultiplier: Double) -\u003e [InfoMessage]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateCargoWeight(items: [GenericItem])"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 38
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/Upgradable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Upgradable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol Upgradable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func installUpgrade(ship: inout ShipAPI, upgrade: Upgrade) -\u003e (Bool, InfoMessage?)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 13
    }
  },
  {
    "path": "SailingThroughHistory/Game State/API/Upgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Upgrades.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol Upgrade: Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var cost: Int { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var type: UpgradeType { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNewSuppliesConsumed(baseConsumption: [GenericItem]) -\u003e [GenericItem]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMovementModifier() -\u003e Double"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 18
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Entities/NPC.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  NPC.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "import GameKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class NPC: GameObject {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    static var nextId: UInt \u003d 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    static var reuseIds \u003d [UInt]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    let numDieSides \u003d 12"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    let identifier: UInt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    let maxTaxAmount: Int"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeId: Int"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nextSeed: UInt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nextDestinationId: Int"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(node: Node, maxTaxAmount: Int) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeId \u003d node.identifier"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        identifier \u003d NPC.getNextId()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.maxTaxAmount \u003d maxTaxAmount"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextSeed \u003d identifier"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextDestinationId \u003d nodeId"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(frame: node.frame)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeId \u003d try values.decode(Int.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        identifier \u003d try values.decode(UInt.self, forKey: .identifier)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        maxTaxAmount \u003d try values.decode(Int.self, forKey: .maxTaxAmount)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextSeed \u003d try values.decode(UInt.self, forKey: .nextSeed)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextDestinationId \u003d try values.decode(Int.self, forKey: .nextDestinationId)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let superDecoder \u003d try values.superDecoder()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try super.init(from: superDecoder)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nodeId, forKey: .nodeId)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(identifier, forKey: .identifier)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(maxTaxAmount, forKey: .maxTaxAmount)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nextSeed, forKey: .nextSeed)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nextDestinationId, forKey: .nextDestinationId)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        let superEncoder \u003d container.superEncoder()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        try super.encode(to: superEncoder)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        case nodeId"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        case identifier"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        case maxTaxAmount"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        case nextSeed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        case nextDestinationId"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    func remove() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        NPC.reuseIds.append(identifier)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "    func moveToNextNode(map: Map) -\u003e Node? {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        let nextNodeId \u003d getNextNode(map: map, maxTaxAmount: maxTaxAmount)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentNode \u003d map.nodeIDPair[nodeId], let nextNode \u003d map.nodeIDPair[nextNodeId] else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        let path \u003d currentNode.getCompleteShortestPath(to: nextNode, with: self, map: map)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for node in path {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            frame.value \u003d node.frame"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        frame.value \u003d nextNode.frame"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodeId \u003d nextNodeId"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        if let port \u003d nextNode as? Port {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "            port.collectTax(from: self)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return nextNode"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNextNode(map: Map, maxTaxAmount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        var generator \u003d GKMersenneTwisterRandomSource()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        generator.seed \u003d UInt64(nextSeed)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        if nextDestinationId \u003d\u003d nodeId {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "            nextDestinationId \u003d getNewDestinationPortId(generator: \u0026generator, map: map)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let currentNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"NPC ship is in invalid node\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let destinationNode \u003d map.nodeIDPair[nextDestinationId] else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"NPC ship has invalid destination node\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        let path \u003d currentNode.getCompleteShortestPath(to: destinationNode, with: self, map: map)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        let movementRoll \u003d 1 + generator.nextInt(upperBound: numDieSides)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "        if movementRoll \u003e\u003d path.count - 1 {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "            nextSeed \u003d UInt(generator.nextInt(upperBound: Int.max))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nextDestinationId"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        let selectedPorts \u003d Array(path[0..\u003cmovementRoll]).map({ $0 as? Port }).compactMap({ $0 })"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        var lowestTax \u003d maxTaxAmount"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        var lowestTaxPort \u003d selectedPorts.first"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        for port in selectedPorts {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "            lowestTax \u003d min(lowestTax, port.taxAmount.value)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "            lowestTaxPort \u003d port"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "        let decidingRoll \u003d generator.nextUniform()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextSeed \u003d UInt(generator.nextInt(upperBound: Int.max))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "        if decidingRoll \u003e Float(lowestTax) / Float(maxTaxAmount),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "            let lowestTaxPortId \u003d lowestTaxPort?.identifier {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "            return lowestTaxPortId"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        return path[movementRoll - 1].identifier"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static func getNextId() -\u003e UInt {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard !reuseIds.isEmpty else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "            nextId +\u003d 1"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nextId - 1"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "        return reuseIds.removeFirst()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func getNewDestinationPortId(generator: inout GKMersenneTwisterRandomSource, map: Map) -\u003e Int {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ports \u003d map.getNodes().map({ $0 as? Port }).compactMap({ $0 })"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "            .filter({ $0.identifier !\u003d nextDestinationId })"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "        let index \u003d generator.nextInt(upperBound: ports.count)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ports[index].identifier"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "extension NPC: Pirate_WeatherEntity {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startPirateChase() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(\"Not supported\")"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1.0"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 134,
      "Yang Shuqi": 2,
      "Jason Chong": 8
    }
  },
  {
    "path": "SailingThroughHistory/Game State/GameState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GameState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class GameState: GenericGameState {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var gameTime: GameVariable\u003cGameTime\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var gameObjects: [GameObject] {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return map.gameObjects.value"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    let maxTaxAmount: Int"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let availableUpgrades: [Upgrade]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var itemParameters: [GameVariable\u003cItemParameter\u003e]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let numTurns: Int"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var map: Map"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var teams \u003d [Team]()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var players \u003d [GenericPlayer]()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var speedMultiplier \u003d 1.0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var playerTurnOrder \u003d [GenericPlayer]()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(baseYear: Int, level: GenericLevel, players: [RoomMember]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yu Pei Henry"
        },
        "content": "        gameTime \u003d GameVariable(value: GameTime(baseYear: baseYear))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        teams \u003d level.teams"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map \u003d level.map"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        availableUpgrades \u003d level.upgrades"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        maxTaxAmount \u003d level.maxTaxAmount"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        itemParameters \u003d [GameVariable\u003cItemParameter\u003e]()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for itemParameter in level.itemParameters {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            itemParameters.append(GameVariable\u003cItemParameter\u003e(value: itemParameter))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        numTurns \u003d level.numOfTurn"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        initializePlayers(from: level.playerParameters, for: players)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.players.forEach { player in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.map \u003d map"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.addShipsToMap(map: map)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.gameState \u003d self"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        initializePortTaxes(to: level.defaultTaxAmount)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        initializeNPCs(amount: players.count)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try gameTime \u003d GameVariable(value: values.decode(GameTime.self, forKey: .gameTime))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        try map \u003d values.decode(Map.self, forKey: .map)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let itemParameters \u003d try values.decode([ItemParameter].self, forKey: .itemParameters)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.itemParameters \u003d [GameVariable\u003cItemParameter\u003e]()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for itemParameter in itemParameters {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.itemParameters.append(GameVariable\u003cItemParameter\u003e(value: itemParameter))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        try teams \u003d values.decode([Team].self, forKey: .teams)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try players \u003d values.decode([PlayerWithType].self, forKey: .players).map { $0.player }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        try speedMultiplier \u003d values.decode(Double.self, forKey: .speedMultiplier)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try numTurns \u003d values.decode(Int.self, forKey: .numTurns)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgradeTypes \u003d try values.decode([UpgradeType].self, forKey: .availableUpgrades)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        availableUpgrades \u003d upgradeTypes.map { $0.toUpgrade() }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        maxTaxAmount \u003d try values.decode(Int.self, forKey: .maxTaxAmount)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        for player in players {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.map \u003d map"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "            player.addShipsToMap(map: map)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "            player.gameState \u003d self"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in map.getNodes() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let port \u003d node as? Port else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            port.assignOwner(teams.first(where: { team in"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                team.name \u003d\u003d port.ownerName"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try container.encode(gameTime.value, forKey: .gameTime)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(map, forKey: .map)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let itemParameters \u003d self.itemParameters.map {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return $0.value"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(numTurns, forKey: .numTurns)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemParameters, forKey: .itemParameters)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(teams, forKey: .teams)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(players.map { PlayerWithType(from: $0) }, forKey: .players)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(speedMultiplier, forKey: .speedMultiplier)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgradeTypes \u003d availableUpgrades.map { $0.type }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(upgradeTypes, forKey: .availableUpgrades)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(maxTaxAmount, forKey: .maxTaxAmount)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "        case gameTime"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "        case map"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemParameters"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        case teams"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        case players"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        case speedMultiplier"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case availableUpgrades"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        case maxTaxAmount"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case numTurns"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPlayers() -\u003e [GenericPlayer] {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "        return players"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNextPlayer() -\u003e GenericPlayer? {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        let nextPlayer \u003d playerTurnOrder.removeFirst()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "        nextPlayer.startTurn(speedMultiplier: speedMultiplier, map: map)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "        return nextPlayer"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startNextTurn(speedMultiplier: Double) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.speedMultiplier \u003d speedMultiplier"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "        playerTurnOrder.removeAll()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "        for player in players {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "            playerTurnOrder.append(player)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func distributeTeamMoney() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var teamPlayers \u003d [Team: [GenericPlayer]]()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for player in players {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let team \u003d player.team else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            teamPlayers[team, default: []].append(player)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for (team, players) in teamPlayers {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let moneyPerPlayer \u003d team.money.value / players.count"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for player in players {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                player.updateMoney(by: moneyPerPlayer)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            team.money.value \u003d 0"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endGame() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getTeamMoney() -\u003e [Team: Int] {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var result \u003d [Team: Int]()"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for player in players {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let team \u003d player.team else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            result[team] \u003d (result[team] ?? 0) + player.money.value"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func initializePlayers(from parameters: [TeamParameter], for roomPlayers: [RoomMember]) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "        players.removeAll()"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for roomPlayer in roomPlayers {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if roomPlayer.isGameMaster {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let player \u003d GameMaster(name: roomPlayer.playerName, deviceId: roomPlayer.deviceId)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                players.append(player)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let parameter \u003d parameters.first {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                $0.getTeam().name \u003d\u003d roomPlayer.teamName"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let unwrappedParam \u003d parameter, roomPlayer.hasTeam else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                preconditionFailure(\"Player has invalid team.\")"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var team \u003d unwrappedParam.getTeam()"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let storedTeam \u003d teams.first(where: {$0.name \u003d\u003d team.name}) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                team \u003d storedTeam"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                teams.append(team)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let node: Node"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let startingNode \u003d team.startingNode {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                node \u003d startingNode"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let defaultNode \u003d map.getNodes().first else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    fatalError(\"No nodes to start from\")"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                node \u003d defaultNode"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "henry"
        },
        "content": "            let itemsConsumed \u003d unwrappedParam.itemsConsumed.map({ itemParameterTupleToItem(tuple: $0) }).compactMap({ $0 })"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "henry"
        },
        "content": "            let startingItems \u003d unwrappedParam.startingItems.map({ itemParameterTupleToItem(tuple:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "henry"
        },
        "content": "                $0) }).compactMap({ $0 })"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let player \u003d Player(name: String(roomPlayer.playerName.prefix(8)),"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                team: team, map: map, node: node, itemsConsumed: itemsConsumed,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                startingItems: startingItems, deviceId: roomPlayer.deviceId)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "henry"
        },
        "content": "            player.updateMoney(to: unwrappedParam.getMoney())"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "henry"
        },
        "content": "            player.gameState \u003d self"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            players.append(player)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func initializePortTaxes(to amount: Int) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "henry"
        },
        "content": "        for node in map.getNodes() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let port \u003d node as? Port else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "henry"
        },
        "content": "            port.taxAmount.value \u003d amount"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func initializeNPCs(amount: Int) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let node \u003d map.getNodes().first else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.removeAllNpcs()"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "henry"
        },
        "content": "        for _ in 0..\u003camount {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.addGameObject(gameObject: NPC(node: node, maxTaxAmount: maxTaxAmount))"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func itemParameterTupleToItem(tuple: (ItemParameter, Int)) -\u003e GenericItem? {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemParameter \u003d itemParameters.first(where: { $0.value \u003d\u003d tuple.0 })?.value else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "henry"
        },
        "content": "        let item \u003d Item(itemParameter: itemParameter, quantity: tuple.1)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "henry"
        },
        "content": "        return item"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    struct PlayerWithType: Codable {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let type: PlayerType"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let player: GenericPlayer"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        init(from player: GenericPlayer) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if player is Player {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.type \u003d .player"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else if player is GameMaster {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.type \u003d .gameMaster"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                fatalError(\"Unsupported player type.\")"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.player \u003d player"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.type \u003d try container.decode(PlayerType.self, forKey: .type)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            switch self.type {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .gameMaster:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.player \u003d try container.decode(GameMaster.self, forKey: .player)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .player:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.player \u003d try container.decode(Player.self, forKey: .player)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(type, forKey: .type)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if let master \u003d player as? GameMaster {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                try container.encode(master, forKey: .player)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else if let player \u003d player as? Player {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                try container.encode(player, forKey: .player)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case type"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case player"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    enum PlayerType: String, Codable {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case gameMaster"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case player"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "henry"
        },
        "content": "// String convertible"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "henry"
        },
        "content": "extension GameState {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "henry"
        },
        "content": "    var description: String {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let string \u003d try? JSONEncoder().encode(self).hashed(.sha256) else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"\""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "henry"
        },
        "content": "        return string ?? \"\""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 126,
      "Yang Shuqi": 20,
      "Jason Chong": 125,
      "Yu Pei Henry": 1,
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/Game State/InfoMessage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  InfoMessage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "enum InfoMessage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    case pirates(turnsToBeingCaught: Int)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case caughtByPirates"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    case deficit(itemName: String, deficit: Int)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    case noOwner"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    case cannotAfford(upgrade: Upgrade)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    case upgradePurchased(upgrade: Upgrade)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    case duplicateUpgrade(type: String)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getTitle() -\u003e String{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .pirates, .caughtByPirates:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Pirates\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .deficit:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Item Deficit\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .noOwner:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Error\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .cannotAfford:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Insufficient Money\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .upgradePurchased:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Ship Upgrade Purchsed\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .duplicateUpgrade:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Duplicate Upgrade\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .pirates(let turnsToBeingCaught):"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"\\(turnsToBeingCaught) more turns to being caught!\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .caughtByPirates:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"You have been caught by pirates!. You lost all your cargo\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .deficit(let itemName, let deficit):"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"You have exhausted \\(itemName) and have a deficit\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "                + \" of \\(deficit) and paid twice the normal amount for it.\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .noOwner:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Ship has no owner!\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .cannotAfford(let upgrade):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"You do not have sufficient funds to buy \\(upgrade.name)!\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .upgradePurchased(let upgrade):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"You have purchased \\(upgrade.name)!\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .duplicateUpgrade(let type):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"You already have an upgrade of type \\\"\\(type)\\\"!\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 57
    }
  },
  {
    "path": "SailingThroughHistory/Game State/MovementError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  MovementError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "enum MovementError: Error {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    case unableToDock"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case invalidPort"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .unableToDock:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Ship is not located at a port for docking.\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .invalidPort:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Node is not a valid port.\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 23
    }
  },
  {
    "path": "SailingThroughHistory/Game State/PlayerAndTeam/GameMaster.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GameMaster.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class GameMaster: GenericPlayer {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var team: Team?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let isGameMaster \u003d true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var money: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var currentCargoWeight: Int \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weightCapacity: Int \u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var state: GameVariable\u003cPlayerState\u003e \u003d GameVariable(value: PlayerState.endTurn)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node: Node?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var hasRolled: Bool \u003d false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var deviceId: String \u003d \"\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var map: Map?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var gameState: GenericGameState?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    var playerShip: ShipAPI?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    var homeNode: Int \u003d 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let errorMessage \u003d \"GameMaster cannot perform normal actions\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    required init(name: String, deviceId: String) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        deviceId \u003d try values.decode(String.self, forKey: .deviceId)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(deviceId, forKey: .deviceId)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case deviceId"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addShipsToMap(map: Map) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(to amount: Int) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(by amount: Int) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canBuyUpgrade() -\u003e Bool {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToItems(with observer: @escaping (GenericPlayer, [GenericItem]) -\u003e Void) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToMoney(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn(speedMultiplier: Double, map: Map?) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buyUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return (false, nil)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "    func roll() -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "    func move(nodeId: Int) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPath(to nodeId: Int) -\u003e [Int] {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int) -\u003e [Node] {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPirateEncounterChance(at nodeId: Int) -\u003e Double {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemParameters() -\u003e [ItemParameter] {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemParameter: ItemParameter, quantity: Int) throws {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(item: GenericItem) throws {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemParameter: ItemParameter, quantity: Int) throws {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setTax(port: Port, amount: Int) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endTurn() -\u003e [InfoMessage] {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return []"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canTradeAt(port: Port) -\u003e Bool {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 123,
      "Jason Chong": 27
    }
  },
  {
    "path": "SailingThroughHistory/Game State/PlayerAndTeam/Player.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Player.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class Player: GenericPlayer {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let deviceId: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let isGameMaster \u003d false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var hasRolled: Bool \u003d false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var rollResult: Int \u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    let numDieSides \u003d 6"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    let money \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    let state \u003d GameVariable(value: PlayerState.endTurn)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var team: Team?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yu Pei Henry"
        },
        "content": "    var node: Node? {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        return map?.nodeIDPair[ship.nodeId]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.nodeIdVariable"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var map: Map? {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let map \u003d map else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "            self.ship.map \u003d map"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if canDock() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "                do {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "                    try dock()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "                } catch {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "                    fatalError(\"Unable to dock\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentCargoWeight: Int {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ship.currentCargoWeight"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var weightCapacity: Int {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ship.weightCapacity"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // for events"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    var playerShip: ShipAPI? {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return ship"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let homeNode: Int"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState?"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var ship: Ship"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var speedMultiplier \u003d 1.0"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var shipChassis: ShipChassis?"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var auxiliaryUpgrade: AuxiliaryUpgrade?"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(name: String, team: Team, map: Map, node: Node, itemsConsumed: [GenericItem],"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "         startingItems: [GenericItem], deviceId: String) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.team \u003d team"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.homeNode \u003d node.identifier"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship \u003d Ship(node: node, itemsConsumed: itemsConsumed)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.owner \u003d self"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.map \u003d map"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.items.value.append(contentsOf: startingItems)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        ship.updateCargoWeight(items: ship.items.value)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team \u003d try values.decode(Team.self, forKey: .team)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        money.value \u003d try values.decode(Int.self, forKey: .money)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship \u003d try values.decode(Ship.self, forKey: .ship)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        deviceId \u003d try values.decode(String.self, forKey: .deviceId)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        homeNode \u003d try values.decode(Int.self, forKey: .homeNode)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.owner \u003d self"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        ship.updateCargoWeight(items: ship.items.value)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try container.encode(team, forKey: .team)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(money.value, forKey: .money)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(ship, forKey: .ship)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(deviceId, forKey: .deviceId)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try container.encode(homeNode, forKey: .homeNode)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addShipsToMap(map: Map) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.map \u003d map"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn(speedMultiplier: Double, map: Map?) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.speedMultiplier \u003d speedMultiplier"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.map \u003d map"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        hasRolled \u003d false"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        state.value \u003d PlayerState.moving"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.startTurn()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func buyUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "        var shipAPI \u003d ship as ShipAPI"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.upgradeManager.installUpgrade(ship: \u0026shipAPI, upgrade: upgrade)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "    func roll() -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        if !hasRolled {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "            rollResult \u003d Int.random(in: 1...numDieSides)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "            hasRolled \u003d true"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "        return (rollResult, getNodesInRange(roll: rollResult).map({ $0.identifier }))"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func move(nodeId: Int) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let node \u003d map?.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "        var shipAPI \u003d ship as ShipAPI"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.navigationManager.move(ship: \u0026shipAPI, node: node)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPath(to nodeId: Int) -\u003e [Int] {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d map else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Player is not on a map\")"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let toNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"To node does not exist\")"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.node"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "            .getCompleteShortestPath(to: toNode, with: ship, map: map)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .map { $0.identifier }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int) -\u003e [Node] {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard map !\u003d nil else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Cannot check dock if map does not exist.\")"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.navigationManager.getNodesInRange(ship: ship, roll: roll, speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard map !\u003d nil else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Cannot check dock if map does not exist.\")"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.navigationManager.canDock(ship: ship)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "henry"
        },
        "content": "        var shipAPI \u003d ship as ShipAPI"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "henry"
        },
        "content": "        let port \u003d try ship.navigationManager.dock(ship: \u0026shipAPI)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        port.collectTax(from: self)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPirateEncounterChance(at nodeId: Int) -\u003e Double {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let map \u003d map,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            !(auxiliaryUpgrade is MercernaryUpgrade) else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "henry"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let position \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if position is Port {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var chance \u003d map.basePirateRate"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let pirateIslands \u003d map.getPiratesIslands()"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for (pirateNode, pirateIsland) in pirateIslands {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let distance \u003d pirateNode.getNumNodesTo(to: position, map: map),"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                distance \u003c\u003d pirateIsland.influence else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "henry"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            chance \u003d max(chance, pirateIsland.chance)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "henry"
        },
        "content": "        return chance"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemParameters() -\u003e [ItemParameter] {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.itemManager.getPurchasableItemParameters(ship: ship)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.itemManager.getMaxPurchaseAmount(ship: ship, itemParameter: itemParameter)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemParameter: ItemParameter, quantity: Int) throws {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "henry"
        },
        "content": "        try ship.itemManager.buyItem(ship: ship, itemParameter: itemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemParameter: ItemParameter, quantity: Int) throws {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "henry"
        },
        "content": "        try ship.itemManager.sell(ship: ship, itemParameter: itemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setTax(port: Port, amount: Int) throws {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "henry"
        },
        "content": "        let maxTaxAmount \u003d gameState?.maxTaxAmount ?? 0"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard amount \u003c\u003d maxTaxAmount else {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw PortAdminError.exceedMaxTax(maxTaxAmount: maxTaxAmount)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard amount \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw PortAdminError.belowMinTax(minTaxAmount: 0)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard team \u003d\u003d port.owner else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw PortAdminError.badPortOwnership"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        port.taxAmount.value \u003d amount"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func updateMoney(by amount: Int) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "henry"
        },
        "content": "        money.value +\u003d amount"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard money.value \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "henry"
        },
        "content": "            preventPlayerBankruptcy(amount: money.value)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(to amount: Int) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "henry"
        },
        "content": "        updateMoney(by: amount - money.value)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canBuyUpgrade() -\u003e Bool {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.isDocked"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func endTurn() -\u003e [InfoMessage] {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        hasRolled \u003d false"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if canDock() {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try? dock()"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ship.endTurn(speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func canTradeAt(port: Port) -\u003e Bool {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return ship.isDocked \u0026\u0026 ship.nodeId \u003d\u003d port.identifier"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case team"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "henry"
        },
        "content": "        case money"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "henry"
        },
        "content": "        case ship"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case deviceId"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case homeNode"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "henry"
        },
        "content": "// MARK: - subscribes"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Player {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToItems(with observer: @escaping (GenericPlayer, [GenericItem]) -\u003e Void) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        ship.subscribeToItems {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observer(self, $0)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        ship.subscribeToCargoWeight {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observer(self, $0)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        ship.subscribeToWeightCapcity {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observer(self, $0)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMoney(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        money.subscribe {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observer(self, $0)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func preventPlayerBankruptcy(amount: Int) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "henry"
        },
        "content": "        team?.updateMoney(by: -amount)"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "henry"
        },
        "content": "        money.value \u003d 0"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 162,
      "Yang Shuqi": 23,
      "Jason Chong": 95,
      "Yu Pei Henry": 1,
      "yuhongherald": 9
    }
  },
  {
    "path": "SailingThroughHistory/Game State/PlayerAndTeam/Team.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Team.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by ysq on 3/28/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class Team: GenericTeam {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var money: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var startingNode: Node? {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "            self.startId \u003d startingNode?.identifier"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    private(set) var startId: Int?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    static func \u003d\u003d (lhs: Team, rhs: Team) -\u003e Bool {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return lhs.name \u003d\u003d rhs.name"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(name: String) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        name \u003d try values.decode(String.self, forKey: .name)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        money.value \u003d try values.decode(Int.self, forKey: .money)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        startId \u003d try values.decode(Int?.self, forKey: .startId)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(name, forKey: .name)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(money.value, forKey: .money)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(startId, forKey: .startId)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(by amount: Int) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.money.value +\u003d amount"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    func start(from node: Node) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.startingNode \u003d node"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func checkRep() -\u003e Bool {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        if self.startingNode \u003d\u003d nil {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        return self.startingNode?.identifier \u003d\u003d self.startId"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        case name"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        case money"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        case startId"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Team: Hashable {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        hasher.combine(name)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 71
    }
  },
  {
    "path": "SailingThroughHistory/Game State/PortAdminError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PortAdminError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "enum PortAdminError: Error {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    case exceedMaxTax(maxTaxAmount: Int)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    case belowMinTax(minTaxAmount: Int)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    case badPortOwnership"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .exceedMaxTax(maxTaxAmount: let maxTaxAmount):"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Maximum tax you can set is \\(maxTaxAmount)\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .belowMinTax(minTaxAmount: let minTaxAmount):"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Minimum tax you can set is \\(minTaxAmount)\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .badPortOwnership:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Unable to set tax to port not owned by your team!\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 26
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/Ship.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Ship.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class Ship: ShipAPI, Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    private static let baseCapacity \u003d 100"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    let itemManager: ItemStorage \u003d ShipItemManager()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    let upgradeManager: Upgradable \u003d ShipUpgradeManager()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    let navigationManager: Navigatable \u003d ShipNavigationManager()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    let itemsConsumed: [GenericItem]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        return owner?.name ?? \"NPC Ship\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isChasedByPirates \u003d false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var turnsToBeingCaught \u003d 0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var shipChassis: ShipChassis? {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let newCapacity \u003d shipChassis?.getNewCargoCapacity(baseCapacity: Ship.baseCapacity) else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "            weightCapacity \u003d newCapacity"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    var auxiliaryUpgrade: AuxiliaryUpgrade?"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeId: Int {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nodeIdVariable.value"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "            nodeIdVariable.value \u003d newValue"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node: Node {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d map, let currentNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"Ship does not reside on any map or nodeId is invalid.\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        return currentNode"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    var currentCargoWeight: Int {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        return currentCargoWeightVariable.value"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weightCapacity: Int {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "            return weightCapacityVariable.value"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        set(value) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "            weightCapacityVariable.value \u003d value"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    let nodeIdVariable: GameVariable\u003cInt\u003e // public for events"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    weak var owner: GenericPlayer?"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    var items \u003d GameVariable\u003c[GenericItem]\u003e(value: []) // public for events"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isDocked \u003d false"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var currentCargoWeightVariable \u003d GameVariable\u003cInt\u003e(value: 0)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var weightCapacityVariable \u003d GameVariable\u003cInt\u003e(value: Ship.baseCapacity)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "    var shipObject: ShipUI?"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    weak var map: Map? {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let map \u003d map,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "                let shipUI \u003d shipObject else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            /// Move ship to its node"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.nodeId \u003d self.nodeIdVariable.value"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.addGameObject(gameObject: shipUI)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(node: Node, itemsConsumed: [GenericItem]) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.nodeIdVariable \u003d GameVariable(value: node.identifier)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemsConsumed \u003d itemsConsumed"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        subscribeToItems(with: updateCargoWeight)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        shipObject \u003d ShipUI(ship: self)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIdVariable \u003d GameVariable(value: try values.decode(Int.self, forKey: .nodeID))"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        itemsConsumed \u003d try values.decode([Item].self, forKey: .itemsConsumed)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        items.value \u003d try values.decode([Item].self, forKey: .items)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "        if values.contains(.auxiliaryUpgrade) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "            let auxiliaryType \u003d try values.decode(UpgradeType.self, forKey: .auxiliaryUpgrade)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "            auxiliaryUpgrade \u003d auxiliaryType.toUpgrade() as? AuxiliaryUpgrade"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        if values.contains(.shipChassis) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "            let shipChassisType \u003d try values.decode(UpgradeType.self, forKey: .shipChassis)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "            shipChassis \u003d shipChassisType.toUpgrade() as? ShipChassis"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        shipObject \u003d ShipUI(ship: self)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        updateCargoWeight(items: items.value)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "        subscribeToItems(with: updateCargoWeight)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemsConsumed \u003d itemsConsumed as? [Item],"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "            let shipItems \u003d items.value as? [Item] else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(nodeId, forKey: .nodeID)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(itemsConsumed, forKey: .itemsConsumed)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(shipItems, forKey: .items)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "        if let shipChassis \u003d shipChassis {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "            try container.encode(shipChassis.type, forKey: .shipChassis)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "        if let auxiliaryUpgrade \u003d auxiliaryUpgrade {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "            try container.encode(auxiliaryUpgrade.type, forKey: .auxiliaryUpgrade)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "        case nodeID"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemsConsumed"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "        case items"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "        case shipChassis"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "        case auxiliaryUpgrade"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "    // Movement"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endTurn(speedMultiplier: Double) -\u003e [InfoMessage] {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "        var messages \u003d [InfoMessage]()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "        if isChasedByPirates {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "            turnsToBeingCaught -\u003d 1"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "        if turnsToBeingCaught \u003e 0 {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "henry"
        },
        "content": "            messages.append(InfoMessage.pirates(turnsToBeingCaught: turnsToBeingCaught))"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if isChasedByPirates \u0026\u0026 turnsToBeingCaught \u003c\u003d 0 \u0026\u0026 !isDocked {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "            isChasedByPirates \u003d false"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "henry"
        },
        "content": "            turnsToBeingCaught \u003d 0"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "henry"
        },
        "content": "            items.value.removeAll()"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "henry"
        },
        "content": "            messages.append(InfoMessage.caughtByPirates)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "henry"
        },
        "content": "        for supply in itemsConsumed {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "henry"
        },
        "content": "            let parameter \u003d supply.itemParameter"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "henry"
        },
        "content": "            let deficit \u003d itemManager.removeItem(ship: self, by: parameter, with: Int(Double(supply.quantity) * speedMultiplier))"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "henry"
        },
        "content": "            if let owner \u003d owner,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "henry"
        },
        "content": "                let ports \u003d owner.map?.nodes.value.map({ $0 as? Port }).compactMap({ $0 }), deficit \u003e 0 {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "henry"
        },
        "content": "                owner.updateMoney(by: -deficit * 2 * parameter.getBuyValue(ports: ports))"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "henry"
        },
        "content": "                messages.append(InfoMessage.deficit(itemName: parameter.rawValue, deficit: deficit))"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        updateCargoWeight(items: self.items.value)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "henry"
        },
        "content": "        return messages"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "henry"
        },
        "content": "// MARK: - Observable values"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Ship {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToLocation(with observer: @escaping (Node) -\u003e Void) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "henry"
        },
        "content": "        nodeIdVariable.subscribe { [weak self] _ in"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let map \u003d self.map, let node \u003d map.nodeIDPair[self.nodeId] else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "henry"
        },
        "content": "                return"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "henry"
        },
        "content": "            observer(node)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToItems(with observer: @escaping ([GenericItem]) -\u003e Void) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "henry"
        },
        "content": "        items.subscribe(with: observer)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (Int) -\u003e Void) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "henry"
        },
        "content": "        currentCargoWeightVariable.subscribe(with: observer)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (Int) -\u003e Void) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "henry"
        },
        "content": "        weightCapacityVariable.subscribe(with: observer)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func updateCargoWeight(items: [GenericItem]) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "henry"
        },
        "content": "        var result \u003d 0"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "henry"
        },
        "content": "        for item in items {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "henry"
        },
        "content": "            result +\u003d item.weight"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "henry"
        },
        "content": "        currentCargoWeightVariable.value \u003d result"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "henry"
        },
        "content": "// MARK: - Affected by Pirates and Weather"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "henry"
        },
        "content": "extension Ship {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startPirateChase() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "henry"
        },
        "content": "        if isChasedByPirates {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "henry"
        },
        "content": "        isChasedByPirates \u003d true"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "henry"
        },
        "content": "        turnsToBeingCaught \u003d 4"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "henry"
        },
        "content": "        return auxiliaryUpgrade?.getWeatherModifier() ?? 1.0"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 211,
      "Yang Shuqi": 2,
      "Jason Chong": 4
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/ShipItemManager.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipItemManager.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipItemManager: ItemStorage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemParameters(ship: ShipAPI) -\u003e [ItemParameter] {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d ship.node as? Port, ship.isDocked else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "            return []"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return port.itemParametersSoldByPort"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(ship: ShipAPI, itemParameter: ItemParameter) -\u003e Int {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d ship.node as? Port, ship.isDocked,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "            let unitValue \u003d port.getBuyValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "                return 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        let value1 \u003d (ship.owner?.money.value ?? 0) / unitValue"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        let value2 \u003d getRemainingCapacity(ship: ship) / itemParameter.unitWeight"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return min(value1, value2)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buyItem(ship: ShipAPI, itemParameter: ItemParameter, quantity: Int) throws {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d ship.node as? Port, ship.isDocked else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw TradeItemError.notDocked"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        var item \u003d itemParameter.createItem(quantity: quantity)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let price \u003d item.getBuyValue(at: port) else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw TradeItemError.itemNotAvailable"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        let difference \u003d (ship.owner?.money.value ?? 0) - price"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard difference \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw TradeItemError.insufficientFunds(shortOf: -difference)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        try addItem(ship: ship, item: \u0026item)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.owner?.updateMoney(by: -price)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.updateCargoWeight(items: ship.items.value)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(ship: ShipAPI, itemParameter: ItemParameter, quantity: Int) throws {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d ship.node as? Port else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw TradeItemError.notDocked"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let value \u003d port.getSellValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw TradeItemError.itemNotAvailable"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        let deficit \u003d removeItem(ship: ship, by: itemParameter, with: quantity)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.owner?.updateMoney(by: (quantity - deficit) * value)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        if deficit \u003e 0 {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw TradeItemError.insufficientItems(shortOf: deficit, sold: quantity - deficit)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    func removeItem(ship: ShipAPI, by itemParameter: ItemParameter, with quantity: Int) -\u003e Int {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let index \u003d ship.items.value.firstIndex(where: { $0.itemParameter \u003d\u003d itemParameter }) else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "            return quantity"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        let deficit \u003d ship.items.value[index].remove(amount: quantity)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        if ship.items.value[index].quantity \u003d\u003d 0 {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship.items.value.remove(at: index)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship.items.value \u003d ship.items.value"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard deficit \u003c\u003d 0 else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "            return removeItem(ship: ship, by: itemParameter, with: deficit)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func getRemainingCapacity(ship: ShipAPI) -\u003e Int {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        return ship.weightCapacity - ship.currentCargoWeight"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func addItem(ship: ShipAPI, item: inout GenericItem) throws {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        let difference \u003d getRemainingCapacity(ship: ship) - item.weight"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard difference \u003e\u003d 0 else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw TradeItemError.insufficientCapacity(shortOf: -difference)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let sameType \u003d ship.items.value.first(where: { $0.itemParameter \u003d\u003d item.itemParameter }) else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship.items.value.append(item)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "        _ \u003d sameType.combine(with: \u0026item)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "        return"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 91
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/ShipNavigationManager.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipNavigationManager.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipNavigationManager: Navigatable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(ship: ShipAPI, roll: Int, speedMultiplier: Double) -\u003e [Node] {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d ship.map else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "            fatalError(\"Ship does not reside on map.\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        let startNode \u003d ship.node"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        let movement \u003d computeMovement(ship: ship, roll: roll, speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        let nodesFromStart \u003d startNode.getNodesInRange(ship: ship, range: movement, map: map)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        return nodesFromStart"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    func move(ship: inout ShipAPI, node: Node) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let currentFrame \u003d ship.shipObject?.frame.value else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.nodeId \u003d node.identifier"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        let nodeFrame \u003d node.frame"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        if node is Sea {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship.isDocked \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.shipObject?.frame.value \u003d currentFrame.movedTo("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "            originX: nodeFrame.originX, originY: nodeFrame.originY)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock(ship: ShipAPI) -\u003e Bool {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let map \u003d ship.map else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        return map.nodeIDPair[ship.nodeId] as? Port !\u003d nil"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock(ship: inout ShipAPI) throws -\u003e Port {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard canDock(ship: ship) else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw MovementError.unableToDock"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let port \u003d ship.map?.nodeIDPair[ship.nodeId] as? Port else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "            throw MovementError.invalidPort"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.isDocked \u003d true"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.isChasedByPirates \u003d false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.turnsToBeingCaught \u003d 0"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        return port"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func computeMovement(ship: ShipAPI, roll: Int, speedMultiplier: Double) -\u003e Double {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        var multiplier \u003d 1.0"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        multiplier \u003d applyMovementModifiers(ship: ship, to: multiplier)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Double(roll) * speedMultiplier * multiplier"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func applyMovementModifiers(ship: ShipAPI, to multiplier: Double) -\u003e Double {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        var result \u003d multiplier"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        result *\u003d ship.shipChassis?.getMovementModifier() ?? 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        result *\u003d ship.auxiliaryUpgrade?.getMovementModifier() ?? 1"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 68
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/ShipUI.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipUI.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipUI: GameObject {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let shipWidth: Double \u003d 50"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private(set) weak var ship: Ship?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(ship: Ship) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.ship \u003d ship"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        let frame \u003d Rect(originX: 0, originY: 0, height: shipWidth, width: shipWidth)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.subscribeToLocation(with: moveShip)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        try super.init(from: decoder)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func moveShip(to node: Node) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        let newX \u003d node.frame.originX"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        let newY \u003d node.frame.originY"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        let frame \u003d Rect(originX: newX, originY: newY, height: shipWidth, width: shipWidth)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.frame.value \u003d frame"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 32,
      "Yang Shuqi": 2
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Ship/ShipUpgradeManager.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipUpgradeManager.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipUpgradeManager: Upgradable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func installUpgrade(ship: inout ShipAPI, upgrade: Upgrade) -\u003e (Bool, InfoMessage?) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let owner \u003d ship.owner else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (false, InfoMessage.noOwner)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard owner.money.value \u003e\u003d upgrade.cost else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (false, InfoMessage.cannotAfford(upgrade: upgrade))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        if ship.shipChassis \u003d\u003d nil, let shipUpgrade \u003d upgrade as? ShipChassis {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner.updateMoney(by: -upgrade.cost)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship.shipChassis \u003d shipUpgrade"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (true, InfoMessage.upgradePurchased(upgrade: upgrade))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        if ship.auxiliaryUpgrade \u003d\u003d nil, let auxiliary \u003d upgrade as? AuxiliaryUpgrade {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner.updateMoney(by: -upgrade.cost)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship.auxiliaryUpgrade \u003d auxiliary"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (true, InfoMessage.upgradePurchased(upgrade: upgrade))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        if upgrade is ShipChassis {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (false, InfoMessage.duplicateUpgrade(type: \"Ship Upgrade\"))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        } else if upgrade is AuxiliaryUpgrade {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "            return (false, InfoMessage.duplicateUpgrade(type: \"Auxiliary Upgrade\"))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        return (false, nil)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 36
    }
  },
  {
    "path": "SailingThroughHistory/Game State/TradeItemError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  BuyItemError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 3/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum TradeItemError: Error {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case insufficientFunds(shortOf: Int)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case insufficientItems(shortOf: Int, sold: Int)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case insufficientCapacity(shortOf: Int)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case notDocked"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case itemNotAvailable"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    case purchaseSuccess(item: GenericItem)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    case sellSuccess(item: GenericItem)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    case sellTypeSuccess(itemParameter: ItemParameter, quantity: Int)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .insufficientFunds(let amount):"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Short of \\(amount) money!\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .insufficientItems(let amount, let sold):"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return \"Short of \\(amount) items! Only \\(sold) were sold.\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .insufficientCapacity(let amount):"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Short of \\(amount) weight capacity!\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .itemNotAvailable:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return \"Item not available at port!\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .notDocked:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return \"Player is not at a port!\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .purchaseSuccess(let item):"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"Item purchase of \\(item.name) with \\(item.quantity) quantity is successful!\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .sellSuccess(let item):"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"\\(item.name) with \\(item.quantity) quantity sold successfully!\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .sellTypeSuccess(let itemParameter, let quantity):"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "            return \"\\(itemParameter) with \\(quantity) quantity sold successfully!\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 9,
      "Jason Chong": 8,
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/AuxiliaryUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  AuxiliaryUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class AuxiliaryUpgrade: Upgrade {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Auxiliary Upgrade\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var cost: Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var type: UpgradeType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .baseAuxillary"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNewSuppliesConsumed(baseConsumption: [GenericItem]) -\u003e [GenericItem] {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseConsumption"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMovementModifier() -\u003e Double {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1.0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getWeatherModifier() -\u003e Double {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1.0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    func handleEvent() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 32,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/BiggerSailsUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  BiggerSailsUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class BiggerSailsUpgrade: AuxiliaryUpgrade {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var type: UpgradeType {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .biggerSails"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var name: String {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Bigger sails\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var cost: Int {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1000"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getWeatherModifier() -\u003e Double {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 22,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/BiggerShipUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  BiggerShipUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class BiggerShipUpgrade: ShipChassis {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var name: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Bigger Ship\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var cost: Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var type: UpgradeType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .biggerShip"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getNewCargoCapacity(baseCapacity: Int) -\u003e Int {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseCapacity * 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getMovementModifier() -\u003e Double {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0.8"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 25,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/FasterShipUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  FasterShipUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class FasterShipUpgrade: ShipChassis {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var name: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Faster Ship\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var cost: Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var type: UpgradeType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .fasterShip"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getNewCargoCapacity(baseCapacity: Int) -\u003e Int {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Int(Double(baseCapacity) * 0.7)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getMovementModifier() -\u003e Double {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 25,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/MercernaryUpgrade.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  MercernaryUpgrade.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class MercernaryUpgrade: AuxiliaryUpgrade {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var type: UpgradeType {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "         return .mercernary"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var name: String {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Mercernary\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    override var cost: Int {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1000"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func handleEvent() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        // TODO: Handle event to ignore pirate"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 22,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/ShipChassis.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipChassis.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipChassis: Upgrade {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        return \"Ship Chassis\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var cost: Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var type: UpgradeType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return .baseShip"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNewCargoCapacity(baseCapacity: Int) -\u003e Int {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseCapacity"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNewSuppliesConsumed(baseConsumption: [GenericItem]) -\u003e [GenericItem] {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseConsumption"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMovementModifier() -\u003e Double {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 1.0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 30,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Game State/Upgrades/UpgradeType.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UpgradeType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 10/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum UpgradeType: Int, Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case biggerShip"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case fasterShip"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case biggerSails"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case mercernary"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case baseShip"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case baseAuxillary"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func toUpgrade() -\u003e Upgrade {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .biggerShip:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return BiggerShipUpgrade()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .fasterShip:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return FasterShipUpgrade()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .biggerSails:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return BiggerSailsUpgrade()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .mercernary:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return MercernaryUpgrade()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .baseShip:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return ShipChassis()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .baseAuxillary:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return AuxiliaryUpgrade()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 33
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/EngineObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EngineObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// alternative to GameObject. Currently not used"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EngineObject: Hashable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Status {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case moving"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case grid"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case ghost"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case destroying"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case destroyed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func \u003d\u003d (lhs: EngineObject, rhs: EngineObject) -\u003e Bool {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return lhs.identifier \u003d\u003d rhs.identifier"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static func getIdentifier() -\u003e Int {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var identifier: Int \u003d 0 // dummy value"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        queue.sync {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while identifiers.contains(nextID) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                nextID +\u003d 1 // naive implementation"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifiers.insert(nextID)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifier \u003d nextID"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            nextID +\u003d 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return identifier"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var nextID: Int \u003d 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var identifiers \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static let queue \u003d DispatchQueue(label: \"EngineObjectQueue\", attributes: .concurrent)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let identifier: Int"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var position: Vector2F \u003d Vector2F.zero"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // rotation is from 0 tp 2pi radians"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var rotation: Float \u003d 0"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // scale not supported currently"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var scale: Vector2F \u003d Vector2F.one"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var velocity: Vector2F \u003d Vector2F.zero"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: Status \u003d Status.moving"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.identifier \u003d EngineObject.getIdentifier()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        hasher.combine(identifier)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    deinit {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let identifier \u003d self.identifier"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        EngineObject.queue.async(flags: .barrier) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            EngineObject.identifiers.remove(identifier)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 65
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatableNPC.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatableNPC.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatableNPC: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 20
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePirate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePirate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePirate: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 19
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePirateIsland.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePirateIsland.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// for MVP2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePirateIsland: GameObject, Updatable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 20
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePlayer.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePlayer.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePlayer: GameObject, Updatable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let location: GameVariable\u003cLocation\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(location: GameVariable\u003cLocation\u003e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.location \u003d location"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(image: Resources.Ships.british[0], frame: Rect())"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // Get movement speed of player, do multi-node movement"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // Check if endNode is dock"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        location.value \u003d Location(start: location.value.start,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                  end: location.value.end,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                  fractionToEnd: location.value.fractionToEnd"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                    + weeks * Double(GameConstants.weeksInMonth),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                  isDocked: location.value.isDocked)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return true // always moving"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // no pirate event currently"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 40
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePlayerTurn.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePlayerTurn.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePlayerTurn: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let gameState: GenericGameState"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let nextGameTime: GameTime"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var nextTurn: Bool \u003d false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.gameState \u003d gameState"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        nextGameTime \u003d gameState.gameTime"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // no graphical support yet"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if !nextTurn {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            gameState.getNextPlayer()?.endTurn() // Remove hotfix"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let nextPlayer \u003d gameState.getNextPlayer() else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if !nextTurn {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                nextTurn \u003d true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return GameEvent(eventType: EventType.informative(initiater: \"Player turn\"), timestamp: 0, message: nil)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        nextTurn \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return GameEvent(eventType: EventType.actionRequired(playerIdentifier: nextPlayer), timestamp: 0, message: nil)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 44
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatablePort.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatablePort.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatablePort: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 20
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatableTime.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatableTime.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatableTime: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var gameState: GenericGameState"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.gameState \u003d gameState"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.gameTime.addWeeks(weeks)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 30
    }
  },
  {
    "path": "SailingThroughHistory/GameEngine/Engine Objects/UpdatableWeather.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UpdatableSea.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UpdatableWeather: GameObject, Updatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var status: UpdatableStatus \u003d .add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func update(weeks: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvent() -\u003e GenericGameEvent? {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 27
    }
  },
  {
    "path": "SailingThroughHistory/Interface/ADT/NodePaths.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ObjectPaths.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// ADT used by ObjectsController to store paths that have been registered."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "struct NodePaths {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var paths \u003d [Node: [Path]]()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var allPaths: Set\u003cPath\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return Set(paths.values"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .flatMap { $0 })"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func checkRep() -\u003e Bool {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for path in allPaths {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if !paths[path.fromNode, default: []].contains(path) ||"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                !paths[path.toNode, default: []].contains(path) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Adds the given path"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter path: The path to add"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    mutating func add(path: Path) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if allPaths.contains(path) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[path.fromNode, default: []].append(path)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[path.toNode, default: []].append(path)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Removes the given path"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter path: The path to remove"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    mutating func remove(path: Path) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[path.toNode]?.removeAll { $0 \u003d\u003d path }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths[path.fromNode]?.removeAll { $0 \u003d\u003d path }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        assert(checkRep())"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Checks if the given path has already been added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter path: The path to check for"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: true if the path already exists in this ADT, false otherwise."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func contains(path: Path) -\u003e Bool {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return allPaths.contains(path)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 62
    }
  },
  {
    "path": "SailingThroughHistory/Interface/ADT/Rect.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Rect.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 24/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// ADT to represent the frame of a object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "struct Rect: Codable, Equatable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let originX: Double"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let originY: Double"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let height: Double"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let width: Double"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var midX: Double {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return originX + width / 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var midY: Double {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return originY + height / 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.originX \u003d 0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.originY \u003d 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.height \u003d 0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.width \u003d 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Constructor for rect with the given parameters."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - originX: The x-coordinate of the top left corner of this Rect."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - originY: The y-coordinate of the top left corner of this Rect."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - height: The height of this rect"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - width: The width of this rect"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(originX: Double, originY: Double, height: Double, width: Double) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.originX \u003d originX"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.originY \u003d originY"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.height \u003d height"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.width \u003d width"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Creates a new rect representing the resultant rect when this rect is moved to the input coordinates"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - originX: The new x-coordinate of the top left corner."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - originY: The new y-coordinate of the top left corner."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The new rect representing the resultant rect when this rect is moved to the input coordinates"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func movedTo(originX: Double, originY: Double) -\u003e Rect {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return Rect(originX: originX, originY: originY, height: height, width: width)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 52
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/AlertWindowController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  AlertWindowController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Controller for the alert window that shows a message and an acknowledge button which dismisses it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class AlertWindowController {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var delegate: AlertWindowDelegate?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var messageView: UILabel?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var buttonView: UIButton?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var wrapperView: UIView?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Constructor for a controller that uses the input views and delegate to notify when the user has acknoledged the"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// alert"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - delegate: The delegate to notify."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - wrapperView: The wrapper view for the alert."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - messageView: The view to display the text message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - buttonView: The button to acknoledge the message"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(delegate: AlertWindowDelegate, wrapperView: UIView, messageView: UILabel, buttonView: UIButton) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.delegate \u003d delegate"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.messageView \u003d messageView"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.buttonView \u003d buttonView"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        buttonView.addTarget(self, action: #selector(buttonAction), for: .touchUpInside)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.wrapperView \u003d wrapperView"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Shows the alert window with the given message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter message: The message to show in the window"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func show(withMessage message: String) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        wrapperView?.isHidden \u003d false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        messageView?.text \u003d message"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Hides the alert window."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func hide() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        wrapperView?.isHidden \u003d true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Called when the acknowledge button is pressed. Hides the window and notifies the delegate of this event."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter sender: The sender of this action."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @objc func buttonAction(sender: UIButton!) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        wrapperView?.isHidden \u003d true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        delegate?.acknoledgePressed()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 54
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/AlertWindowDelegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  AlertWindowDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Delegate for AlertWindowController. Notified when the user acknowledges the message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol AlertWindowDelegate: class {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func acknoledgePressed()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 12
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/AvailableUpgradesController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  AvailableUpgradesDataSource.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// The controller responsible for showing the available upgrades."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class AvailableUpgradesController: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier: String \u003d \"upgradesTableCell\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let header \u003d \"Available Upgrades\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let buttonLabel \u003d \"Buy\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let upgrades: [Upgrade]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var delegate: AvailableUpgradesControllerDelegate?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var enabled \u003d false"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Default constructor for the input available upgrades."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - delegate: Delegate for this controller for when player attempts to buy an upgrade"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - availableUpgrades: Available upgrades for the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(delegate: AvailableUpgradesControllerDelegate, availableUpgrades: [Upgrade]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.delegate \u003d delegate"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.upgrades \u003d availableUpgrades"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d tableView.dequeueReusableCell("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            withIdentifier: AvailableUpgradesController.reuseIdentifier, for: indexPath)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            as? UITradeTableCell"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let tableCell \u003d cell else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preconditionFailure(\"Cell does not inherit from UITradeTableCell.\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let upgrade \u003d upgrades[indexPath.row]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableCell.set(name: upgrade.name)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableCell.set(price: upgrade.cost)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableCell.set(buttonLabel: AvailableUpgradesController.buttonLabel)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableCell.buttonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.delegate?.buy(upgrade: upgrade)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return tableCell"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return 1"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return upgrades.count"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return AvailableUpgradesController.header"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 62
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/AvailableUpgradesControllerDelegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  AvailableUpgradesControllerDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Delegate for AvailableUpgradesController. Notified when the user wishes to buy an upgrade."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol AvailableUpgradesControllerDelegate: class {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func buy(upgrade: Upgrade)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 12
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/EventTableController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  EventTableController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// The controller for the event table used in the GM panel."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class EventTableController: NSObject {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier \u003d \"eventCell\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var events: [PresetEvent]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var tableView: UITableView?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var delegate: EventTableControllerDelegate?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Constructor for a controller that uses the input table view to show events, the input events and a delegate to"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// notify when the user chooses to toggle events."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - tableView: The table view to show the events on."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - events: The current events."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - delegate: The delegate to notify on user action."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(tableView: UITableView, events: [PresetEvent], delegate: EventTableControllerDelegate) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView \u003d tableView"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.events \u003d events"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.delegate \u003d delegate"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView?.reloadData()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Sets the events shown to the ones in the input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter events: The array of PresetEvent to show"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(events: [PresetEvent]) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.events \u003d events"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView?.reloadData()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension EventTableController: UITableViewDataSource {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return events.count"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let cell \u003d tableView.dequeueReusableCell("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            withIdentifier: EventTableController.reuseIdentifier, for: indexPath) as? UIEventTableCell else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                fatalError(\"Event cell is of the wrong type.\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let event \u003d events[indexPath.row]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let triggered \u003d event.active"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.set(label: event.displayName)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.set(buttonLabel: triggered ? \"Turn Off\" : \"Turn On\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.buttonPressedCallback \u003d {  [weak self] in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.delegate?.toggle(event: event, enabled: !triggered)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.tableView?.reloadData()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 63
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/EventTableControllerDelegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  EventTableControllerDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Delegate for EventsTableController. Notified when the user wishes to toggle an event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol EventTableControllerDelegate: class {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func toggle(event: PresetEvent, enabled: Bool)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 12
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/MainGameViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import CountdownLabel"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class MainGameViewController: UIViewController {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var gameAndBackgroundWrapper: UIView!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var scrollView: UIScrollView! {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            scrollView.delegate \u003d self"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            scrollView.maximumZoomScale \u003d 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var contextView: UIView!"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var backgroundImageView: UIImageView!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var gameArea: UIView!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portInformationView: UIView!"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portNameLabel: UILabel!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portOwnerLabel: UILabel!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portSetTaxButton: UIButtonRounded!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portItemsTableView: UITableView! {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            portItemsTableView.dataSource \u003d portItemsDataSource"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            portItemsTableView.delegate \u003d portItemsDataSource"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            portItemsTableView.reloadData()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portTaxLabel: UILabel!"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portQuantityLabel: UILabel!"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portQuantityAddButton: UIButton!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var portQuantityMinusButton: UIButton!"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var availableUpgradesTableView: UITableView! {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            availableUpgradesTableView.dataSource \u003d availableUpgradesDataSource"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            availableUpgradesTableView.reloadData()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerInfoWrapper: UIView!"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerMoneyLabel: UILabel!"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerShipCapacityLabel: UILabel!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerCargoWeightLabel: UILabel!"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerItemsTable: UITableView!"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var togglePlayerInfoButton: UIButtonRounded!"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var toggleTeamScoresButton: UIButtonRounded!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var teamScoresWrapper: UIBlurredBackgroundView!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var teamScoreTableView: UITableView!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var statusLabel: UILabel!"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var toggleActionPanelButton: UIButtonRounded!"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var diceResultLabel: UILabel!"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var actionPanelView: UIView!"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var countdownLabel: CountdownLabelView!"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var rollDiceButton: UIButtonRounded! {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            rollDiceButton.set(color: .red)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var messagesTableView: UITableView!"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var messagesView: UIBlurredBackgroundView!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var toggleMessagesButton: UIButtonRounded!"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var eventTableView: UITableView! {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            eventTableView.dataSource \u003d eventsController"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var gameMasterPanel: UIBlurredBackgroundView!"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet weak var acknoledgeButtonView: UIButtonRounded!"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet weak var alertMessageView: UILabel!"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet weak var alertPanel: UIBlurredBackgroundView!"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var currentTurnOwner: GenericPlayer?"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private lazy var objectsController: ObjectsViewController \u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        ObjectsViewController(view: gameArea, modelBounds: model.map.bounds, delegate: self)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var togglablePanels: [UIButton: UIView] \u003d ["
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        togglePlayerInfoButton: playerInfoWrapper,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        toggleTeamScoresButton: teamScoresWrapper,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        toggleMessagesButton: messagesView]"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var portItemsDataSource \u003d PortItemTableController(delegate: self)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var availableUpgradesDataSource \u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        AvailableUpgradesController(delegate: self,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                    availableUpgrades: model.availableUpgrades)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var teamScoresController \u003d TeamScoreTableController(tableView: teamScoreTableView,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                                     scores: Dictionary())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var messagesController \u003d MessagesTableController(tableView: messagesTableView)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var eventsController \u003d EventTableController(tableView: eventTableView, events: [],"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                             delegate: self)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var alertController \u003d AlertWindowController(delegate: self, wrapperView: alertPanel,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                             messageView: alertMessageView,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                             buttonView: acknoledgeButtonView)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var playerItemsDataSources \u003d [PlayerItemsTableController]()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let storage \u003d LocalStorage()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var selectedPort: Port?"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var alertQueue \u003d [UIAlertController]()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var model: GenericGameState {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let turnSystem \u003d turnSystem else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Turn system is nil\")"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return turnSystem.gameState"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var turnSystem: GenericTurnSystem?"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var network: RoomConnection?"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var backgroundData: Data?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var interfaceBounds: Rect {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return model.map.bounds"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        reInitScrollView()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        objectsController.subscribeToNodes(in: model.map)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        objectsController.subscribeToPaths(in: model.map)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        objectsController.subscribeToObjects(in: model.map)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        turnSystem?.subscribeToState(with: updateForState)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        subscribePlayerInformation(for: model.getPlayers())"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidAppear(_ animated: Bool) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        turnSystem?.startGame()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        view.window?.rootViewController \u003d self"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        network?.changeRemovalCallback { [weak self] in"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.performSegue(withIdentifier: \"gameToMain\", sender: nil)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.prepare(for: segue, sender: sender)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let mainMenuController \u003d segue.destination as? MainMenuViewController {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            mainMenuController.message \u003d \"You have been removed from the game.\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Update the interface for the given turn system state."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter state: The current TurnSystem state."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func updateForState(_ state: TurnSystemNetwork.State) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        DispatchQueue.main.async { [weak self] in"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let self \u003d self,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let turnSystem \u003d self.turnSystem else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.messagesController.set(messages: turnSystem.messages)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.statusLabel.text \u003d \"\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.alertController.hide()"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.playerTurnEnd()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.currentTurnOwner \u003d nil"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.objectsController.updatePathWeather()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.teamScoresController.set(scores: self.model.getTeamMoney())"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.gameMasterPanel.isHidden \u003d true"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            switch state {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .waitPlayerInput(let player):"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.alertController.show(withMessage: \"\\(player.name)\u0027s turn has started.\")"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .playerInput(let player, let endTime):"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.statusLabel.text \u003d \"\\(player.name)\u0027s Turn\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.currentTurnOwner \u003d player"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.playerTurnStart(player: player, endTime: endTime)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .ready:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                break"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .waitForTurnFinish:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.statusLabel.text \u003d \"Waiting for other players to finish...\""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .waitForStateUpdate:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                break"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .invalid:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                break"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .evaluateMoves:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                break"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            case .finished(let winner):"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert("
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                titled: \"\\(winner?.name ?? \"No one\") has won, Congratulations!\","
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                withMsg: \"\") { [weak self] in"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.performSegue(withIdentifier: \"gameToMain\", sender: nil)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Change the desired quantity for port trade actions."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter sender: The sender of the actions."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func portQuantityChange(_ sender: UIButton) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var quantity \u003d Int(portQuantityLabel.text ?? \"0\") ?? 0"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch sender {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case portQuantityAddButton:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            quantity +\u003d 1"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case portQuantityMinusButton:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            quantity -\u003d 1"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            break"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portQuantityLabel.text \u003d String(quantity)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Toggles the visibility of the panel that the sender is responsible for."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter sender: The sender of this action."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func togglePanelVisibility(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        togglablePanels[sender]?.isHidden.toggle()"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Toggles the visibility of the action panel, depending on who\u0027s turn it currently is. If it is a game master,"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// then the game master panel will be shown. If it is a normal player, the normal player\u0027s interface will be shown."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter sender: The sender of tihis action."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func toggleActionPanelVisibility(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentTurnOwner \u003d currentTurnOwner else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            actionPanelView.isHidden \u003d true"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            gameMasterPanel.isHidden \u003d true"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if currentTurnOwner.isGameMaster {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            gameMasterPanel.isHidden.toggle()"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            actionPanelView.isHidden \u003d true"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            actionPanelView.isHidden.toggle()"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            gameMasterPanel.isHidden \u003d true"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Hides the port information panel."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter sender: The sender of this action."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func hidePortInformationPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portInformationView.isHidden \u003d true"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Shows the set tax dialog for the user to change the tax of this port."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter sender: The sender of this action."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func setTaxButtonPressed(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let player \u003d currentTurnOwner,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let port \u003d selectedPort else {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let alert2 \u003d UIAlertController(title: \"Changing tax of \\(port.name)\","
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            message: \"Please enter the amount you wish to change the tax to.\","
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preferredStyle: .alert)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        alert2.addTextField { textField in"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            textField.keyboardType \u003d .numberPad"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let okAction \u003d UIAlertAction(title: \"OK\", style: .default) { [weak self] _ in"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let input \u003d alert2.textFields?.first?.text,"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let newTax \u003d Int(input) else {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\", withMsg: \"Only numbers are allowed.\")"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            var msg: String?"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                try self?.turnSystem?.setTax(for: port.identifier, to: newTax, by: player)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch PlayerActionError.invalidAction(let errorMsg) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                msg \u003d errorMsg"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                msg \u003d error.localizedDescription"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if let msg \u003d msg {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\", withMsg: msg)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        alert2.addAction(okAction)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Create Cancel button"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cancelAction \u003d UIAlertAction(title: \"Cancel\", style: .cancel) { _ in }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        alert2.addAction(cancelAction)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        present(alert2, animated: true, completion: nil)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Roll dice and show the ports that the player can travel to."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter sender: The sender of this action."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func rollDiceButtonPressed(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let randomLength \u003d 5"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        sender.isEnabled \u003d false"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        sender.set(color: .lightGray)"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for interval in 0...randomLength {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            DispatchQueue.main.asyncAfter(deadline: .now() + 0.01 * pow(Double(interval), 2)) { [weak self] in"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if interval \u003d\u003d randomLength {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    guard let currentTurnOwner \u003d self?.currentTurnOwner, let turnSystem \u003d self?.turnSystem else {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    do {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        let (result, nodes) \u003d try turnSystem.roll(for: currentTurnOwner)"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self?.diceResultLabel.text \u003d String(Int(result))"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self?.objectsController.make(choosableNodes: nodes)"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    } catch {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "henry"
        },
        "content": "                        let alert \u003d ControllerUtils.getGenericAlert("
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "henry"
        },
        "content": "                            titled: \"Error\", withMsg: error.localizedDescription)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self?.rollDiceButton.isEnabled \u003d true"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.diceResultLabel.text \u003d String(Int.random(in: 1...6))"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Called when game area is tapped, if a port is tapped, the information for that port is shown. If the current"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// player has rolled, then he will be shown a confirmation dialogue for moving to that node."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter sender: The sender of this action"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func onTapGameArea(_ sender: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let view \u003d gameArea.hitTest(sender.location(in: gameArea), with: nil)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let nodeView \u003d view as? NodeView else {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let nodeId \u003d objectsController.onTap(nodeView: nodeView)"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentTurnOwner \u003d currentTurnOwner else {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !currentTurnOwner.hasRolled || !currentTurnOwner.roll().1.contains(nodeId) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let name \u003d nodeView.node.name"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let alert \u003d ControllerUtils.getConfirmationAlert(title: \"Travel Confirmation\","
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                         desc: \"Are you sure you would like to travel to \\(name)?\","
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            okAction: { [weak self] in"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                do {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    try self?.turnSystem?.selectForMovement(nodeId: nodeId, by: currentTurnOwner)"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.turnSystem?.endTurn()"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                } catch {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\","
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                                withMsg: \"Please try again with a glowing node.\")"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }, cancelAction: nil)"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Called when the GM Panel\u0027s end turn button is pressed. Shows a confirmation alert for ending the turn."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter sender: The sender of this action."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func gmEndTurnPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let alert \u003d ControllerUtils.getConfirmationAlert(title: \"Confirmation\","
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                         desc: \"Are you sure you would like to end your turn?\","
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            okAction: { [weak self] in"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.turnSystem?.endTurn()"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }, cancelAction: nil)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Initializes the background view for the game with the appropriate image."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func initBackground() {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let backgroundData \u003d backgroundData,"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let gameAndBackgroundWrapper \u003d self.gameAndBackgroundWrapper else {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let image \u003d UIImage(data: backgroundData) else {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        backgroundImageView.contentMode \u003d .topLeft"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        backgroundImageView.frame \u003d CGRect(origin: CGPoint.zero, size: image.size)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameAndBackgroundWrapper.frame \u003d backgroundImageView.frame"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameAndBackgroundWrapper.subviews.forEach {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            $0.frame \u003d gameAndBackgroundWrapper.frame"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.contentSize \u003d image.size"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.minimumZoomScale \u003d max(view.frame.height/image.size.height, view.frame.width/image.size.width)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.setZoomScale(scrollView.minimumZoomScale, animated: false)"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        backgroundImageView.image \u003d image"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Reinitializes the scroll view to allow for size changes. The scroll view generated by the storyboard does not"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// allow for size changes easily."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func reInitScrollView() {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let oldScrollView \u003d self.scrollView else {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preconditionFailure(\"scrollView is nil.\")"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let scrollView \u003d UIScrollView(frame: self.scrollView.frame)"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.scrollView \u003d scrollView"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        view.insertSubview(scrollView, aboveSubview: oldScrollView)"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.topAnchor.constraint(equalTo: view.topAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.trailingAnchor.constraint(equalTo: view.trailingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.bottomAnchor.constraint(equalTo: view.bottomAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.leadingAnchor.constraint(equalTo: view.leadingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.updateConstraints()"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameAndBackgroundWrapper.removeFromSuperview()"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        scrollView.addSubview(gameAndBackgroundWrapper)"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Updates the player information panel for the input player."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter player: The current player."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func updatePlayerInformation(for player: GenericPlayer) {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let gold \u003d player.money.value"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cargo \u003d player.currentCargoWeight"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let capacity \u003d player.weightCapacity"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerMoneyLabel.text \u003d \"\\(InterfaceConstants.moneyPrefix)\\(gold)\""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerCargoWeightLabel.text \u003d \"\\(InterfaceConstants.cargoPrefix)\\(cargo)\""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerShipCapacityLabel.text \u003d \"\\(InterfaceConstants.capacityPrefix)\\(capacity)\""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerItemsDataSources.removeAll()"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let dataSource \u003d PlayerItemsTableController(player: player,"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                    tableView: playerItemsTable)"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerItemsDataSources.append(dataSource)"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscibe to player information changes for all players"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter players: The players in the game."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func subscribePlayerInformation(for players: [GenericPlayer]) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for player in players {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.subscribeToMoney { [weak self] player, gold in"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let currentTurnOwner \u003d self?.currentTurnOwner else {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if currentTurnOwner !\u003d player {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                DispatchQueue.main.async {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.playerMoneyLabel.text \u003d \"\\(InterfaceConstants.moneyPrefix)\\(gold)\""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.subscribeToCargoWeight { [weak self] player, cargo in"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let currentTurnOwner \u003d self?.currentTurnOwner else {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if currentTurnOwner !\u003d player {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                DispatchQueue.main.async {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.playerCargoWeightLabel.text \u003d \"\\(InterfaceConstants.cargoPrefix)\\(cargo)\""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            player.subscribeToWeightCapcity { [weak self] player, capacity in"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let currentTurnOwner \u003d self?.currentTurnOwner else {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if currentTurnOwner !\u003d player {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                DispatchQueue.main.async {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.playerShipCapacityLabel.text \u003d \"\\(InterfaceConstants.capacityPrefix)\\(capacity)\""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Shows appropriate interface when the player turn starts."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - player: The player who\u0027s turn has started."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - endTime: The ending time limit of the turn."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func playerTurnStart(player: GenericPlayer, endTime: TimeInterval) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let turnSystem \u003d turnSystem else {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Turn system is nil\")"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        func animatePlayerTurnStart() {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if player.isGameMaster {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                gameMasterPanel.isHidden \u003d false"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                playerInfoWrapper.isHidden \u003d true"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                togglePlayerInfoButton.isHidden \u003d true"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                eventsController.set(events: turnSystem.getPresetEvents())"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                gameMasterPanel.isHidden \u003d true"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                playerInfoWrapper.isHidden \u003d false"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                togglePlayerInfoButton.isHidden \u003d false"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                actionPanelView.isHidden \u003d false"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objectsController.makeShipGlow(for: player)"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                availableUpgradesDataSource.enabled \u003d player.canBuyUpgrade()"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                availableUpgradesTableView.reloadData()"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                toggleActionPanelButton.isHidden \u003d false"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                rollDiceButton.isEnabled \u003d true"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                rollDiceButton.set(color: .red)"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if let frame \u003d objectsController.getShipFrame(for: player) {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    scrollView.zoom(to: frame, animated: true)"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            countdownLabel.set(isHidden: false)"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            countdownLabel.setCountDownTime(seconds: endTime - Date().timeIntervalSince1970)"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            countdownLabel.start()"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        animatePlayerTurnStart()"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if player.isGameMaster {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        updatePlayerInformation(for: player)"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Hides the player turn related panels"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func playerTurnEnd() {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionPanelView.isHidden \u003d true"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        toggleActionPanelButton.isHidden \u003d true"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        countdownLabel.set(isHidden: true)"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portInformationView.isHidden \u003d true"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        availableUpgradesDataSource.enabled \u003d false"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        availableUpgradesTableView.reloadData()"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        objectsController.resetChoosableNodes()"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Get quantity selected for trade operations."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The trade quantity selected by the player."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func getTradeQuantity() -\u003e Int {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return Int(portQuantityLabel.text ?? \"0\") ?? 0"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension MainGameViewController: UIScrollViewDelegate {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func viewForZooming(in scrollView: UIScrollView) -\u003e UIView? {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return gameAndBackgroundWrapper"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension MainGameViewController: EventTableControllerDelegate {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func toggle(event: PresetEvent, enabled: Bool) {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentTurnOwner \u003d currentTurnOwner else {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var msg: String?"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try turnSystem?.toggle(eventId: event.identifier, enabled: enabled, by: currentTurnOwner)"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch PlayerActionError.invalidAction(let errorMsg) {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            msg \u003d errorMsg"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            msg \u003d error.localizedDescription"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let alert \u003d ControllerUtils.getGenericAlert(titled: msg \u003d\u003d nil ? \"Success\" : \"Error\","
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                    withMsg: msg ?? \"Successfully toggled\")"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension MainGameViewController: PortItemTableControllerDelegate {"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func portItemButtonPressed(action: PortItemButtonAction) {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let quantity \u003d getTradeQuantity()"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentTurnOwner \u003d currentTurnOwner else {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard quantity \u003e 0 else {"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Invalid Quantity\","
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"Please make sure the quantity is above 0.\")"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var errorMsg: String?"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            switch action {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "henry"
        },
        "content": "            case .playerBuy(let itemParameter):"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "henry"
        },
        "content": "                try turnSystem?.buy(itemParameter: itemParameter, quantity: quantity, by: currentTurnOwner)"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "henry"
        },
        "content": "            case .playerSell(let itemParameter):"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "henry"
        },
        "content": "                try turnSystem?.sell(itemParameter: itemParameter, quantity: quantity, by: currentTurnOwner)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch PlayerActionError.invalidAction(let msg) {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            errorMsg \u003d msg"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if let error \u003d error as? TradeItemError {"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                errorMsg \u003d error.getMessage()"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                errorMsg \u003d error.localizedDescription"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let errorMsg \u003d errorMsg {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\", withMsg: errorMsg)"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playerItemsTable.reloadData()"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension MainGameViewController: AlertWindowDelegate {"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func acknoledgePressed() {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        turnSystem?.acknowledgeTurnStart()"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension MainGameViewController: ObjectsViewControllerDelegate {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func showInformation(of port: Port) {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        selectedPort \u003d port"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portInformationView.isHidden \u003d false"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portTaxLabel.text \u003d \"\\(InterfaceConstants.taxPrefix)\\(port.taxAmount.value)\""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portNameLabel.text \u003d port.name"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portOwnerLabel.text \u003d port.owner?.name ?? InterfaceConstants.unownedPortOwner"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portItemsDataSource.didSelect(port: port, playerCanInteract:"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            currentTurnOwner?.canTradeAt(port: port) ?? false)"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portSetTaxButton.isHidden \u003d currentTurnOwner \u003d\u003d nil"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            || port.owner !\u003d currentTurnOwner?.team"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        portItemsTableView.reloadData()"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension MainGameViewController: AvailableUpgradesControllerDelegate {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func buy(upgrade: Upgrade) {"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let currentTurnOwner \u003d currentTurnOwner else {"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var msg: String?"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var title: String? \u003d \"Error\""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let result \u003d try turnSystem?.purchase(upgrade: upgrade, by: currentTurnOwner)"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "henry"
        },
        "content": "            msg \u003d result?.getMessage()"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "henry"
        },
        "content": "            title \u003d result?.getTitle()"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch PlayerActionError.invalidAction(let errorMsg) {"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            msg \u003d errorMsg"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            msg \u003d error.localizedDescription"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let msg \u003d msg, let title \u003d title {"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: title, withMsg: msg)"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 5,
      "henry": 8,
      "Jason Chong": 623,
      "yuhongherald": 3
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/MessagesTableController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  MessagesTableController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// The controller to show messages."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class MessagesTableController: NSObject {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var tableView: UITableView?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var messages \u003d [GameMessage]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Constructor for this controller which uses the input table view to show messages."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter tableView: The table view to show the messages on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(tableView: UITableView) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView \u003d tableView"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView.dataSource \u003d self"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        reloadMessages()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Changes the messages shown to those in the input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter messages: The new messages to show"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(messages: [GameMessage]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.messages \u003d messages"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        reloadMessages()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Updates the table view to show the currently stored messages."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func reloadMessages() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView?.reloadData()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let numRows \u003d tableView?.numberOfRows(inSection: 0) else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if numRows \u003e 0 {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableView?.scrollToRow(at: IndexPath(row: numRows - 1, section: 0), at: .bottom, animated: true)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Converts GameMessage to a string."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter gameMessage: The GameMessage ot convert"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The string representing the GameMessage"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func convertToString(from gameMessage: GameMessage) -\u003e String {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch gameMessage {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .playerAction(let name, let message):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return \"\\(name) \\(message)\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .event(let name, let message):"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return \"\\(name) \\(message)\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension MessagesTableController: UITableViewDataSource {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return messages.count"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d UITableViewCell(style: .default, reuseIdentifier: nil)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let message \u003d messages[indexPath.row]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.textLabel?.adjustsFontSizeToFitWidth \u003d true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.textLabel?.text \u003d convertToString(from: message)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 73
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/ObjectsViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ObjectsViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 21/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Controller responsible for nodes and objects on the map."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class ObjectsViewController {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var objectViews \u003d [GameObject: UIImageView]()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var delegate: ObjectsViewControllerDelegate?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var nodeViews \u003d [Int: NodeView]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var paths \u003d NodePaths()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var pathLayers \u003d [Path: CAShapeLayer]()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var objectQueues \u003d [GameObject: DispatchQueue]()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let view: UIView"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var pathWeathers \u003d [Path: UILightningView]()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var modelBounds: Rect"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(view: UIView, modelBounds: Rect, delegate: ObjectsViewControllerDelegate) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view \u003d view"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.delegate \u003d delegate"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.modelBounds \u003d modelBounds"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Called when a NodeView is tapped"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter nodeView: the view that has been tapped."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The identifier for the node of the nodeview that has been tapped."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func onTap(nodeView: NodeView) -\u003e Int {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if nodeView.node as? Port !\u003d nil {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            onTapPort(portView: nodeView)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return nodeView.node.identifier"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscibes to nodes on the given map."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter map: the map that the nodes reside on."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToNodes(in map: Map) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.subscribeToNodes { [weak self] nodes in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            var existingNodes \u003d Set(self.nodeViews.keys)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for node in nodes {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if self.nodeViews[node.identifier] !\u003d nil {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let nodeView \u003d NodeView(node: node)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                nodeView.isUserInteractionEnabled \u003d true"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                nodeView.frame \u003d CGRect.translatingFrom(otherBounds: self.modelBounds, otherFrame: node.frame,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        to: self.view.bounds)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.view.addSubview(nodeView)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.nodeViews[node.identifier] \u003d nodeView"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                existingNodes.remove(node.identifier)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for node in existingNodes {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.nodeViews[node]?.removeFromSuperview()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.nodeViews[node] \u003d nil"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscribes to paths on the given map."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter map: The map that the paths reside on."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToPaths(in map: Map) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.subscribeToPaths { [weak self] nodePaths in"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let mapPaths \u003d Set(nodePaths.values.flatMap { $0 })"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard var existingPaths \u003d self?.paths.allPaths else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for path in mapPaths {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if existingPaths.contains(path) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let fromFrame \u003d self?.nodeViews[path.fromNode.identifier]?.frame,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let toFrame \u003d self?.nodeViews[path.toNode.identifier]?.frame else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        continue"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.paths.add(path: path)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.addToView(path: path, from: fromFrame, to: toFrame, withDuration: 1)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                existingPaths.remove(path)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for path in existingPaths {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.paths.remove(path: path)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.pathLayers[path]?.removeFromSuperlayer()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.pathLayers[path] \u003d nil"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.pathWeathers[path]?.removeFromSuperview()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.pathWeathers[path] \u003d nil"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Signify that nodes that match the input identifiers are choosable by making their associated views glow."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter choosableNodes: The nodes to make choosable."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func make(choosableNodes: [Int]) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for nodeId in choosableNodes {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let view \u003d nodeViews[nodeId] else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            view.addGlow(colored: .yellow)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Resets any indication that the nodes are choosable."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func resetChoosableNodes() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodeViews.values"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .forEach {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                $0.removeGlow()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Adds the given path to view."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - path: The path to add."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - fromFrame: The frame where the path starts from."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - toFrame: The frame where the path ends."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - duration: The duration of the animation for drawing the path."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func addToView(path: Path, from fromFrame: CGRect,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                           to toFrame: CGRect, withDuration duration: TimeInterval) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let startPoint \u003d CGPoint(x: fromFrame.midX, y: fromFrame.midY)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let endPoint \u003d CGPoint(x: toFrame.midX, y: toFrame.midY)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let bezierPath \u003d UIBezierPath()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let layer \u003d CAShapeLayer()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        bezierPath.drawArrow(from: startPoint, to: endPoint)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.path \u003d bezierPath.cgPath"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.strokeColor \u003d UIColor.darkGray.cgColor"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.fillColor \u003d UIColor.clear.cgColor"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.lineWidth \u003d 4.0"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.lineDashPattern \u003d [10.0, 2.0]"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        view.layer.addSublayer(layer)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pathLayers[path] \u003d layer"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let animation \u003d CABasicAnimation(keyPath: \"strokeEnd\")"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        animation.fromValue \u003d 0.0"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        animation.toValue \u003d 1.0"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        animation.duration \u003d duration"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.add(animation, forKey: \"drawLineAnimation\")"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let weatherView \u003d UILightningViewFactory.getLightningView(frame: bezierPath.bounds)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        pathWeathers[path] \u003d weatherView"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        view.addSubview(weatherView)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        weatherView.initView()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscibes to objects on the input map and any changes in their position."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter map: The map that the objects reside on."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToObjects(in map: Map) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.subscribeToObjects { [weak self] in"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            var objects \u003d [GameObject](self.objectViews.keys)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for object in $0 {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.register(object: object)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objects.removeAll { $0 \u003d\u003d object }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for removedObject in objects {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let objectView \u003d self.objectViews[removedObject]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                objectView?.removeFromSuperview()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.objectViews[removedObject] \u003d nil"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Updates the views that represent each path with their current weather condition."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func updatePathWeather() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for path in paths.allPaths {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let isActive \u003d path"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .modifiers"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .map { $0.isActive }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .contains(true)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if isActive {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                pathWeathers[path]?.start()"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                pathWeathers[path]?.stop()"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            pathLayers[path]?.strokeColor \u003d (isActive ? UIColor.red : UIColor.darkGray).cgColor"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Make the input player\u0027s ship glow and bring it to the front of its superview."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter player: The player whose ship to make glow."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func makeShipGlow(for player: GenericPlayer) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for (object, view) in objectViews {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let ship \u003d object as? ShipUI else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "henry"
        },
        "content": "            if ship \u003d\u003d player.playerShip?.shipObject {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                view.addGlow(colored: .green)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.view.bringSubviewToFront(view)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                view.removeGlow()"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Gets the frame of the input player\u0027s ship."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter player: The player whose ship to find."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The frame of the player\u0027s ship, if any. If none is found, return nil"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getShipFrame(for player: GenericPlayer) -\u003e CGRect? {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for object in objectViews.keys {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let ship \u003d object as? ShipUI else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if ship \u003d\u003d player.playerShip?.shipObject {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return CGRect.translatingFrom(otherBounds: self.modelBounds, otherFrame: ship.frame.value,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                              to: self.view.bounds)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return nil"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Updates the input object\u0027s frame to the input frame."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - frame: The frame of the object in the model."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - object: The object whose frame to change."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func update(frame: Rect, for object: GameObject) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let objectView \u003d objectViews[object] else {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if objectQueues[object] \u003d\u003d nil {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let identifier \u003d String(UInt(bitPattern: ObjectIdentifier(object)))"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            objectQueues[object] \u003d DispatchQueue(label: identifier)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.objectQueues[object]?.async {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let semaphore \u003d DispatchSemaphore.init(value: 0)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            DispatchQueue.main.async { [weak self] in"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let self \u003d self else {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                UIView.animate(withDuration: 1, delay: 0, options: .curveLinear, animations: {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let newFrame \u003d CGRect.translatingFrom(otherBounds: self.modelBounds,"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                          otherFrame: frame, to: self.view.bounds)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    objectView.frame \u003d newFrame"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }, completion: { _ in semaphore.signal() })"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            semaphore.wait()"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Registers and shows the view for a given object"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter object: The GameObject to register."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func register(object: GameObject) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if self.objectViews[object] !\u003d nil {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let objectFrame \u003d CGRect.translatingFrom(otherBounds: self.modelBounds,"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                 otherFrame: object.frame.value, to: self.view.bounds)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let objectView \u003d UIImageView(frame: objectFrame)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        object.subscibeToFrame { [weak self] frame in"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.update(frame: frame, for: object)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let shipUI \u003d object as? ShipUI {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            objectView.image \u003d UIImage(named: Resources.Icon.ship)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let team \u003d shipUI.ship?.owner?.team {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let icon \u003d Icon(image: UIImage(named: Resources.Flag.of(team)))"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                icon.addIcon(to: objectView)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if object as? NPC !\u003d nil {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            objectView.image \u003d UIImage(named: Resources.Icon.npc)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.objectViews[object] \u003d objectView"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view.addSubview(objectView)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Called when a port has been tapped. Shows the information of the port on the delegate."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter portView: The NodeView of the port."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func onTapPort(portView: NodeView) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let port \u003d portView.node as? Port else {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        delegate?.showInformation(of: port)"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "Yang Shuqi": 9,
      "Jason Chong": 288
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/ObjectsViewControllerDelegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ObjectsViewControllerDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Delegate for ObjectsVIewController. Notified when it is appropriate to show the information of a given port."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol ObjectsViewControllerDelegate: class {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func showInformation(of port: Port)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 12
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/PlayerItemsTableController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PlayerItemsTableDataSource.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 23/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Controller for table that shows items belonging to a player."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class PlayerItemsTableController: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier \u003d \"playerItemsTableCell\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let header \u003d \"Items\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var tableView: UITableView?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let player: GenericPlayer"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var items \u003d [GenericItem]()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Constructor for PlayerItemsTableController for a given player and view to show it on."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - player: The player whose items to show"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - tableView: The view to show the items on"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(player: GenericPlayer, tableView: UITableView) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.player \u003d player"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView \u003d tableView"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView.dataSource \u003d self"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.subscribeToItems()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func subscribeToItems() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        player.subscribeToItems { [weak self] _, items in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.items \u003d items"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.tableView?.reloadData()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d UITableViewCell(style: .value1,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                   reuseIdentifier: PlayerItemsTableController.reuseIdentifier)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let item \u003d items[indexPath.row]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        cell.textLabel?.text \u003d \"\\(item.name) \\(item.itemParameter.unitWeight)\\(InterfaceConstants.weightSuffix)\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.detailTextLabel?.text \u003d \"\\(InterfaceConstants.itemQuantityPrefix)\\(item.quantity)\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return 1"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return items.count"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return PlayerItemsTableController.header"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "Jason Chong": 61
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/PortItemTableController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  MainGameViewController+TableViewDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Controller responsible for showing items that are sold/bought at a port."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class PortItemTableController: NSObject, UITableViewDataSource, UITableViewDelegate {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier: String \u003d \"itemsTableCell\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let defaultPrice: Int \u003d 100"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let buyButtonLabel \u003d \"Buy\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let sellButtonLabel \u003d \"Sell\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let boughtSection \u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let soldSection \u003d 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let numSections \u003d 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private weak var delegate: PortItemTableControllerDelegate?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var playerCanInteract \u003d false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var selectedPort: Port?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var itemParametersSoldByPort \u003d [ItemParameter]()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var itemParametersBoughtByPort \u003d [ItemParameter]()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Default constructor with delegate for when user attempts to trade at the port."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter delegate: Delegate for this controller."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(delegate: PortItemTableControllerDelegate) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.delegate \u003d delegate"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Called when user selects a port. Shows the items traded at this port along with their information."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - port: The port selected"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - playerCanInteract: Whether the user can trade at the port."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func didSelect(port: Port, playerCanInteract: Bool) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemParametersSoldByPort \u003d port.itemParametersSoldByPort"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemParametersBoughtByPort \u003d port.itemParametersBoughtByPort"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.playerCanInteract \u003d playerCanInteract"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.selectedPort \u003d port"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d tableView.dequeueReusableCell("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            withIdentifier: PortItemTableController.reuseIdentifier, for: indexPath)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            as? UITradeTableCell"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let tableCell \u003d cell else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preconditionFailure(\"Cell does not inherit from UITradeTableCell.\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let port \u003d selectedPort else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return tableCell"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        var array: [ItemParameter]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch indexPath.section {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableController.boughtSection:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "            array \u003d itemParametersBoughtByPort"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "            let itemParameter \u003d array[indexPath.row]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "            tableCell.set(price: port.getSellValue(of: itemParameter) ??"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                PortItemTableController.defaultPrice)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.set(buttonLabel: PortItemTableController.sellButtonLabel)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.buttonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "                self?.delegate?.portItemButtonPressed(action: .playerSell(itemParameter: itemParameter))"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableController.soldSection:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "            array \u003d itemParametersSoldByPort"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "            let itemParameter \u003d array[indexPath.row]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "            tableCell.set(price: port.getBuyValue(of: array[indexPath.row]) ??"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                PortItemTableController.defaultPrice)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.set(buttonLabel: PortItemTableController.buyButtonLabel)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.buttonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "                self?.delegate?.portItemButtonPressed(action: .playerBuy(itemParameter: itemParameter))"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            array \u003d []"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        let itemParameter \u003d array[indexPath.row]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        tableCell.set(name: \"\\(itemParameter.rawValue) \\(itemParameter.unitWeight)\\(InterfaceConstants.weightSuffix)\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if playerCanInteract {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.enable()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            tableCell.disable()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return tableCell"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return PortItemTableController.numSections"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch section {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableController.boughtSection:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "            return itemParametersBoughtByPort.count"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableController.soldSection:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "            return itemParametersSoldByPort.count"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return 0"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch section {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableController.boughtSection:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return \"Buying\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case PortItemTableController.soldSection:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return \"Selling\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 17,
      "Jason Chong": 100
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/PortItemTableControllerDelegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PortItemTableControllerDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 18/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Delegate for PortItemTableController, notified when a user wishes to trade at the port."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol PortItemTableControllerDelegate: class {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func portItemButtonPressed(action: PortItemButtonAction)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 12
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Controller/TeamScoreTableController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  TeamScoreTableController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Controller for showing team scores. i.e Total team money."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class TeamScoreTableController: NSObject {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let header \u003d \"Total Team Money:\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    weak var tableView: UITableView?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var scores: [(Team, Int)]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(tableView: UITableView, scores: [Team: Int]) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.tableView \u003d tableView"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.scores \u003d Array(scores)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView.dataSource \u003d self"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView.reloadData()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Updates the team scores displayed to the ones in the input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter scores: A dictionary of team as keys and their score as the associated value."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(scores: [Team: Int]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.scores \u003d Array(scores)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        tableView?.reloadData()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension TeamScoreTableController: UITableViewDataSource {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return scores.count"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let cell \u003d UITableViewCell(style: .default, reuseIdentifier: nil)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let score \u003d scores[indexPath.row]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.textLabel?.text \u003d \"\\(score.0.name): \\(String(score.1))\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return TeamScoreTableController.header"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 49
    }
  },
  {
    "path": "SailingThroughHistory/Interface/ControllerUtils.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ControllerUtils.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  BubbleBlaster"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/2/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 nus.cs3217.a0164721j. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Shared general utilities for controller component."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum ControllerUtils {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Generates a controller for a confirmation alert."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - title: The title of the alert."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - desc: The description to show in the alert."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - okAction: The function to call if ok is pressed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - cancelAction: The function to call if cancel is pressed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The generated controller."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getConfirmationAlert(title: String, desc: String, okAction: (() -\u003e Void)?, cancelAction: (() -\u003e Void)?)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        -\u003e UIAlertController {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let confirmationAlert \u003d UIAlertController(title: title, message: desc, preferredStyle: .alert)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            confirmationAlert.addAction(UIAlertAction(title: \"Ok\", style: .default, handler: { _ in okAction?()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            confirmationAlert.addAction(UIAlertAction(title: \"Cancel\", style: .cancel, handler: { _ in cancelAction?()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return confirmationAlert"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Generates a controller for a textfield alert."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - title: The title of the alert."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - desc: The description to show in the alert."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - textPlaceHolder: The placeholder for the textfield."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - okAction: The function to call if ok is pressed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - cancelAction: The function to call if cancel is pressed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Returns: The generated controller."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func getTextfieldAlert(title: String, desc: String, textPlaceHolder: String,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                  okAction: ((String) -\u003e Void)?, cancelAction: (() -\u003e Void)?) -\u003e UIAlertController {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let textfieldAlert \u003d UIAlertController(title: title, message: desc, preferredStyle: .alert)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        textfieldAlert.addAction(UIAlertAction(title: \"Ok\", style: .default,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                               handler: { _ in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                   guard let name \u003d textfieldAlert.textFields?.first?.text else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                       return"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                   }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                               okAction?(name)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        textfieldAlert.addAction(UIAlertAction(title: \"Cancel\", style: .cancel, handler: { _ in cancelAction?()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        textfieldAlert.addTextField { (textFiled: UITextField) in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textFiled.keyboardAppearance \u003d .default"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textFiled.keyboardType \u003d .default"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textFiled.placeholder \u003d textPlaceHolder"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textFiled.clearButtonMode \u003d .whileEditing"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return textfieldAlert"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Generates a controller for a generic alert."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - title: The title of the alert."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - message: The description to show in the alert."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The generated controller."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getGenericAlert(titled title: String, withMsg message: String) -\u003e UIAlertController {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return getGenericAlert(titled: title, withMsg: message, action: nil)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Generates a controller for a generic alert."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - title: The title of the alert."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - message: The description to show in the alert."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - action: The function to call when ok is pressed."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The generated controller."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getGenericAlert(titled title: String, withMsg message: String, action: (() -\u003e Void)?)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        -\u003e UIAlertController {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d UIAlertController(title: title, message: message, preferredStyle: .alert)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            alert.addAction(UIAlertAction(title: \"OK\", style: .default) { _ in action?() })"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return alert"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 34,
      "Jason Chong": 56
    }
  },
  {
    "path": "SailingThroughHistory/Interface/InterfaceConstants.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  InterfaceConstants.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum InterfaceConstants {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let moneyPrefix \u003d \"Gold: \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let cargoPrefix \u003d \"Current Cargo Weight: \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let capacityPrefix \u003d \"Weight Capacity: \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let itemQuantityPrefix \u003d \"x\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let waitingForOthersMsg \u003d \"Waiting for other players to finish.\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let defaultAnimationDuration: TimeInterval \u003d 0.25"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let unownedPortOwner \u003d \"Neutral\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let taxPrefix \u003d \"Tax: \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let weightSuffix \u003d \"kg\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 21
    }
  },
  {
    "path": "SailingThroughHistory/Interface/Path.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Path.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by Jason Chong on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "struct Path: Hashable, Codable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let fromObject: GameObject"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let toObject: GameObject"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(from fromNode: GameObject, to toNode: GameObject) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        fromObject \u003d fromNode"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        toObject \u003d toNode"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 19
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/CountdownLabelView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  CountdownLabelView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import CountdownLabel"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@objc protocol CountdownLabelView: class {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(isHidden: Bool)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setCountDownTime(seconds: TimeInterval)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func start()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension CountdownLabel: CountdownLabelView {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @objc func set(isHidden: Bool) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.isHidden \u003d isHidden"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @objc func start() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.animationType \u003d .Burn"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.start(completion: nil)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @objc func setCountDownTime(seconds: TimeInterval) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// This is due to a bug in the library where the label is minutes"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// but the input is taken as seconds"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.setCountDownTime(minutes: seconds)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 32
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/PortItemButtonAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PortItemButtonAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum PortItemButtonAction {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "    case playerBuy(itemParameter: ItemParameter)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "    case playerSell(itemParameter: ItemParameter)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 2,
      "Jason Chong": 10
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/PortItemTableCellDelegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PortItemTableCellDelegate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol PortItemTableCellDelegate: class {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func portItemButtonPressed(action: PortItemButtonAction)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 11
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIBezierPath+Arrow.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIBezierPath+Arrow.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension UIBezierPath {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    func drawArrow(from start: CGPoint, to end: CGPoint,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "                   arrowAngle: CGFloat \u003d CGFloat.pi / 6, headLength: CGFloat \u003d 30) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.move(to: start)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.addLine(to: end)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let startEndAngle \u003d atan((end.y - start.y) / (end.x - start.x))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            + ((end.x - start.x) \u003c 0 ? CGFloat(Double.pi) : 0)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let arrowLine1 \u003d CGPoint(x: end.x + headLength * cos(CGFloat(Double.pi) - startEndAngle + arrowAngle),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                 y: end.y - headLength * sin(CGFloat(Double.pi) - startEndAngle + arrowAngle))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let arrowLine2 \u003d CGPoint(x: end.x + headLength * cos(CGFloat(Double.pi) - startEndAngle - arrowAngle),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                 y: end.y - headLength * sin(CGFloat(Double.pi) - startEndAngle - arrowAngle))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.addLine(to: arrowLine1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.move(to: end)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.addLine(to: arrowLine2)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 2,
      "Jason Chong": 25
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIBlurredBackgroundView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIBlurredBackgroundView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 21/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class UIBlurredBackgroundView: UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurBackground()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurBackground()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func blurBackground() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.backgroundColor \u003d UIColor.clear"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let blurEffect \u003d UIBlurEffect(style: .extraLight)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let blurView \u003d UIVisualEffectView(effect: blurEffect)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurView.autoresizingMask \u003d [.flexibleWidth, .flexibleHeight]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurView.frame \u003d self.bounds"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        blurView.alpha \u003d 0.7"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.insertSubview(blurView, at: 0)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 31
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIButtonRounded.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIButtonRounded.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class UIButtonRounded: UIButton {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let contentEdgeInsets \u003d UIEdgeInsets(top: 5, left: 40, bottom: 5, right: 0)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let titleEdgeInsets \u003d UIEdgeInsets(top: 0, left: -20, bottom: 0, right: 20)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let borderWidth: CGFloat \u003d 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let cornerRadius: CGFloat \u003d 20"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let backgroundColor \u003d UIColor.white"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let defaultColor \u003d UIColor(red: 0.10, green: 0.47, blue: 0.98, alpha: 1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override init(frame: CGRect) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(frame: frame)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roundEdges()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(coder: aDecoder)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roundEdges()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func roundEdges() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.cornerRadius \u003d UIButtonRounded.cornerRadius"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        borderWidth \u003d UIButtonRounded.borderWidth"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        borderColor \u003d UIButtonRounded.defaultColor"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        contentEdgeInsets \u003d UIButtonRounded.contentEdgeInsets"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        titleEdgeInsets \u003d UIButtonRounded.titleEdgeInsets"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        backgroundColor \u003d UIButtonRounded.backgroundColor"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        titleLabel?.adjustsFontSizeToFitWidth \u003d true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(color: UIColor) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        setTitleColor(color, for: .normal)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        borderColor \u003d color"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 1,
      "Jason Chong": 42
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIEventTableCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIEventTableCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 15/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class UIEventTableCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var labelView: UILabel! {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            labelView.adjustsFontSizeToFitWidth \u003d true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var buttonView: UIButtonRounded!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var buttonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(label: String) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        labelView.text \u003d label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(buttonLabel: String) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        buttonView.setTitle(buttonLabel, for: .normal)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func buttonPressed(_ sender: UIButtonRounded) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        buttonPressedCallback?()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 31
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UILightningView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UILightningView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 12/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import URWeatherView"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol UILightningView: UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func initView()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func stop()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func start()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension URWeatherView: UILightningView {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func start() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let option \u003d UREffectLightningOption(lineThickness: 100)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.isUserInteractionEnabled \u003d false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let times \u003d [0.1, 0.103, 0.14,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.17, 0.173, 0.20,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.35, 0.353, 0.38,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.385, 0.388, 0.415,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.54, 0.543, 0.57,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.69, 0.693, 0.72,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.74, 0.743, 0.77,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     0.93, 0.933, 0.96]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let lightningShowTimes \u003d [times[0] - 0.005, times[4] - 0.005, times[7] - 0.005, times[10] - 0.005,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                  times[13] - 0.005, times[16] - 0.005, times[19] - 0.005, times[22] - 0.005]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.startWeatherScene(.lightning, duration: 6.0, showTimes: lightningShowTimes,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                               userInfo: [URWeatherKeyLightningOption: option])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func initView() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0.0)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let blank \u003d UIGraphicsGetImageFromCurrentImageContext() else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        UIGraphicsEndImageContext()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.initView(mainWeatherImage: blank, backgroundImage: blank)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 43
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UILightningViewFactory.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UILightningViewFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 12/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import URWeatherView"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum UILightningViewFactory {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getLightningView(frame: CGRect) -\u003e UILightningView {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return URWeatherView(frame: frame)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 15
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UITradeTableCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIPortItemTableCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 22/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class UITradeTableCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var itemNameLabel: UILabel! {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            itemNameLabel.adjustsFontSizeToFitWidth \u003d true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var itemPriceLabel: UILabel!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var actionButton: UIButtonRounded!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var buttonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func buttonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        buttonPressedCallback?()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(name: String) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        itemNameLabel.text \u003d name"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(price: Int) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        itemPriceLabel.text \u003d String(price)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(buttonLabel: String) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.setTitle(buttonLabel, for: .normal)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func enable() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.isEnabled \u003d true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.set(color: UIColor.blue)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func disable() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.isEnabled \u003d false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionButton.set(color: UIColor.lightGray)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 48
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/UIVIew+Border.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIView+Border.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  BubbleBlaster"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/2/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 nus.cs3217.a0164721j. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Extension for changing border settings in interface builder."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Used only for convenience."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// @IBInspectable Code from : https://stackoverflow.com/questions/28854469/change-uibutton-bordercolor-in-storyboard"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension UIView {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBInspectable var cornerRadius: CGFloat {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return layer.cornerRadius"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            layer.cornerRadius \u003d newValue"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            layer.masksToBounds \u003d newValue \u003e 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBInspectable var borderWidth: CGFloat {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return layer.borderWidth"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            layer.borderWidth \u003d newValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBInspectable var borderColor: UIColor? {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return UIColor(cgColor: layer.borderColor!)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            layer.borderColor \u003d newValue?.cgColor"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 42
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/View+SpecialEffects.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  View+SpecialEffects.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  GameEngine"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 17/2/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 nus.cs3217.a0164721j. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension UIView {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Adds a glow of the input color to the view."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter color: `UIColor` of the glow."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func addGlow(colored color: UIColor) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowOffset \u003d .zero"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowColor \u003d color.cgColor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowRadius \u003d 20"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowOpacity \u003d 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowPath \u003d UIBezierPath(rect: bounds).cgPath"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Removes glow from the view."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter color: `UIColor` of the glow."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func removeGlow() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        layer.shadowOpacity \u003d 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func fadeOutAndRemove(withDuration duration: TimeInterval, completion callback: @escaping () -\u003e Void) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        UIView.animate(withDuration: duration, animations: { [weak self] in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.alpha \u003d 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }, completion: { [weak self] _ in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.removeFromSuperview()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 37
    }
  },
  {
    "path": "SailingThroughHistory/Interface/View/View+Translate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Taken from Jason\u0027s PS4"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  UIView+Translate.swift"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  GameEngine"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 19/2/19."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 nus.cs3217.a0164721j. All rights reserved."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension UIView {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Transforms the frame of this view to match the given frame, which is of a different scale due to being in the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// given other bound. This view will be scaled and transformed to have a frame equivalent of the given frame."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - otherBounds: The bounds that contain the other frame."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - otherFrame: The frame to match."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func translateFromDifferentScale(otherBounds: Rect, otherFrame: Rect) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let bounds \u003d superview?.bounds else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let otherBoundsCg \u003d CGRect(fromRect: otherBounds)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let otherFrameCg \u003d CGRect(fromRect: otherFrame)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let ratio \u003d min(bounds.width / otherBoundsCg.width, bounds.height / otherBoundsCg.height)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Transforms the size of the view to match."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        transform \u003d  transform.concatenating("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(scaleX: 1 / frame.width, y: 1 / frame.height))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        transform \u003d transform.concatenating("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(scaleX: ratio * otherFrameCg.width, y: ratio * otherFrameCg.height))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Changes the position of the view to match."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        transform \u003d transform.concatenating("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(translationX: -frame.origin.x, y: -frame.origin.y))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        transform \u003d transform.concatenating("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            CGAffineTransform(translationX: ratio * otherFrameCg.origin.x, y: ratio * otherFrameCg.origin.y))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 40
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/API/GenericItem.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericItem.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Protocol for items\u0027 attributes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol GenericItem: Codable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Display name of the item"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// ItemParameter of the item, i.e. buy/sell value, unit weight"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParameter: ItemParameter { get }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Total weight of the item"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weight: Int { get }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Quantity of the item"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var quantity: Int { get set }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Combine quantities of items with the same ItemParameter"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    func combine(with item: inout GenericItem) -\u003e Bool"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Decrease the quantity of the item by amount"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    func remove(amount: Int) -\u003e Int"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Get import price of the item at the port"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(at port: Port) -\u003e Int?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Get export price of the item at the port"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(at port: Port) -\u003e Int?"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "func \u003d\u003d (lhs: GenericItem, rhs: GenericItem?) -\u003e Bool {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    return lhs.itemParameter \u003d\u003d rhs?.itemParameter \u0026\u0026 lhs.quantity \u003d\u003d rhs?.quantity"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 25,
      "Yang Shuqi": 11
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/API/GenericLevel.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericLevel.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 17/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Protocol for setting of initial state of the game."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "protocol GenericLevel {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Maximum tax of a port."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var maxTaxAmount: Int { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Default tax of a port."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var defaultTaxAmount: Int { get }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Upgrades that players can buy for their ship. Upgard types are predefined."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var upgrades: [Upgrade] { get }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Initial state of players. Including the initial amount of money."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var playerParameters: [TeamParameter] { get set }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// States of items. Including buy and sell price at each port, unit weight, and item types."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var itemParameters: [ItemParameter] { get set }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Teams of the game level."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var teams: [Team] { get set }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// The number of turns to end the game."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var numOfTurn: Int { get set }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Time limit for each turn, i.e. after exhausting time limit, the next turn will start automatically."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var timeLimit: Int { get set }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Map for the level. Including nodes, paths and other position related information."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var map: Map { get }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(map: Map, teams: [String])"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 16,
      "Yang Shuqi": 18,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/DetailEditTableViewController + Delegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  File.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/26/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension DetailEditTableViewController: UITableViewDelegate, UITableViewDataSource {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return data.count"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return data[section].count"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let item \u003d data[indexPath.section][indexPath.item]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch item.type {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .player:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let cell \u003d tableView.dequeueReusableCell("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    withIdentifier: \"playerIdentifier\") as? TeamTableViewCell else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"The dequeued cell is not an instance of PlayerTableViewCell.\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.item \u003d item"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .turn:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let cell \u003d tableView.dequeueReusableCell("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "                    withIdentifier: \"turnIdentifier\") as? TurnTableViewCell else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"The dequeued cell is not an instance of TurnTableViewCell.\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.item \u003d item"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -\u003e String? {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return data[section][0].sectionTitle"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension DetailEditTableViewController: UITextFieldDelegate {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                   replacementString string: String) -\u003e Bool {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch textField.tag {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case FieldType.number.rawValue:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let invalidCharacters \u003d CharacterSet(charactersIn: \"0123456789\").inverted"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return string.rangeOfCharacter(from: invalidCharacters) \u003d\u003d nil"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 54,
      "henry": 3
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/DetailEditTableViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  DetailEditTable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class DetailEditTableViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var tableView: UITableView!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var data \u003d [[GameParameterItem]]()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var numOfTurnMsg \u003d \"Number of Turn: \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.navigationController?.isToolbarHidden \u003d false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func cancelPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func confirmPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for cell in tableView.visibleCells {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let indexPath \u003d tableView.indexPath(for: cell) else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            switch data[indexPath.section][indexPath.item].type {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .player:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let castedCell \u003d cell as? TeamTableViewCell,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    let item \u003d castedCell.item as? TeamParameterItem else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if let name \u003d castedCell.nameLabel.text,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    let moneyText \u003d castedCell.moneyField.text {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    item.playerParameter.set(money: Int(moneyText))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case .turn:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let castedCell \u003d cell as? TurnTableViewCell,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    let item \u003d castedCell.item as? TurnParameterItem else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let inputText \u003d castedCell.textField.text else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let input \u003d Int(inputText) else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                switch castedCell.label.text {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                case numOfTurnMsg:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    item.game.numOfTurn \u003d input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func initWith(game: GameParameter) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.data.append(game.playerParameters.map {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            TeamParameterItem(playerParameter: $0)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.data.append([TurnParameterItem(label: numOfTurnMsg, game: game, input: game.numOfTurn)])"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 75,
      "henry": 1
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/EditPanelViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  EdiePanelViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/18/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol EditPanelDelegateProtocol: class {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var gameParameter: GameParameter { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func clicked(_ select: EditMode)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addMapBackground(_ image: UIImage)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class EditPanelViewController: UIViewController, UIImagePickerControllerDelegate, UINavigationControllerDelegate {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    weak var delegate: EditPanelDelegateProtocol?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addMapPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let imagePicker \u003d UIImagePickerController()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        imagePicker.delegate \u003d self"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        imagePicker.sourceType \u003d .photoLibrary"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        imagePicker.allowsEditing \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.present(imagePicker, animated:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            true)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addPiratePressed(_ sender: Any) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.pirate)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addWeatherPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.weather)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addPortPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.port)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addSeaPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.sea)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func addPathPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.path)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func editParamPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let storyboard \u003d UIStoryboard(name: \"Main\", bundle: nil)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let controller \u003d storyboard.instantiateViewController(withIdentifier: \"playerTable\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            as? DetailEditTableViewController else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Controller is not found or cannot be casted into DetailEditTableViewController.\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let unwrappedGame \u003d self.delegate?.gameParameter else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            fatalError(\"EditPanelDelegateProtocol not set.\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.initWith(game: unwrappedGame)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.show(controller, sender: nil)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func editItemPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.delegate?.clicked(.item)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func removePressed(_ sender: Any) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        delegate?.clicked(.erase)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func imagePickerController(_ picker: UIImagePickerController,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                               didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey: Any]) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let image \u003d info[.originalImage] as? UIImage {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            delegate?.addMapBackground(image)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 84,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/GalleryViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  GallaryViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/22/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/// Protocol for delegate of gallery."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol GalleryViewDelegateProtocol: class {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Load decoded gameParameter."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func load(_ gameParameter: GameParameter)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class GalleryViewController: UIViewController {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var storage \u003d LocalStorage()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var levelNames: [String] \u003d []"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    weak var delegate: GalleryViewDelegateProtocol?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var selectedCallback: ((GameParameter) -\u003e Void)?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var collectionView: UICollectionView!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        levelNames \u003d storage.getAllRecords()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func cancelPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.collectionView.removeFromSuperview()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension GalleryViewController: UICollectionViewDelegate, UICollectionViewDataSource {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return levelNames.count"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        cellForItemAt indexPath: IndexPath) -\u003e UICollectionViewCell {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let cell \u003d collectionView.dequeueReusableCell(withReuseIdentifier: \"record\", for: indexPath)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            as? GalleryCollectionViewCell else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Cell cannot be casted into GallaryCollectionViewCell\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let levelName \u003d levelNames[indexPath.item]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.label.text \u003d levelName"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        DispatchQueue.global(qos: .userInteractive).async { [weak self] in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let image \u003d self?.storage.readImage(levelName)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            DispatchQueue.main.async {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                cell.previewImage.image \u003d image"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let levelName \u003d levelNames[indexPath.item]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let gameParameter: GameParameter \u003d storage.readLevelData(levelName) else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Level broken. Level data is deleted.\", withMsg: \"\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            levelNames \u003d storage.getAllRecords()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.collectionView.reloadData()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.collectionView.removeFromSuperview()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        selectedCallback?(gameParameter)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 72,
      "Jason Chong": 7
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/ItemCollectionViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  ItemTableViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class ItemCollectionViewController: UIViewController, UICollectionViewDataSource, UICollectionViewDelegate {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var collectionView: UICollectionView!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var itemParameters: [ItemParameter] \u003d []"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var selectedPort: Port?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 100).isActive \u003d true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -100).isActive \u003d true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.topAnchor.constraint(equalTo: view.topAnchor, constant: 50).isActive \u003d true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func confirmPressed(_ sender: Any?) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let port \u003d selectedPort else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for cell in collectionView.visibleCells {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let indexPath \u003d collectionView.indexPath(for: cell),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let castedCell \u003d cell as? ItemCollectionViewCell else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "            let itemParameter \u003d itemParameters[indexPath.item]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let buyPriceText \u003d castedCell.buyField.text, let buyPrice \u003d Int(buyPriceText) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "                port.setBuyValue(of: itemParameter, value: buyPrice)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let sellPriceText \u003d castedCell.sellField.text, let sellPrice \u003d Int(sellPriceText) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "                port.setSellValue(of: itemParameter, value: sellPrice)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.removeFromSuperview()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.removeFromParent()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func cancelPressed(_ sender: Any?) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.removeFromSuperview()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.removeFromParent()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func initWith(port: Port) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.selectedPort \u003d port"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.itemParameters \u003d port.getAllItemParameters().sorted(by: { (lhs, rhs) -\u003e Bool in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return lhs.rawValue \u003c rhs.rawValue"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        collectionView.reloadData()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "        return itemParameters.count"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        cellForItemAt indexPath: IndexPath) -\u003e UICollectionViewCell {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let cell \u003d collectionView"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .dequeueReusableCell(withReuseIdentifier: \"itemInfoCell\", for: indexPath) as? ItemCollectionViewCell else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Cell cannot be casted into ItemCollectionViewCell\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        let itemParameter \u003d itemParameters[indexPath.item]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        cell.label.text \u003d itemParameter.rawValue"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let port \u003d selectedPort else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "        if let sellPrice \u003d port.getSellValue(of: itemParameter) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.sellField.text \u003d String(sellPrice)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        if let buyPrice \u003d port.getBuyValue(of: itemParameter) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.buyField.text \u003d String(buyPrice)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        viewForSupplementaryElementOfKind kind: String,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        at indexPath: IndexPath) -\u003e UICollectionReusableView {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch kind {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case UICollectionView.elementKindSectionHeader:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return collectionView.dequeueReusableSupplementaryView("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    ofKind: kind, withReuseIdentifier: \"itemCollectionHeaderView\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    for: indexPath)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            assert(false, \"Invalid element type\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension ItemCollectionViewController: UITextFieldDelegate {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                   replacementString string: String) -\u003e Bool {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let invalidCharacters \u003d CharacterSet(charactersIn: \"0123456789\").inverted"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return string.rangeOfCharacter(from: invalidCharacters) \u003d\u003d nil"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension ItemCollectionViewController: UICollectionViewDelegateFlowLayout {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func collectionView(_ collectionView: UICollectionView,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        layout collectionViewLayout: UICollectionViewLayout,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        sizeForItemAt indexPath: IndexPath) -\u003e CGSize {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return CGSize(width: collectionView.bounds.size.width, height: 100)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 112,
      "henry": 9,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/LevelEditorViewController + Delegate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Level.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension LevelEditorViewController: EditPanelDelegateProtocol {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func clicked(_ select: EditMode) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hidePanel()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editMode \u003d select"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addMapBackground(_ image: UIImage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        mapBackground.image \u003d image"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        layoutBackground()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension LevelEditorViewController: GalleryViewDelegateProtocol {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func load(_ gameParameter: GameParameter) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.gameParameter \u003d gameParameter"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        reInit()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension LevelEditorViewController: UIScrollViewDelegate {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func viewForZooming(in scrollView: UIScrollView) -\u003e UIView? {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return editingAreaWrapper"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func scrollViewWillBeginZooming(_ scrollView: UIScrollView, with view: UIView?) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hideTeamMenu()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func scrollViewWillBeginDragging(_ scrollView: UIScrollView) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hideTeamMenu()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension LevelEditorViewController: MenuViewDelegateProtocol {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func assign(port: Port, to team: Team?) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        port.assignOwner(team)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func start(from node: Node, for team: Team) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let preStartingNode \u003d team.startingNode"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.startingNode \u003d node"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.editingAreaWrapper.subviews.forEach { view in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let nodeView \u003d view as? NodeView else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if nodeView.node \u003d\u003d preStartingNode {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                nodeView.subviews.forEach {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    if $0 is Icon {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        $0.removeFromSuperview()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if team.startingNode \u003d\u003d nodeView.node, let shipIcon \u003d getIconOf(team: team) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                shipIcon.addIcon(to: nodeView)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getEditingMode(for gesture: UIGestureRecognizer) -\u003e EditMode? {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch gesture {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case is UITapGestureRecognizer:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return .portOwnership"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case is UILongPressGestureRecognizer:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return .startingNode"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getIconOf(team: Team) -\u003e Icon? {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let view \u003d Icon(frame: CGRect(x: 0, y: 0, width: 50, height: 50))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch team.name {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case GameConstants.dutchTeam:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            view.image \u003d UIImage(named: Resources.Flag.dutch)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case GameConstants.britishTeam:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            view.image \u003d UIImage(named: Resources.Flag.british)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return view"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 95
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/LevelEditorViewController + Layout.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  LevelEditorViewController + Layout.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/18/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension LevelEditorViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func showPanel() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editPanel.isHidden \u003d false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        panelToggle.setTitle(hidePanelMsg, for: .normal)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.bringSubviewToFront(editPanel)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func hidePanel() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editPanel.isHidden \u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        panelToggle.setTitle(showPanelMsg, for: .normal)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.sendSubviewToBack(editPanel)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func hideTeamMenu() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        UIView.transition(with: teamMenu, duration: 0.5, options: .transitionCrossDissolve, animations: {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.teamMenu.alpha \u003d 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }, completion: { _ in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.teamMenu.alpha \u003d 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Update views with updated game parameter."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func reInit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        reInitScrollView()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let map \u003d gameParameter.map"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let teams \u003d gameParameter.teams"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let teamStartIds \u003d teams.map { $0.startId }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // remove All nodes / paths"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.editingAreaWrapper.subviews.filter { $0 is NodeView }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .forEach { $0.removeFromSuperview() }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.editingAreaWrapper.layer.sublayers?.filter { $0 is PathView }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .forEach { $0.removeFromSuperlayer() }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Add nodes to map"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.getNodes().forEach { node in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let nodeView \u003d NodeView(node: node)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            nodeView.addTo(self.editingAreaWrapper, map: self.gameParameter.map, with: initNodeGestures())"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let teamIndex \u003d teamStartIds.firstIndex(of: node.identifier) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let team \u003d teams[teamIndex]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                team.startingNode \u003d node"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if let icon \u003d getIconOf(team: teams[teamIndex]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    icon.addIcon(to: nodeView)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Add paths to map"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in map.getAllPaths() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayer \u003d PathView(path: path)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            editingAreaWrapper.layer.addSublayer(lineLayer)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayerArr.append(lineLayer)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Set up background of the map."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Load image of background and layout it."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func initBackground() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let image \u003d storage.readImage(gameParameter.map.map) ?? UIImage(named: gameParameter.map.map) else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        mapBackground.image \u003d image"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        layoutBackground()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func layoutBackground() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let image \u003d mapBackground.image, let editingAreaWrapper \u003d self.editingAreaWrapper else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        mapBackground.contentMode \u003d .topLeft"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var size \u003d image.size"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if size.width \u003c self.view.frame.width {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let width \u003d self.view.frame.width"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let height \u003d size.height / size.width * width"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            size \u003d CGSize(width: width, height: height)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        mapBackground.frame \u003d CGRect(origin: CGPoint.zero, size: size)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editingAreaWrapper.frame \u003d mapBackground.frame"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.contentSize \u003d size"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.minimumZoomScale \u003d max(view.frame.height/size.height, view.frame.width/size.width)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.setZoomScale(scrollView.minimumZoomScale, animated: false)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        mapBackground.image \u003d image"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func reInitScrollView () {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let oldScrollView \u003d self.scrollView else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            preconditionFailure(\"scrollView is nil.\")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let scrollView \u003d UIScrollView(frame: self.scrollView.frame)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.scrollView \u003d scrollView"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.insertSubview(scrollView, aboveSubview: oldScrollView)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.topAnchor.constraint(equalTo: view.topAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.trailingAnchor.constraint(equalTo: view.trailingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.bottomAnchor.constraint(equalTo: view.bottomAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.leadingAnchor.constraint(equalTo: view.leadingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.updateConstraints()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editingAreaWrapper.removeFromSuperview()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        scrollView.addSubview(editingAreaWrapper)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func initNodeGestures() -\u003e [UIGestureRecognizer] {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let singleTapOnNodeGesture \u003d UITapGestureRecognizer(target: self, action: #selector(singleTapOnNode(_:)))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        singleTapOnNodeGesture.numberOfTapsRequired \u003d 1"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let doubleTapOnNodeGesture \u003d UITapGestureRecognizer(target: self, action: #selector(doubleTapOnNode(_:)))"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        doubleTapOnNodeGesture.numberOfTapsRequired \u003d 2"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let longPressOnNodeGesture \u003d UILongPressGestureRecognizer(target: self, action: #selector(longPressOnNode(_:)))"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        singleTapOnNodeGesture.require(toFail: doubleTapOnNodeGesture)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        singleTapOnNodeGesture.delaysTouchesBegan \u003d true"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        doubleTapOnNodeGesture.delaysTouchesBegan \u003d true"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let drawPathGesture \u003d UIPanGestureRecognizer(target: self, action: #selector(drawPath(_:)))"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return [singleTapOnNodeGesture, doubleTapOnNodeGesture, longPressOnNodeGesture, drawPathGesture]"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 129
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/LevelEditorViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  LevelEditorViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/17/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class LevelEditorViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var scrollView: UIScrollView! {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            scrollView.delegate \u003d self"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            scrollView.maximumZoomScale \u003d 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var editPanel: UIView!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var teamMenu: UITableView! {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            teamMenu.dataSource \u003d teamMenuDataSource"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            teamMenu.delegate \u003d teamMenuDataSource"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            teamMenu.reloadData()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var editingAreaWrapper: UIView!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var mapBackground: UIImageView!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var panelToggle: UIButton!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var panelDest: EditPanelViewController?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private lazy var teamMenuDataSource \u003d TeamMenuDataSource(data: gameParameter.teams, delegate: self)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var showPanelMsg \u003d \"Show Panel\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var hidePanelMsg \u003d \"Hide Panel\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var gameParameter: GameParameter \u003d {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let imageName \u003d Default.Background.image"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var bounds: Rect?"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let image \u003d UIImage(named: imageName) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            bounds \u003d Rect(originX: 0, originY: 0, height: Double(image.size.height), width: Double(image.size.width))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let map \u003d Map(map: imageName, bounds: bounds)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return GameParameter(map: map, teams: [GameConstants.dutchTeam, GameConstants.britishTeam])"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var editMode: EditMode?"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var lineLayerArr \u003d [PathView]()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var lineLayer \u003d PathView()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var startingNode: NodeView?"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var destination: NodeView?"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let storage \u003d LocalStorage()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch segue.identifier {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case \"toEditPanel\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let panelDest \u003d segue.destination as? EditPanelViewController else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            panelDest.delegate \u003d self"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.panelDest \u003d panelDest"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case \"toGallary\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let gallaryDest \u003d segue.destination as? GalleryViewController else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            gallaryDest.selectedCallback \u003d { loadedParameter in"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.load(loadedParameter)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            gallaryDest.delegate \u003d self"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        reInitScrollView()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        initBackground()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        showPanel()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenu.frame.size \u003d CGSize(width: 200, height: 100)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let tapGesture \u003d UITapGestureRecognizer(target: self, action: #selector(tapOnMap(_:)))"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        editingAreaWrapper.addGestureRecognizer(tapGesture)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func backPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Button action for toggle panel."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func editPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if editPanel.isHidden {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            showPanel()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            hidePanel()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func savePressed(_ sender: Any) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let alert \u003d ControllerUtils.getTextfieldAlert(title: \"Save Level with Name: \", desc: \"\","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                      textPlaceHolder: \"Input level name here\","
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                      okAction: { name in"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                          self.store(with: name)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                      }, cancelAction: nil)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Deal with tapping on map action:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Under erase mode: remove path"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Under add weather mode: add weather"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Under add node mode: add the corresponding node selected"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///    - sender: tap gesture recognizer"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func tapOnMap(_ sender: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hideTeamMenu()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let mode \u003d editMode, editPanel.isHidden else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let location \u003d sender.location(in: self.mapBackground)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch mode {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .erase:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            removePath(at: location)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .weather:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            addWeather(at: location)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .sea, .port:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            addNode(at: location)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Deal with single tapping on node action:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Under erase mode: remove node"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Under edit item mode: show item editor page"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Under add pirate mode: add pirate to the selected sea"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///    - sender: tap gesture recognizer"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func singleTapOnNode(_ sender: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        hideTeamMenu()"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let mode \u003d editMode else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch mode {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .erase:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let nodeView \u003d sender.view as? NodeView else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            removeNode(nodeView)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .item:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let portView \u003d sender.view as? NodeView,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let port \u003d portView.node as? Port else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Please select a port!\", withMsg: \"\")"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            presentItemEditor(for: port)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .pirate:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let nodeView \u003d sender.view as? NodeView else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Please select a node!\", withMsg: \"\")"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            addPirate(to: nodeView)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Deal with double tapping on node action:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Show team menu view and set port ownership to the selected team."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///    - sender: tap gesture recognizer"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func doubleTapOnNode(_ sender: UITapGestureRecognizer) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let node \u003d sender.view as? NodeView, let port \u003d node.node as? Port else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Double click on port to assign ownership.\","
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                        withMsg: \"\")"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenuDataSource.tableView \u003d teamMenu"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if teamMenu.isHidden {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            UIView.animate(withDuration: 0, animations: {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let point \u003d node.convert(CGPoint(x: node.bounds.maxX, y: node.bounds.maxY), to: self.view)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.teamMenu.frame.origin \u003d point"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            teamMenu.isHidden \u003d false"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            teamMenu.isHidden \u003d true"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenuDataSource.set(node: port, for: sender)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Deal with long pressing on node action:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Show team menu view and set the node to starting point of the selected team."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///    - sender: long press gesture recognizer"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func longPressOnNode(_ sender: UILongPressGestureRecognizer) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let node \u003d sender.view as? NodeView else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenuDataSource.tableView \u003d teamMenu"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if teamMenu.isHidden {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            UIView.animate(withDuration: 0, animations: {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let point \u003d node.convert(CGPoint(x: node.bounds.maxX, y: node.bounds.maxY), to: self.view)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.teamMenu.frame.origin \u003d point"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            teamMenu.isHidden \u003d false"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamMenuDataSource.set(node: node.node, for: sender)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Deal with long pressing on node action:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Show the path to be added."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Show glow of two ends of the path to be added."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   Add path to map."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///    - sender: pan gesture recognizer"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @objc func drawPath(_ sender: UIPanGestureRecognizer) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard editMode \u003d\u003d .path else {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let fromNode \u003d sender.view as? NodeView else {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        startingNode \u003d fromNode"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let endPoint \u003d sender.location(in: mapBackground)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let endView \u003d editingAreaWrapper.hitTest(endPoint, with: nil) as? NodeView"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if endView !\u003d nil {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination \u003d endView"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination?.addGlow(colored: .white)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination?.removeGlow()"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination \u003d nil"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let bazier \u003d UIBezierPath()"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        bazier.move(to: fromNode.center)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch sender.state {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .began:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayer \u003d PathView()"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            startingNode?.addGlow(colored: .white)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            editingAreaWrapper.layer.addSublayer(lineLayer)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .changed:"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            bazier.addLine(to: endPoint)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayer.path \u003d bazier.cgPath"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .ended:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            startingNode?.removeGlow()"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination?.removeGlow()"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            destination \u003d nil"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let toNode \u003d endView else {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                lineLayer.removeFromSuperlayer()"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            bazier.addLine(to: toNode.center)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            addPath(from: fromNode, to: toNode)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Attempt to store the level data with the input name."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - name: level name"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - replace: whether to replace the original level if a level with the same name already exists"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func store(with name: String, replace: Bool \u003d false) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var bounds \u003d Rect(originX: 0, originY: 0,"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                          height: Double(self.view.bounds.size.height),"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                          width: Double(self.view.bounds.size.width))"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let size \u003d self.mapBackground.image?.size {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            bounds \u003d Rect(originX: 0, originY: 0, height: Double(size.height), width: Double(size.width))"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.gameParameter.map.changeBackground(\"\\(name)background\", with: bounds)"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let background \u003d self.mapBackground.image, let preview \u003d self.scrollView.screenShot else {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d ControllerUtils.getConfirmationAlert(title: \"Cannot save without background and preview image.\","
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                             desc: \"\","
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                             okAction: {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.store(with: name)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }, cancelAction: nil)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "henry"
        },
        "content": "            let result \u003d try storage.save(self.gameParameter, background,"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "henry"
        },
        "content": "                                          preview: preview, with: name, replace: replace)"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if result \u003d\u003d false {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Save failed.\", withMsg: \"\")"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } catch StorageError.fileExisted {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"File Existed. Are you sure to replace?\", withMsg: \"\","
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                        action: { self.store(with: name, replace: true)})"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let error \u003d error as? StorageError"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Store Failed.\","
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                        withMsg: error?.getMessage() ?? \"Unknown Error.\")"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func removeNode(_ nodeView: NodeView) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodeView.removeFrom(map: self.gameParameter.map)"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodeView.node.remove()"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var offset \u003d 0"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for (index, lineLayer) in lineLayerArr.enumerated() {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if lineLayer.shipPath?.fromNode \u003d\u003d nodeView.node"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                || lineLayer.shipPath?.toNode \u003d\u003d nodeView.node {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                lineLayerArr.remove(at: index - offset)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                lineLayer.removeFromSuperlayer()"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                offset+\u003d1"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func removePath(at location: CGPoint) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var removed \u003d 0"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for (index, path) in self.lineLayerArr.enumerated() {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if self.isPoint(point: location, withinDistance: 20, ofPath: path.path) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.lineLayerArr.remove(at: index - removed)"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                removed +\u003d 1"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                path.removeFromSuperlayer()"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let path \u003d path.shipPath else {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.gameParameter.map.removePath(path)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func addWeather(at location: CGPoint) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.lineLayerArr.forEach { path in"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if self.isPoint(point: location, withinDistance: 20, ofPath: path.path) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                path.add(Weather())"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func addNode(at location: CGPoint) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let alert \u003d ControllerUtils.getTextfieldAlert(title: \"Input name: \", desc: \"\","
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                      textPlaceHolder: \"Input name here.\","
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                      okAction: { ownerName in"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let nodeView \u003d self.editMode?.getNodeView(name: ownerName, at: location) else {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodeView.addTo(self.editingAreaWrapper, map: self.gameParameter.map, with: self.initNodeGestures())"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }, cancelAction: nil)"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func addPath(from fromNode: NodeView, to toNode: NodeView) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let bazier \u003d UIBezierPath()"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        bazier.move(to: fromNode.center)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        bazier.addLine(to: toNode.center)"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let path \u003d Path(from: fromNode.node, to: toNode.node)"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let pathReversed \u003d Path(from: toNode.node, to: fromNode.node)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if gameParameter.map.getAllPaths().contains(path) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            lineLayer.removeFromSuperlayer()"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        lineLayer.set(path: path)"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        gameParameter.map.add(path: path)"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        gameParameter.map.add(path: pathReversed)"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        lineLayer.path \u003d bazier.cgPath"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        lineLayerArr.append(lineLayer)"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let lineLayerR \u003d PathView(path: pathReversed)"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        lineLayerR.path \u003d bazier.reversing().cgPath"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        lineLayerArr.append(lineLayerR)"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func addPirate(to nodeView: NodeView) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if nodeView.node is Port {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"You cannot add pirate to a port!\", withMsg: \"\")"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodeView.node.add(object: PirateIsland(in: nodeView.node))"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodeView.update()"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func presentItemEditor(for port: Port) {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let storyboard \u003d UIStoryboard(name: \"Main\", bundle: nil)"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let controller \u003d storyboard.instantiateViewController(withIdentifier: \"itemEditTable\")"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            as? ItemCollectionViewController else {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Controller itemEditTable cannot be casted into ItemCollectionViewController\")"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        _ \u003d controller.view"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.initWith(port: port)"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.addChild(controller)"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.addSubview(controller.view)"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        controller.didMove(toParent: self)"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 414,
      "henry": 3,
      "Jason Chong": 2
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/MenuViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  MenuViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/24/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/// Protocol for menu view controller."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol MenuViewDelegateProtocol: class {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Change ownership of port to team."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func assign(port: Port, to team: Team?)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Change starting point of team to node."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func start(from node: Node, for team: Team)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Get editing mode of the menu, i.e. whether the menu is called to set ownership or starting node."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getEditingMode(for gesture: UIGestureRecognizer) -\u003e EditMode?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TeamMenuDataSource: NSObject, UITableViewDataSource, UITableViewDelegate {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var tableView: UITableView? {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.tableView?.isUserInteractionEnabled \u003d true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.tableView?.isScrollEnabled \u003d false"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var data: [Team] \u003d [] {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.tableView?.reloadData()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var node: Node?"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    weak var delegate: MenuViewDelegateProtocol?"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var editMode: EditMode?"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    // MARK: - Table view data source"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(data: [Team], delegate: MenuViewDelegateProtocol?) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.delegate \u003d delegate"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.data \u003d data"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func numberOfSections(in tableView: UITableView) -\u003e Int {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return 1"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return data.count"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cell \u003d tableView.dequeueReusableCell(withIdentifier: \"menuCell\", for: indexPath)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.textLabel?.text \u003d data[indexPath.item].name"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.textLabel?.textAlignment \u003d .center"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard editMode \u003d\u003d .portOwnership else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return cell"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let unwrappedPort \u003d node as? Port, let portOwner \u003d unwrappedPort.owner, portOwner \u003d\u003d data[indexPath.item] {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.backgroundColor \u003d .gray"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let selectedTeam \u003d data[indexPath.item]"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if editMode \u003d\u003d .portOwnership, let unwrappedPort \u003d node as? Port {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let portOwner \u003d unwrappedPort.owner, portOwner \u003d\u003d selectedTeam {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.delegate?.assign(port: unwrappedPort, to: nil)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.delegate?.assign(port: unwrappedPort, to: data[indexPath.item])"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if editMode \u003d\u003d .startingNode, let unwrappedNode \u003d node {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.delegate?.start(from: unwrappedNode, for: selectedTeam)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(node: Node, for gesture: UIGestureRecognizer) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.node \u003d node"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.tableView?.reloadData()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.editMode \u003d delegate?.getEditingMode(for: gesture)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 92
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Controller/UIViewController + PointIn.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  UIViewController + PointIn.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/18/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension UIViewController {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Extension for detecting hit on path in level editor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Used for convenience to allow minor deviation of user tapping gesture."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// @IBInspectable Code from : https://stackoverflow.com/a/42511203"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    final func isPoint(point: CGPoint, withinDistance distance: CGFloat, ofPath path: CGPath?) -\u003e Bool {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let castedPath \u003d path else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let hitPath \u003d CGPath( __byStroking: castedPath,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 transform: nil,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 lineWidth: distance,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 lineCap: CGLineCap.round,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 lineJoin: CGLineJoin.miter,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                 miterLimit: 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let isWithinDistance \u003d hitPath.contains(point)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return isWithinDistance"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 33
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Enums/EditMode.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  EditableObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/18/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Enums for differenting mode of editing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Representing the expected behavior of the button selected or gesture done by users."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum EditMode {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case sea"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case path"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case port"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case pirate"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case weather"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case item"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case erase"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case startingNode"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case portOwnership"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getNodeView(name: String, at center: CGPoint) -\u003e NodeView? {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .sea:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return NodeView(node: Sea(name: name, originX: Double(center.x),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                      originY: Double(center.y)))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .port:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return NodeView(node: Port(team: nil, name: name, originX: Double(center.x),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                       originY: Double(center.y)))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 36,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Model/GameParameterItem.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  GameParameter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/21/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * Protocol for values of GameParameter."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "protocol GameParameterItem {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var type: GameParameterItemType { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sectionTitle: String { get }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum GameParameterItemType {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case player"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case turn"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum FieldType: Int {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case number"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TeamParameterItem: GameParameterItem {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var type: GameParameterItemType {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return .player"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sectionTitle: String {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return \"Team Parameter\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var playerParameter: TeamParameter"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(playerParameter: TeamParameter) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.playerParameter \u003d playerParameter"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TurnParameterItem: GameParameterItem {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var type: GameParameterItemType {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return .turn"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sectionTitle: String {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return \"Game Turn\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var label: String"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var input: Int?"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var game: GameParameter"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(label: String, game: GameParameter, input: Int) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.label \u003d label"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.input \u003d input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.game \u003d game"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 63
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/Storage/LocalStorage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Storage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/21/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class LocalStorage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Check the validation of level name."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - name: the proposed level name."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func verify(name: String) throws {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard !name.isEmpty else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.invalidName(message: \"Empty level name.\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard name.count \u003c 255 else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.invalidName(message: \"Level name is too long.\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard name.range(of: \"[^a-zA-Z0-9-]\", options: .regularExpression) \u003d\u003d nil else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.invalidName(message:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                \"Room name contains invalid symbol. Only alphanumeric and - is allowed.\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// Attempt to encode level data into json file. A complete level data set"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    /// should contains data, background image and preview image."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// On failure, all the related level data should be deleted."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - data: encodable data to be save into a JSON file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - background: the background image to be saved"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - screenShot: the preview of level"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - name: proposed level name"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    func save\u003cT: Encodable\u003e(_ data: T, _ background: UIImage,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "                            preview screenShot: UIImage, with name: String, replace: Bool \u003d false) throws -\u003e Bool {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try verify(name: name)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard replace || !isLevelExist(name) else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.fileExisted(message: \"Level already exists.\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundName \u003d name + Default.Suffix.background"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let fileURL \u003d getFullURL(from: name, \".pList\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundURL \u003d getFullURL(from: backgroundName, \".png\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let previewURL \u003d getFullURL(from: name, \".png\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Store level data"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let jsonEncoder \u003d JSONEncoder()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        jsonEncoder.outputFormatting \u003d .prettyPrinted"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let jsonData \u003d try? jsonEncoder.encode(data),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "              (try? background.pngData()?.write(to: backgroundURL)) !\u003d nil,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            (try? screenShot.pngData()?.write(to: previewURL)) !\u003d nil else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(name)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Couldn\u0027t encode data to JSON format.\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let savedJson \u003d NSMutableData(data: jsonData)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        savedJson.write(to: fileURL, atomically: true)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Attempt to decode level data."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// On failure return nil and delete all related data. Log the failure information."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - fileName: name of the level to be decoded"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func readLevelData\u003cT: Codable\u003e(_ fileName: String) -\u003e T? {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let url \u003d getFullURL(from: fileName, \".pList\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let data \u003d try? Data(contentsOf: url) else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Reading level \\(fileName) not exist.\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let levelData \u003d try? JSONDecoder().decode(T.self, from: data) else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Decoding level failed. \")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return levelData"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Attempt to decode and init UIImage from image data."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// On failure return nil and delete all related data. Log the failure information."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - fileName: name of the image to be decoded"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Returns:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   UIImage constructed from the decoded data."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func readImage(_ fileName: String) -\u003e UIImage? {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let imageData \u003d readImageData(fileName) else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Reading image \\(fileName) not exist.\")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let image \u003d UIImage(data: imageData) else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"Initializing image from data failed. \")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return image"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Attempt to decode image data."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// On failure return nil and delete all related data. Log the failure information."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - fileName: name of the image to be decoded"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func readImageData(_ fileName: String) -\u003e Data? {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let url \u003d getFullURL(from: fileName, \".png\")"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let imageData \u003d try? Data(contentsOf: url) else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            deleteLevel(fileName)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return imageData"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Delete all files related to a level, including JSON file, background image and preview image."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func deleteLevel(_ name: String) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundName \u003d name + Default.Suffix.background"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let fileURL \u003d getFullURL(from: name, \".pList\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundURL \u003d getFullURL(from: backgroundName, \".png\")"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let previewURL \u003d getFullURL(from: name, \".png\")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try? FileManager.default.removeItem(at: fileURL)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try? FileManager.default.removeItem(at: backgroundURL)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try? FileManager.default.removeItem(at: previewURL)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Return all level names in the document directory without any extension."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getAllRecords() -\u003e [String] {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let urls \u003d FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Get the URL for a file in the Documents Directory"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let documentDirectory \u003d urls.first else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return [String]()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let fileURLs \u003d try? FileManager.default.contentsOfDirectory("
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            at: documentDirectory, includingPropertiesForKeys: [], options: .skipsHiddenFiles) else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return [String]()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return fileURLs.filter { $0.pathExtension \u003d\u003d \"pList\" }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .compactMap { $0.lastPathComponent }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .map { $0.replacingOccurrences(of: \".pList\", with: \"\") }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .filter { self.isLevelExist($0) }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func getFullURL(from fileName: String, _ extensionStr: String) -\u003e URL {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let urls \u003d FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // Get the URL for a file in the Documents Directory"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let documentDirectory \u003d urls.first else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            NSLog(\"DocumentDirectory is empty\")"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return URL(fileReferenceLiteralResourceName: \"\")"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let url \u003d documentDirectory.appendingPathComponent(fileName + extensionStr)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return url"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func isLevelExist(_ name: String) -\u003e Bool {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let fileURL \u003d getFullURL(from: name, \".pList\")"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let backgroundURL \u003d getFullURL(from: name + Default.Suffix.background, \".png\")"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let previewURL \u003d getFullURL(from: name, \".png\")"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let fileManager \u003d FileManager.default"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return fileManager.fileExists(atPath: fileURL.path)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 fileManager.fileExists(atPath: backgroundURL.path)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 fileManager.fileExists(atPath: previewURL.path)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum StorageError: Error {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case invalidName(message: String)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    case fileExisted(message: String)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .invalidName(message: let message):"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        case .fileExisted(message: let message):"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 174,
      "henry": 4,
      "Jason Chong": 13
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/GalleryCollectionViewCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  GallaryCollectionViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/22/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class GalleryCollectionViewCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var label: UILabel!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var previewImage: UIImageView!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 14
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/ItemCollectionViewCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  ItemCollectionViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/21/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class ItemCollectionViewCell: UICollectionViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var label: UILabel!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var sellField: UITextField!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var buyField: UITextField!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 15
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/NodeView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  NodeView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * UIImageView for Node, used for convenience to get UI representation of a node."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class NodeView: UIImageView {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var node: Node"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var nodeLabel: UILabel"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var icon: UIImageView?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(node: Node) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.node \u003d node"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.nodeLabel \u003d NodeView.getBlankLabel()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(frame: CGRect(fromRect: node.frame))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodeLabel.text \u003d node.name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nodeLabel.frame.size \u003d CGSize(width: node.frame.width, height: 15)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodeLabel.adjustsFontSizeToFitWidth \u003d true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if let image \u003d Resources.Icon.of(node) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.image \u003d UIImage(named: image)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        node.objects.forEach { object in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let image \u003d Resources.Icon.of(object) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.image \u003d UIImage(named: image)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.addSubview(nodeLabel)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    // Update image of a node view after new object is added into it."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func update() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        node.objects.forEach { object in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let image \u003d Resources.Icon.of(object) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.image \u003d UIImage(named: image)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Add NodeView to provided superView: view and add Node model to Map model"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - view: superView where NodeView is added"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - map: Map model where Node is added"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - gestures: gesture recognizers added to NodeView"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addTo(_ view: UIView, map: Map, with gestures: [UIGestureRecognizer]) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(node)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.isUserInteractionEnabled \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for gesture in gestures {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.addGestureRecognizer(gesture)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.addSubview(self)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Remove NodeView from superView and remove Node model from Map model"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - map: Map model where Node is removed from"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func removeFrom(map: Map) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.removeNode(node)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.removeFromSuperview()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static func getBlankLabel() -\u003e UILabel {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let label \u003d UILabel()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        label.frame.origin \u003d CGPoint(x: 0, y: -15)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        label.backgroundColor \u003d .white"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        label.textAlignment \u003d .center"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        label.font \u003d label.font.withSize(10)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return label"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 72,
      "Jason Chong": 15
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/PathView.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  PathView.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/1/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " * CAShapeLayer for Path, used for convenience to get UI representation of a path."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class PathView: CAShapeLayer {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var shipPath: Path?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func \u003d\u003d (lhs: PathView, rhs: PathView) -\u003e Bool {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.shipPath \u003d\u003d rhs.shipPath"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override init() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.strokeColor \u003d UIColor.black.cgColor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.lineWidth \u003d 2.0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(path: Path) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.strokeColor \u003d UIColor.black.cgColor"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.lineWidth \u003d 2.0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.shipPath \u003d path"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let bazier \u003d UIBezierPath()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        bazier.move(to: CGPoint(x: path.fromNode.frame.midX,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                y: path.fromNode.frame.midY))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        bazier.addLine(to: CGPoint(x: path.toNode.frame.midX,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                   y: path.toNode.frame.midY))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.path \u003d bazier.cgPath"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        path.modifiers.forEach { self.add($0) }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    required init?(coder aDecoder: NSCoder) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        fatalError(\"init(coder:) has not been implemented\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(path: Path) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.shipPath \u003d path"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Add volatile to both the Path model and the UI."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - modifier: volatile to be added"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func add(_ modifier: Volatile) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let path \u003d shipPath else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.shipPath?.modifiers.append(modifier)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let layer \u003d CALayer()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let image \u003d UIImage(named: Resources.Icon.weather)?.cgImage"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        layer.contentsGravity \u003d .resizeAspect"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        layer.contents \u003d image"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let midX \u003d (path.fromNode.frame.midX + path.toNode.frame.midX) / 2"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let midY \u003d (path.fromNode.frame.midY + path.toNode.frame.midY) / 2"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        layer.frame \u003d CGRect(x: midX, y: midY, width: 50, height: 50)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.addSublayer(layer)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 67
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/TeamTableViewCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  PlayerTableViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/19/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TeamTableViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var nameLabel: UILabel!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var moneyField: UITextField!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var item: GameParameterItem? {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let item \u003d item as? TeamParameterItem else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            nameLabel.text \u003d item.playerParameter.getName()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            moneyField.text \u003d String(item.playerParameter.getMoney())"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            nameLabel.tag \u003d FieldType.name.rawValue"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            moneyField.tag \u003d FieldType.number.rawValue"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 28
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/TurnTableViewCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  TurnTableViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/20/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TurnTableViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var label: UILabel!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var textField: UITextField!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var item: GameParameterItem? {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let item \u003d item as? TurnParameterItem else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            label.text \u003d item.label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let input \u003d item.input else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                textField.text \u003d \"\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textField.text \u003d String(input)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            textField.tag \u003d FieldType.number.rawValue"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 30
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/UIImageView+Icon.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  UIImageView+Icon.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/16/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class Icon: UIImageView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Add icon on right bottom of the UIView."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    ///   - view: The UIView where icon is to be added into."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func addIcon(to view: UIView) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let image \u003d self.image else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        view.addSubview(self)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let width \u003d view.frame.width / 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let height \u003d (image.size.height / image.size.width) * width"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.translatesAutoresizingMaskIntoConstraints \u003d false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.bottomAnchor.constraint(equalTo: view.bottomAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.trailingAnchor.constraint(equalTo: view.trailingAnchor).isActive \u003d true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.widthAnchor.constraint(equalToConstant: width).isActive \u003d true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.heightAnchor.constraint(equalToConstant: height).isActive \u003d true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 28
    }
  },
  {
    "path": "SailingThroughHistory/Level Editor/View/UIView + ScreenShot.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  UIView + ScreenShot.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 3/22/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "extension UIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    /// Take screenshot of the view with its subviews. The size of screenshot is the same as frame of the UIView."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var screenShot: UIImage? {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        UIGraphicsBeginImageContextWithOptions(frame.size, false, UIScreen.main.scale)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        drawHierarchy(in: self.frame, afterScreenUpdates: true)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let image \u003d UIGraphicsGetImageFromCurrentImageContext()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        UIGraphicsEndImageContext()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return image"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 22
    }
  },
  {
    "path": "SailingThroughHistory/MainMenuViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  MainMenuViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class MainMenuViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var message: String?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override var prefersStatusBarHidden: Bool {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidAppear(_ animated: Bool) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidAppear(true)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view.window?.rootViewController \u003d self"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let message \u003d message {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: message, withMsg: \"\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.message \u003d nil"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if segue.identifier \u003d\u003d \"menuToLocalRoom\" {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let roomController \u003d segue.destination as? WaitingRoomViewController,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let deviceId \u003d UIDevice.current.identifierForVendor?.uuidString else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        withMsg: \"An error has occured. Please try again later.\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    present(alert, animated: true)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            roomController.roomConnection \u003d LocalRoomConnection(deviceId: deviceId)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 45
    }
  },
  {
    "path": "SailingThroughHistory/Network/Firestore/FirestoreConstants.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  FirestoreConstants.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseFirestore"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Constants used for connection to Firestore"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum FirestoreConstants {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The maximum image size of game background in bytes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let maxImageSize: Int64 \u003d 104857600 // 100MB"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let firestore \u003d Firestore.firestore()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let rooms \u003d firestore.collection(\"Rooms\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let roomCollectionName \u003d \"Rooms\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let roomCollection \u003d firestore.collection(roomCollectionName)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let modelCollectionName \u003d \"Model\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let initialStateDocumentName \u003d \"Initial State\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let currentStateDocumentName \u003d \"Current State\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let runTimeInfoCollectionName \u003d \"Runtime Info\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let turnActionsDocumentName \u003d \"TurnActions\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let errorCategory \u003d \"Firebase\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let numPlayersKey \u003d \"NumPlayers\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let playersCollectionName \u003d \"Players\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static let devicesCollectionName \u003d \"Devices\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let lastHeartBeatKey \u003d \"LastHeartBeat\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let pushStateErrorMsg: StaticString \u003d \"Failed to push state\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let encodeStateErrorMsg \u003d \"Failed to encode state\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let pullErrorMsg \u003d \"Failed to pull document.\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let roomMasterKey \u003d \"RoomMaster\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let roomStartedKey \u003d \"started\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let playerTeamKey \u003d \"Team\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static let playerNameKey \u003d \"Name\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static let playerDeviceKey \u003d \"Device\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let teamsKey \u003d \"Teams\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let backgroundUrlKey \u003d \"backgroundUrl\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static let isGmKey \u003d \"isGm\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 3,
      "Jason Chong": 37
    }
  },
  {
    "path": "SailingThroughHistory/Network/Firestore/FirestoreRoom.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  FirebaseRoom.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseFirestore"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// A room stored on Firestore."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class FirestoreRoom: Room {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The name of the room"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let name: String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Reference to Firestore"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let firestore: Firestore"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(named name: String) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.firestore \u003d FirestoreConstants.firestore"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Get Room objects from a QuerySnapshot"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - snapshot: The result of the query as a QuerySnapshot"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - error: The error from the query"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Returns: The array of rooms stored in the snapshot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static func processRooms(snapshot: QuerySnapshot?, error: Error?) -\u003e [Room] {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let roomDocuments \u003d snapshot?.documents else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Failed to read rooms\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return roomDocuments"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .map { FirestoreRoom(named: $0.documentID) }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getConnection(completion callback: @escaping (RoomConnection?, Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        FirebaseRoomConnection.getConnection(for: self, completion: callback)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Deletes a room on the network if necessary."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// i.e If all the devices in the room are not responsive or the room is empty."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter name: The name of the room."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func deleteIfNecessary(named name: String) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let devicesCollectionReference \u003d FirestoreConstants"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .roomCollection"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .document(name)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .collection(FirestoreConstants.devicesCollectionName)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let connection \u003d FirebaseRoomConnection(forRoom: name)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        func deleteIfEmpty(_: Error?) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            devicesCollectionReference.getDocuments(completion: { (snapshot, error) in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    print(\"Unable to load room players: \\(String(describing: error?.localizedDescription))\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if snapshot.documents.count \u003c\u003d 0 {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    FirebaseRoomConnection.deleteRoom(named: name)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            })"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        devicesCollectionReference.getDocuments { (snapshot, error) in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                print(\"Unable to load room players: \\(String(describing: error?.localizedDescription))\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for document in snapshot.documents {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let lastHeartBeat \u003d document.get(FirestoreConstants.lastHeartBeatKey)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    as? Double,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    Date().timeIntervalSince1970 - lastHeartBeat \u003c 60 else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        connection.removeDevice(withId: document.documentID)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        continue"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            deleteIfEmpty(nil)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "Jason Chong": 80
    }
  },
  {
    "path": "SailingThroughHistory/Network/Firestore/FirestoreRoomConnection.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  FirebaseConnection.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseFirestore"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import CodableFirebase"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseStorage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseFunctions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import os"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// A room connection for a room with information stored on Firebase."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class FirebaseRoomConnection: RoomConnection {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The time in seconds before an unresponsive device is removed from the room."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static private let deadTime: TimeInterval \u003d 60"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The device id of this device."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let deviceId: String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The identifier of the room master device."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var roomMasterId: String"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The number of players in this room on this device."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var numOfPlayers: Int"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The name of the room."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let roomName: String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The timer used to check and update device heartbeat."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var heartbeatTimer: Timer?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The callback to call when this device has been removed from the room."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var removalCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// The listeners used to listen to network changes."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var listeners \u003d [ListenerRegistration]()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var roomDocumentRef: DocumentReference {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return FirestoreConstants.roomCollection.document(roomName)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var modelCollectionRef: CollectionReference {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return roomDocumentRef.collection(FirestoreConstants.modelCollectionName)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var runTimeInfoCollectionRef: CollectionReference {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return roomDocumentRef.collection(FirestoreConstants.runTimeInfoCollectionName)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var turnActionsDocumentRef: DocumentReference {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return runTimeInfoCollectionRef.document(FirestoreConstants.turnActionsDocumentName)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var devicesCollectionRef: CollectionReference {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return roomDocumentRef.collection(FirestoreConstants.devicesCollectionName)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var playersCollectionRef: CollectionReference {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return roomDocumentRef.collection(FirestoreConstants.playersCollectionName)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Constructor for a connection to a room with the given name."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter roomName: The name of the room."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(forRoom roomName: String) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.roomName \u003d roomName"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let deviceId \u003d UIDevice.current.identifierForVendor?.uuidString else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Device has no uuid\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.roomMasterId \u003d \"\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.numOfPlayers \u003d 0"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscibe to the removal of this device from the room."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter removalCallback: Callback is called when this device has been removed from the room."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func subscribeRemoval(removalCallback: (() -\u003e Void)?) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listeners.append(roomDocumentRef.addSnapshotListener { [weak self] (document, _) in"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let document \u003d document, !document.exists else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            document.reference.collection(FirestoreConstants.devicesCollectionName)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                .getDocuments(completion: { (snapshot, _) in"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                snapshot.documents.forEach { document in"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    self?.devicesCollectionRef.document(document.documentID).delete()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            document.reference.collection(FirestoreConstants.modelCollectionName)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                .getDocuments(completion: { (snapshot, _) in"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                snapshot.documents.forEach { document in"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    self?.modelCollectionRef.document(document.documentID).delete()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            document.reference.collection(FirestoreConstants.runTimeInfoCollectionName)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                .getDocuments(completion: { (snapshot, _) in"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                snapshot.documents.forEach { document in"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    self?.modelCollectionRef.document(document.documentID).delete()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listeners.append(devicesCollectionRef.document(deviceId).addSnapshotListener { [weak self] (document, _) in"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let document \u003d document, !document.exists else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self?.playersCollectionRef.whereField("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                FirestoreConstants.playerDeviceKey, isEqualTo: document.documentID).getDocuments { (snapshot, _) in"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    snapshot.documents.forEach { document in"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        document.reference.delete()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.disconnect()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.removalCallback?()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Get connection to the room with heartbeat scheduled and registers the device onto the room in the network."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - room: The room to join"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - callback: The callback to be called once the connection has been established."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func getConnection(for room: FirestoreRoom,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                              completion callback: @escaping (RoomConnection?, Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let connection \u003d FirebaseRoomConnection(forRoom: room.name)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        func postConnectionActions(error: Error?) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let error \u003d error {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                callback(nil, error)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            connection.roomDocumentRef.getDocument { (querySnapshot, error) in"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let document \u003d querySnapshot, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    print(\"Failed to update master Id. Error: \\(String(describing: error))\")"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                connection.roomMasterId \u003d document.get(FirestoreConstants.roomMasterKey) as? String ?? \"\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                connection.postJoinActions(completion: callback)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        connection.roomDocumentRef.getDocument { (snapshot, error) in"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            if let error \u003d error {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                callback(nil, error)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if let document \u003d snapshot, document.exists {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let started \u003d document.get(FirestoreConstants.roomStartedKey) as? Bool else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    callback(nil, NetworkError.pullError(message: \"Unable to read started.\"))"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "henry"
        },
        "content": "                if !started {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    // join as usual player"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "henry"
        },
        "content": "                    connection.devicesCollectionRef.document(connection.deviceId)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "henry"
        },
        "content": "                        .setData([FirestoreConstants.numPlayersKey: connection.numOfPlayers]) { error in"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                            postConnectionActions(error: error)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    callback(nil, NetworkError.pushError(message: \"Game has already started.\"))"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                connection.createRoom(completion: postConnectionActions)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func addPlayer() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let playerId \u003d \"\\(getNewPlayerIndex())-\" + self.deviceId"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.playersCollectionRef"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .document(playerId)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .setData([FirestoreConstants.playerDeviceKey: self.deviceId]) { [weak self] error in"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let self \u003d self, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.numOfPlayers +\u003d 1"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.devicesCollectionRef.document(self.deviceId)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    .updateData([FirestoreConstants.numPlayersKey: self.numOfPlayers])"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func getNewPlayerIndex() -\u003e Int {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return self.numOfPlayers + 1"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Create the room on the network."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter completion: called when the room has been created, or failed to be created."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func createRoom(completion: @escaping (Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let currentTime \u003d Date().timeIntervalSince1970"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let batch \u003d Firestore.firestore().batch()"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let data: [String: Any] \u003d [FirestoreConstants.roomMasterKey: self.deviceId,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                   FirestoreConstants.roomStartedKey: false]"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        batch.setData(data, forDocument: self.roomDocumentRef)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        batch.setData([FirestoreConstants.numPlayersKey: self.numOfPlayers,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                       FirestoreConstants.lastHeartBeatKey: currentTime],"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                      forDocument: self.devicesCollectionRef.document(deviceId))"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        batch.commit(completion: completion)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Carries out required actions after joining the room."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter callback: called after actions have been carried out, either successfully or unsuccesfully."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func postJoinActions(completion callback: @escaping (RoomConnection?, Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.sendAndCheckHeartBeat { [weak self] in"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.subscribeRemoval(removalCallback: nil)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.devicesCollectionRef.document(self.deviceId)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .updateData([FirestoreConstants.numPlayersKey: self.numOfPlayers])"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.heartbeatTimer \u003d Timer.scheduledTimer(withTimeInterval: 5, repeats: true, block: { [weak self] _ in"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self?.sendAndCheckHeartBeat(completion: nil)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.heartbeatTimer?.fire()"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(self, nil)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Sends the heartbeat for this device and then checks the heartbeat of devices on the room."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter callback: called after the heartbeat has been sent to the network."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func sendAndCheckHeartBeat(completion callback: (() -\u003e Void)?) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let currentTime \u003d Date().timeIntervalSince1970"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        devicesCollectionRef.document(deviceId)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            .setData([FirestoreConstants.lastHeartBeatKey: currentTime]) { _ in"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                callback?()"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self.checkHeartBeat(currentTime: currentTime)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Checks the heartbeat of devices on the network and removes any that have not been responsive for the predefined"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// amount of time."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter currentTime: The current time."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func checkHeartBeat(currentTime: TimeInterval) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        devicesCollectionRef.getDocuments { [weak self] (snapshot, error) in"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if let error \u003d error {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                print(\"Error reading device documents. \\(error.localizedDescription)\")"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let data \u003d snapshot else {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let deviceId \u003d self?.deviceId else {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            var roomMasterPresent \u003d false"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            for document in data.documents {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let deviceName \u003d document.documentID"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let lastHeartBeat \u003d document.get(FirestoreConstants.lastHeartBeatKey) as? TimeInterval else {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    self?.removeDevice(withId: deviceName)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                if currentTime - lastHeartBeat \u003e FirebaseRoomConnection.deadTime {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    self?.removeDevice(withId: deviceName)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if document.documentID \u003d\u003d self?.roomMasterId {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    roomMasterPresent \u003d true"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if !roomMasterPresent {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.removeDevice(withId: deviceId)"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func removeDevice(withId deviceName: String) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.devicesCollectionRef.document(deviceName).delete()"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.playersCollectionRef.whereField("
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            FirestoreConstants.playerDeviceKey, isEqualTo: deviceName).getDocuments { (snapshot, _) in"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                snapshot.documents.forEach {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    $0.reference.delete()"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if deviceName \u003d\u003d self.roomMasterId {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            FirebaseRoomConnection.deleteRoom(named: roomName)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Deletes the room with the given name"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter name: The name of the room to delete."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func deleteRoom(named name: String) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        Functions.functions()"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .httpsCallable(\"recursiveDelete\")"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .call([\"path\": FirestoreConstants.roomCollection.document(name).path],"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                  completion: { (_, error) in"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    if error !\u003d nil {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        FirebaseRoomConnection.deleteWithoutFirebaseFunction(roomNamed: name)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static func deleteWithoutFirebaseFunction(roomNamed name: String) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let emptyConnection \u003d FirebaseRoomConnection(forRoom: name)"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        emptyConnection.devicesCollectionRef.getDocuments(completion: FirebaseRoomConnection.deleteDocuments)"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        emptyConnection.playersCollectionRef.getDocuments(completion: FirebaseRoomConnection.deleteDocuments)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        emptyConnection.runTimeInfoCollectionRef.getDocuments(completion: FirebaseRoomConnection.deleteDocuments)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        emptyConnection.modelCollectionRef.getDocuments(completion: FirebaseRoomConnection.deleteDocuments)"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        func deleteTurnAction(from turn: Int) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            emptyConnection.turnActionsDocumentRef.collection(String(turn)).getDocuments { (snapshot, error) in"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if snapshot.documents.count \u003e 0 {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    deleteTurnAction(from: turn + 1)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                FirebaseRoomConnection.deleteDocuments(snapshot: snapshot, error: error)"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        deleteTurnAction(from: 0)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        emptyConnection.roomDocumentRef.delete()"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static func deleteDocuments(snapshot: QuerySnapshot?, error: Error?) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for document in snapshot.documents {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            document.reference.delete()"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame(initialState: GameState, background: Data, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let reference \u003d Storage.storage().reference().child(deviceId).child(\"background.png\")"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let path \u003d reference.fullPath"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        reference"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .putData(background, metadata: StorageMetadata()) { [weak self] (_, error) in"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard error \u003d\u003d nil, let self \u003d self else {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    print(error ?? \"Error starting game\")"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let batch \u003d FirestoreConstants.firestore.batch()"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let data \u003d try? FirestoreEncoder.init().encode(initialState) else {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    print(\"Error encoding game state\")"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "henry"
        },
        "content": "                batch.setData(data, forDocument: self.modelCollectionRef.document("
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "henry"
        },
        "content": "                    FirestoreConstants.initialStateDocumentName))"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                batch.updateData([FirestoreConstants.roomStartedKey: true,"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                  FirestoreConstants.backgroundUrlKey: path], forDocument: self.roomDocumentRef)"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                batch.commit(completion: callback)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(currentState: GameState, forTurn turn: Int, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try push(currentState,"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 to: modelCollectionRef.document(String(turn)),"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 encodeErrorMsg: FirestoreConstants.encodeStateErrorMsg,"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 completion: callback)"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMasterState(for turn: Int, callback: @escaping (GameState) -\u003e Void) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listeners.append(modelCollectionRef.document(String(turn)).addSnapshotListener { (snapshot, error) in"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let data \u003d snapshot?.data(),"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                error \u003d\u003d nil,"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let state \u003d try? FirestoreDecoder.init().decode(GameState.self, from: data) else {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback(state)"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listeners.append("
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            turnActionsDocumentRef.collection(String(turn)).addSnapshotListener { [weak self] (query, queryError) in"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.getTurnActions(from: query, error: queryError, callback: callback)"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Gets turn actions from a given query snapshot."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - query: The QuerySnapshot from Firestore."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - error: The error from the queyr."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - callback: The callback to call after the snapshot has been decoded."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func getTurnActions(from query: QuerySnapshot?, error: Error?,"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                callback: ([(String, [PlayerAction])], Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let snapshot \u003d query else {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback([], NetworkError.pullError(message: \"Snapshot is nil for turn actions\"))"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let queryError \u003d error {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback([], NetworkError.pullError(message: queryError.localizedDescription))"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let actions \u003d try snapshot.documents.map {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                ($0.documentID, try FirebaseDecoder.init().decode(PlayerActionBatch.self, from: $0.data()).actions)"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback(actions, nil)"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback([],"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     NetworkError.pullError(message: \"Error when decoding: \\(error.localizedDescription)\"))"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getTurnActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        turnActionsDocumentRef.collection(String(turn)).getDocuments { [weak self] (snapshot, error) in"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.getTurnActions(from: snapshot, error: error, callback: callback)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMembers(with callback: @escaping ([RoomMember]) -\u003e Void) {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        listeners.append(playersCollectionRef.addSnapshotListener { [weak self] (snapshot, error) in"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let snapshot \u003d snapshot, error \u003d\u003d nil, let self \u003d self else {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var players \u003d [RoomMember]()"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            for document in snapshot.documents {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let team \u003d document.get(FirestoreConstants.playerTeamKey) as? String"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let playerName \u003d document.get(FirestoreConstants.playerNameKey) as? String"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let isGameMaster \u003d document.get(FirestoreConstants.isGmKey) as? Bool"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let playerID \u003d document.documentID"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let deviceId \u003d document.get(FirestoreConstants.playerDeviceKey) as? String else {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    self.playersCollectionRef.document(document.documentID).delete()"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                var member \u003d RoomMember(identifier: playerID, playerName: playerName,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                        teamName: team, deviceId: deviceId)"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                member.isGameMaster \u003d isGameMaster ?? false"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                players.append(member)"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            callback(players)"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        })"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func push\u003cT: Codable\u003e(_ codable: T, to docRef: DocumentReference,"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                  encodeErrorMsg: String,"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                  completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let encoded \u003d try? FirestoreEncoder().encode(codable) else {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw NetworkError.encodeError(message: encodeErrorMsg)"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        docRef.setData(encoded, completion: callback)"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func push(actions: [PlayerAction], fromPlayer player: GenericPlayer,"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "              forTurnNumbered turn: Int, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// TODO: Change collection"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// Room doc -\u003e runtimeinfo(col) -\u003e TurnActions (doc) -\u003e Turn1...Turn999 (col)"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try push(PlayerActionBatch(playerName: player.name, actions: actions),"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 to: turnActionsDocumentRef.collection(String(turn)).document(player.name),"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 encodeErrorMsg: FirestoreConstants.encodeStateErrorMsg,"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                 completion: callback)"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(teams: [Team]) {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomDocumentRef.updateData([FirestoreConstants.teamsKey: teams.map { $0.name }])"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscibeToTeamNames(with callback: @escaping ([String]) -\u003e Void) {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.listeners.append(roomDocumentRef.addSnapshotListener({ (document, error) in"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let document \u003d document, error \u003d\u003d nil,"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let teamNames \u003d document.get(FirestoreConstants.teamsKey) as? [String] else {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            callback(teamNames)"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }))"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changeTeamName(for identifier: String, to teamName: String) throws {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try verify(reference: teamName)"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playersCollectionRef.document(identifier).updateData([FirestoreConstants.playerTeamKey: teamName])"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changePlayerName(for identifier: String, to playerName: String) throws {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try verify(reference: playerName)"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playersCollectionRef.document(identifier).updateData([FirestoreConstants.playerNameKey: playerName])"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func remove(player identifier: String) {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.numOfPlayers -\u003d 1"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.numOfPlayers \u003d self.numOfPlayers \u003e\u003d 0 ? self.numOfPlayers : 0"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        devicesCollectionRef.document(self.deviceId).updateData([FirestoreConstants.numPlayersKey: self.numOfPlayers])"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playersCollectionRef.document(identifier).delete()"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToStart(with callback: @escaping (GameState, Data) -\u003e Void) {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.listeners.append(modelCollectionRef.addSnapshotListener { [weak self] (snapshot, error) in"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let snapshot \u003d snapshot, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let document \u003d snapshot.documents"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .filter({ $0.documentID \u003d\u003d FirestoreConstants.initialStateDocumentName})"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                .first else {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let initialState \u003d try? FirestoreDecoder.init().decode(GameState.self, from: document.data()) else {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                print(\"Error decoding game state\")"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.roomDocumentRef.getDocument { (snapshot, error) in"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let snapshot \u003d snapshot, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let url \u003d snapshot.get(FirestoreConstants.backgroundUrlKey) as? String else {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                Storage.storage().reference(withPath: url)"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    .getData(maxSize: FirestoreConstants.maxImageSize) { (data, error) in"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        guard let data \u003d data, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                            return"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        callback(initialState, data)"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        })"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func changeRemovalCallback(to callback: @escaping () -\u003e Void) {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.removalCallback \u003d {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            callback()"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.listeners.forEach { $0.remove() }"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func verify(reference name: String) throws {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try NetworkFactory.verify(name)"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func disconnect() {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.heartbeatTimer?.invalidate()"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.removeDevice(withId: deviceId)"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 167,
      "henry": 5,
      "Jason Chong": 389
    }
  },
  {
    "path": "SailingThroughHistory/Network/Firestore/FirestoreRooms.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  GameRooms.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import FirebaseFirestore"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Collection of rooms on the Firestore database."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class FirestoreRooms: NetworkRooms {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var rooms \u003d [String]()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var callbacks \u003d [([String]) -\u003e Void]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var listener: ListenerRegistration?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.listener \u003d FirestoreConstants"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .roomCollection"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            .addSnapshotListener({ [unowned self] (snapshot, _) in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let snapshot \u003d snapshot else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.rooms \u003d []"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                for document in snapshot.documents {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let name \u003d document.documentID"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    FirestoreRoom.deleteIfNecessary(named: name)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    if !(document.data()[FirestoreConstants.roomStartedKey] as? Bool ?? false) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        self.rooms.append(name)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self.callbacks.forEach { $0(self.rooms) }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            })"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with callback: @escaping ([String]) -\u003e Void) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(self.rooms)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callbacks.append(callback)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    deinit {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        listener?.remove()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 45
    }
  },
  {
    "path": "SailingThroughHistory/Network/Local/LocalRoomConnection.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  LocalRoomConnection.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// A room connection that is locally stored on the device."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class LocalRoomConnection: RoomConnection {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var roomMasterId: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var roomMemberCallbacks \u003d [([RoomMember]) -\u003e Void]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var roomMembers \u003d [RoomMember]() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            roomMemberCallbacks.forEach { $0(roomMembers) }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var gameStartCallbacks \u003d [(GameState, Data) -\u003e Void]()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var initialState: (state: GameState, background: Data)? {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let initialState \u003d initialState else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            gameStartCallbacks.forEach { $0(initialState.state, initialState.background) }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var currentState \u003d [Int: GameState]()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var currentStateCallbacks \u003d [Int: [(GameState) -\u003e Void]]()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var actionCallbacks \u003d [Int: [([(String, [PlayerAction])], Error?) -\u003e Void]]()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var actions \u003d [Int: [(String, [PlayerAction])]]()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var teams \u003d [String]() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            teamCallbacks.forEach { $0(teams) }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var teamCallbacks \u003d [([String]) -\u003e Void]()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(deviceId: String) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.roomMasterId \u003d deviceId"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func addPlayer() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let member \u003d RoomMember(identifier: \"\\(roomMembers.count)-Play\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            playerName: nil, teamName: nil, deviceId: roomMasterId)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomMembers.append(member)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame(initialState: GameState, background: Data, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.initialState \u003d (state: initialState, background: background)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(nil)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(currentState: GameState, forTurn turn: Int, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.currentState[turn] \u003d currentState"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.currentStateCallbacks[turn, default: []].forEach { $0(currentState) }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(nil)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMasterState(for turn: Int, callback: @escaping (GameState) -\u003e Void) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        currentStateCallbacks[turn, default: []].append(callback)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let state \u003d currentState[turn] else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(state)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actionCallbacks[turn, default: []].append(callback)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(actions[turn, default: []], nil)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMembers(with callback: @escaping ([RoomMember]) -\u003e Void) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomMemberCallbacks.append(callback)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(roomMembers)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(actions: [PlayerAction], fromPlayer player: GenericPlayer, forTurnNumbered turn: Int,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "              completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.actions[turn, default: []].append((player.name, actions))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.actionCallbacks[turn, default: []].forEach { $0(self.actions[turn, default: []], nil) }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(nil)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(teams: [Team]) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.teams \u003d teams.map { $0.name }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscibeToTeamNames(with callback: @escaping ([String]) -\u003e Void) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        teamCallbacks.append(callback)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(teams)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToStart(with callback: @escaping (GameState, Data) -\u003e Void) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameStartCallbacks.append(callback)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let initialState \u003d self.initialState else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(initialState.state, initialState.background)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changeTeamName(for identifier: String, to teamName: String) throws {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for (index, member) in roomMembers.enumerated() where member.identifier \u003d\u003d identifier {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            roomMembers[index] \u003d RoomMember(identifier: member.identifier,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                            playerName: member.playerName,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                            teamName: teamName,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                            deviceId: member.deviceId)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changePlayerName(for identifier: String, to playerName: String) throws {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for (index, member) in roomMembers.enumerated() where member.identifier \u003d\u003d identifier {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            roomMembers[index] \u003d RoomMember(identifier: member.identifier,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                            playerName: playerName,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                            teamName: member.teamName,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                            deviceId: member.deviceId)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func remove(player: String) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        roomMembers \u003d roomMembers.filter { $0.identifier !\u003d player }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func changeRemovalCallback(to callback: @escaping () -\u003e Void) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Removal callback should never be triggered in a local game."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getTurnActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(actions[turn] ?? [], nil)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func verify(reference: String) throws {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func disconnect() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 22,
      "henry": 1,
      "Jason Chong": 120
    }
  },
  {
    "path": "SailingThroughHistory/Network/NetworkError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  NetworkError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum NetworkError: Error {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case pushError(message: String)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case encodeError(message: String)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case pullError(message: String)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 13
    }
  },
  {
    "path": "SailingThroughHistory/Network/NetworkFactory.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  NetworkFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Factory for creating objects in the Network module."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum NetworkFactory {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func createRoomInstance(named name: String) throws -\u003e Room {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try verify(name)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return FirestoreRoom(named: name)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    static func createNetworkRoomsInstance() -\u003e NetworkRooms {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return FirestoreRooms()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static func verify(_ name: String) throws {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard !name.isEmpty else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.invalidName(message: \"Empty name.\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard name.count \u003c 255 else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.invalidName(message: \"Name is too long.\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard name.range(of: \"[^a-zA-Z0-9-]\", options: .regularExpression) \u003d\u003d nil else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            throw StorageError.invalidName(message: \"Name contains invalid symbol. Only alphanumeric and - is allowed.\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 16,
      "Jason Chong": 17
    }
  },
  {
    "path": "SailingThroughHistory/Network/NetworkRooms.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  NetworkRooms.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Protocol for a collection of rooms in the network."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol NetworkRooms {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscribe to name of rooms on the network."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter callback: called with an array of all names of rooms on the network on subsciption and whenever"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///                       the collection changes."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with callback: @escaping ([String]) -\u003e Void)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 16
    }
  },
  {
    "path": "SailingThroughHistory/Network/Room.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Room.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// A wrapper for information of a room on the network. To be used for getting available rooms in the network."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol Room {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var name: String { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getConnection(completion callback: @escaping (RoomConnection?, Error?) -\u003e Void)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 14
    }
  },
  {
    "path": "SailingThroughHistory/Network/RoomConnection.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Network.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 26/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "/// Protocol for a connection to a network for a room."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol RoomConnection {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Identifier of the room master device."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var roomMasterId: String { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Adds a player for this device"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func addPlayer()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Starts and notifies all connected devices that the game has started"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - initialState: The initial game state of the game."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - background: The data for the background image of the game."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - callback: callback to be called after the data has been uploaded"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Throws: If GameState cannot be encoded."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame(initialState: GameState, background: Data, completion callback: @escaping (Error?) -\u003e Void) throws"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Pushes the current state into the network, for the given turn."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - currentState: The current state of the game."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - turn: The current turn number."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - callback: callback to be called after the data has been uploaded"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Throws: If the GameState cannot be encoded."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(currentState: GameState, forTurn turn: Int, completion callback: @escaping (Error?) -\u003e Void) throws"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscribes to the player actions for the input turn. The callback will be called whenever the actions for that"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// turn changes."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - turn: The turn number to listen to."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - callback: allback will be called whenever the actions for that turn changes."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscribes to the members of the room. The callback will be called whenever the room members change."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter callback: callback will be called whenever the room members change."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMembers(with callback: @escaping ([RoomMember]) -\u003e Void)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Push the actions for the current turn to the network."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - actions: PlayerActions to push"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - player: player who carried out the actions"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - turn: turn number"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - callback: will be called once the data has been pushed to the network."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Throws: If actions cannot be encoded."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func push(actions: [PlayerAction], fromPlayer player: GenericPlayer,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "              forTurnNumbered turn: Int,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "              completion callback: @escaping (Error?) -\u003e Void) throws"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Sets the teams of the room."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter teams: The new teams of the room"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(teams: [Team])"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscibes to any change in team names of the room."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter callback: called when team name changes and on initial subscribe."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscibeToTeamNames(with callback: @escaping ([String]) -\u003e Void)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscibes to start of the game."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter callback: Called with game state and background image data when the game starts."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToStart(with callback: @escaping (GameState, Data) -\u003e Void)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Change the team name of a player."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - identifier: The player\u0027s identifier"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - teamName: The new team name for the player."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Throws: if the player information cannot be encoded."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changeTeamName(for identifier: String, to teamName: String) throws"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Change the name of a player."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - identifier: The player\u0027s identifier"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - playerName: The new name of the player\\"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Throws: if the player information cannot be encoded."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changePlayerName(for identifier: String, to playerName: String) throws"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Remove player with the given identifier."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter player: The identifier of the player to remove"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func remove(player: String)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Get turn actions for a given turn."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - turn: The number of the turn"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - callback: Called with the turn actions after they have been retrieved from the network."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getTurnActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Change the callback to be called when this device has been removed from the room."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter callback: the new callback"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func changeRemovalCallback(to callback: @escaping () -\u003e Void)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Subscribe to the state of the room master on the given turn."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameters:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - turn: The turn number"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///   - callback: called with the master\u0027s game state whenever it changes and on subsciption."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMasterState(for turn: Int, callback: @escaping (GameState) -\u003e Void)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Verifies if the string is a valid team or player name."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    ///"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// - Parameter reference: The reference to verify"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func verify(reference: String) throws"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// Disconnect from the network."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func disconnect()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "Yang Shuqi": 9,
      "Jason Chong": 115
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/GameRoom.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  WaitingRoom.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 1/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class GameRoom {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var observers \u003d [(callback: ([RoomMember]) -\u003e Void, observer: AnyObject?)]()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var players: [RoomMember] {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observers \u003d observers.filter { $0.observer !\u003d nil }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            observers.forEach {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                $0.callback(players)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var roomMaster: String?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var parameters: GameParameter? {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            updateTeamList()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var connection: RoomConnection"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var teamNames \u003d [String]()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let identifier: String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameMaster: String?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(fromConnection connection: RoomConnection) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let deviceId \u003d UIDevice.current.identifierForVendor?.uuidString else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Device has no uuid\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.identifier \u003d deviceId"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.players \u003d []"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.connection \u003d connection"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.subscribeToMembers { [weak self] in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            var players \u003d $0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            for (index, player) in players.enumerated() where player.identifier \u003d\u003d self?.gameMaster {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                players[index].isGameMaster \u003d true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.players \u003d players"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.subscibeToTeamNames { [weak self] in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.teamNames \u003d $0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToMembers(with callback: @escaping ([RoomMember]) -\u003e Void, observer: AnyObject?) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        observers.append((callback: callback, observer: observer))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(players)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func isRoomMaster() -\u003e Bool {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return identifier \u003d\u003d connection.roomMasterId"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func disconnect() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        connection.disconnect()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changeTeam(of identifier: String) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard teamNames.count \u003e 0,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let playerIndex \u003d players.firstIndex(where: { $0.identifier \u003d\u003d identifier }) else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let player \u003d players[playerIndex]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let newTeamIndex \u003d ((teamNames.index(of: player.teamName ?? \"\") ?? 0) + 1) % teamNames.count"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let newTeamName \u003d teamNames[newTeamIndex]"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try? connection.changeTeamName(for: player.identifier, to: newTeamName)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func changeName(of identifier: String, to newName: String) throws {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let playerIndex \u003d players.firstIndex(where: { $0.identifier \u003d\u003d identifier }) else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let player \u003d players[playerIndex]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        try connection.changePlayerName(for: player.identifier, to: newName)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func remove(player playerName: String) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        connection.remove(player: playerName)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func makeGameMaster(_ identifier: String) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard isRoomMaster(),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let playerIndex \u003d players.firstIndex(where: { $0.identifier \u003d\u003d identifier }) else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for index in players.indices {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            players[index].isGameMaster \u003d false"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameMaster \u003d identifier"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        players[playerIndex].isGameMaster \u003d true"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func updateTeamList() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard isRoomMaster(),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let parameters \u003d parameters else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.set(teams: parameters.teams)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 22,
      "Jason Chong": 88
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/MembersTableDataSource.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PlayersTableDataSource.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 1/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class MembersTableDataSource: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private let deviceId: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private let mainController: WaitingRoomViewController"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private static let reuseIdentifier \u003d \"waitingRoomCell\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let view: UITableView"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var waitingRoom: GameRoom"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(withView view: UITableView, withRoom waitingRoom: GameRoom, mainController: WaitingRoomViewController) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let deviceId \u003d UIDevice.current.identifierForVendor?.uuidString else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            fatalError(\"Device has no uuid\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view \u003d view"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.waitingRoom \u003d waitingRoom"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.mainController \u003d mainController"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.waitingRoom.subscribeToMembers(with: { _ in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            view.reloadData()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }, observer: self)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return waitingRoom.players.count"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let cell \u003d tableView.dequeueReusableCell(withIdentifier: MembersTableDataSource.reuseIdentifier,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                       for: indexPath)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            as? WaitingRoomViewCell else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                fatalError(\"Cells are not instances of RoomViewCell\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let player \u003d waitingRoom.players[indexPath.row]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.changeButtonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self?.waitingRoom.changeTeam(of: player.identifier)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.removeButtonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self?.waitingRoom.remove(player: player.identifier)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.set(playerName: player.playerName)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.renameButtonPressedCallback \u003d { [weak self] name in"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                try self?.waitingRoom.changeName(of: player.identifier, to: name)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            } catch {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let error \u003d error as? StorageError"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Rename Failed.\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                            withMsg: error?.getMessage() ?? \"Error renaming player.\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                            action: { cell.set(playerName: player.playerName) })"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self?.mainController.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let isMaster \u003d waitingRoom.isRoomMaster()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if isMaster {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            cell.makeGameMasterButtonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self?.waitingRoom.makeGameMaster(player.identifier)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.enableButton( isMaster || player.deviceId \u003d\u003d self.deviceId)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        cell.disableTextField()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if player.isGameMaster {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            cell.set(teamName: \"Game Master\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            cell.set(teamName: player.teamName ?? \"No team\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 36,
      "Jason Chong": 40
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/RoomMember.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  WaitingRoomPlayer.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 1/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "struct RoomMember {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let identifier: String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let playerName: String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let teamName: String?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let deviceId: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var isGameMaster \u003d false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var hasTeam: Bool {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return teamName !\u003d nil"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    init(identifier: String, playerName: String?, teamName: String?, deviceId: String) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.identifier \u003d identifier"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.playerName \u003d playerName ?? String(identifier.prefix(8))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.teamName \u003d teamName"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 4,
      "Jason Chong": 21
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/RoomViewCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  RoomViewCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class RoomViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var joinButtonPressed: UIButton!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var roomNameLabel: UILabel!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var joinButtonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func joinButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        joinButtonPressedCallback?()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func set(roomName: String) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomNameLabel.text \u003d roomName"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 23
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/Rooms.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Rooms.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class Rooms {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var rooms \u003d [Room]() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.subscriptions.forEach { $0(rooms) }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var subscriptions \u003d [([Room]) -\u003e Void]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var networkRooms: NetworkRooms \u003d NetworkFactory.createNetworkRoomsInstance()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.networkRooms.subscribe { [weak self] roomNames in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            var rooms \u003d [Room]()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            for roomName in roomNames {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                guard let room \u003d try? NetworkFactory.createRoomInstance(named: roomName) else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                rooms.append(room)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.rooms \u003d rooms"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribe(with callback: @escaping ([Room]) -\u003e Void) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        callback(rooms)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        subscriptions.append(callback)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 7,
      "Jason Chong": 28
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/RoomsMenuViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  File.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class RoomsMenuViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet weak var roomsTableView: UITableView!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var backButton: UIButtonRounded! {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            backButton.set(color: .red)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var dataSource \u003d RoomsTableDataSource(withView: roomsTableView, mainController: self)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private var roomConnection: RoomConnection?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomsTableView.dataSource \u003d dataSource"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomsTableView.reloadData()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        activityIndicator.isHidden \u003d true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func createRoomButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let alert \u003d ControllerUtils.getTextfieldAlert(title: \"Input name: \", desc: \"\", textPlaceHolder: \"Input name here.\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            okAction:  { [weak self] roomName in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let room: Room"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                room \u003d try NetworkFactory.createRoomInstance(named: roomName)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self?.join(room: room)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            } catch {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let error \u003d error as? StorageError"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Create Room Failed.\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                            withMsg: error?.getMessage() ?? \"Error connectiong to room.\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }, cancelAction: nil)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func backButtonPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func join(room: Room) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        activityIndicator.startAnimating()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        activityIndicator.isHidden \u003d false"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        room.getConnection { [weak self] (connection, error) in"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let connection \u003d connection, error \u003d\u003d nil else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error joining room.\", withMsg: \"\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self?.activityIndicator.stopAnimating()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self?.activityIndicator.isHidden \u003d true"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.roomConnection \u003d connection"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.performSegue(withIdentifier: \"roomsToWaitingRoom\", sender: nil)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self?.activityIndicator.stopAnimating()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self?.activityIndicator.isHidden \u003d true"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.prepare(for: segue, sender: sender)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard segue.identifier \u003d\u003d \"roomsToWaitingRoom\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let nextController \u003d segue.destination as? WaitingRoomViewController,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let roomConnection \u003d self.roomConnection else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                print(\"Segue to waiting room failed.\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        nextController.roomConnection \u003d roomConnection"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 34,
      "Jason Chong": 47
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/RoomsTableDataSource.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  RoomsTableDataSource.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class RoomsTableDataSource: NSObject, UITableViewDataSource {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private static let reuseIdentifier \u003d \"roomCell\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let view: UITableView"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var rooms: Rooms"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let mainController: RoomsMenuViewController"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(withView view: UITableView, mainController: RoomsMenuViewController) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.view \u003d view"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.rooms \u003d Rooms()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.mainController \u003d mainController"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.rooms.subscribe { _ in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            view.reloadData()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -\u003e Int {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return rooms.rooms.count"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -\u003e UITableViewCell {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let cell \u003d tableView.dequeueReusableCell(withIdentifier: RoomsTableDataSource.reuseIdentifier,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                       for: indexPath)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            as? RoomViewCell else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                fatalError(\"Cells are not instances of RoomViewCell\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let room \u003d rooms.rooms[indexPath.row]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.joinButtonPressedCallback \u003d { [weak self] in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.mainController.join(room: room)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        cell.set(roomName: room.name)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return cell"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 44
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/WaitingRoomCell.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  WaitingRoomCell.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/10/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class WaitingRoomViewCell: UITableViewCell {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet private weak var renameButton: UIButton!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet private weak var changeButton: UIButton!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var makeGameMasterButton: UIButton!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet private weak var removeButton: UIButton!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playerNameTextField: UITextField! {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            playerNameTextField.delegate \u003d self"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var teamNameLabel: UILabel!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var changeButtonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var removeButtonPressedCallback: (() -\u003e Void)?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var renameButtonPressedCallback: ((String) -\u003e Void)?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var makeGameMasterButtonPressedCallback: (() -\u003e Void)? {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            makeGameMasterButton.isHidden \u003d makeGameMasterButtonPressedCallback \u003d\u003d nil"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction func renameButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if playerNameTextField.isEnabled {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            submitName()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            playerNameTextField.isEnabled \u003d true"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            playerNameTextField.borderStyle \u003d .line"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            playerNameTextField.becomeFirstResponder()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func submitName() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !playerNameTextField.isEnabled {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerNameTextField.isEnabled \u003d false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerNameTextField.borderStyle \u003d .none"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let newName \u003d playerNameTextField.text else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        renameButtonPressedCallback?(newName)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction private func changeButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        changeButtonPressedCallback?()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBAction private func removeButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        removeButtonPressedCallback?()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction private func makeGameMasterButtonPressed(_ sender: UIButton) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        makeGameMasterButtonPressedCallback?()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(playerName: String) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerNameTextField.text \u003d playerName"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func set(teamName: String) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        teamNameLabel.text \u003d teamName"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func enableButton(_ bool: Bool) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        changeButton.isEnabled \u003d bool"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        removeButton.isEnabled \u003d bool"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        renameButton.isEnabled \u003d bool"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func disableTextField() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerNameTextField.borderStyle \u003d .none"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerNameTextField.isEnabled \u003d false"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "extension WaitingRoomViewCell: UITextFieldDelegate {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func textFieldShouldReturn(_ textField: UITextField) -\u003e Bool {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        textField.resignFirstResponder()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        submitName()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 58,
      "Jason Chong": 34
    }
  },
  {
    "path": "SailingThroughHistory/Rooms/WaitingRoomViewController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  WaitingRoomViewController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 1/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import UIKit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class WaitingRoomViewController: UIViewController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    @IBOutlet weak var joinPlayerButton: UIButtonRounded!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var chooseLevelButton: UIButtonRounded!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet private weak var playersTableView: UITableView!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBOutlet weak var backButton: UIButtonRounded! {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            backButton.set(color: .red)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var dataSource: MembersTableDataSource?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var roomConnection: RoomConnection?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var gameRoom: GameRoom?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var initialState: GenericGameState?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var imageData: Data?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func viewDidAppear(_ animated: Bool) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        roomConnection?.changeRemovalCallback { [weak self] in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"You are removed from room.\", withMsg: \"\", action: {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self?.dismissWithDisconnect()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            })"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        super.viewDidAppear(animated)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func viewDidLoad() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.viewDidLoad()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.activityIndicator.isHidden \u003d true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let roomConnection \u003d roomConnection else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Error getting connection\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"\") { [weak self] in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                                            self?.dismissWithDisconnect()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let waitingRoom \u003d GameRoom(fromConnection: roomConnection)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        subscribeToGameStart()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.gameRoom \u003d waitingRoom"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        dataSource \u003d MembersTableDataSource(withView: playersTableView, withRoom: waitingRoom, mainController: self)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        playersTableView.dataSource \u003d dataSource"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func chooseLevelPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !getWaitingRoom().isRoomMaster() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            showNotAuthorizedAlert()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        performSegue(withIdentifier: \"waitingRoomToGallery\", sender: nil)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func backButtonPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        dismissWithDisconnect()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func joinPlayerPressed(_ sender: Any) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomConnection?.addPlayer()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.prepare(for: segue, sender: sender)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch segue.identifier {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case \"waitingRoomToGallery\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            prepareForSegueToGallery(segue: segue)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case \"waitingRoomToGame\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            prepareForSegueToGame(segue: segue)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            break"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func prepareForSegueToGallery(segue: UIStoryboardSegue) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard segue.identifier \u003d\u003d \"waitingRoomToGallery\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let galleryController \u003d segue.destination as? GalleryViewController else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        galleryController.selectedCallback \u003d { [weak self] gameParameter in"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self?.gameRoom?.parameters \u003d gameParameter"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func prepareForSegueToGame(segue: UIStoryboardSegue) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let roomConnection \u003d roomConnection,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let initialState \u003d initialState,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let imageData \u003d imageData,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let gameController \u003d segue.destination as? MainGameViewController else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let turnSystemState \u003d TurnSystemState(gameState: initialState, joinOnTurn: 0)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let networkInfo \u003d NetworkInfo(getWaitingRoom().identifier,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                      getWaitingRoom().isRoomMaster())"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let network \u003d TurnSystemNetwork("
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            roomConnection: roomConnection,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            playerActionAdapterFactory: PlayerActionAdapterFactory(),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            networkInfo: networkInfo,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            turnSystemState: turnSystemState)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let system \u003d TurnSystem(network: network,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                playerInputControllerFactory:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                PlayerInputControllerFactory())"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameController.turnSystem \u003d system"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameController.network \u003d roomConnection"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        gameController.backgroundData \u003d imageData"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    @IBAction func startGamePressed(_ sender: Any) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !getWaitingRoom().isRoomMaster() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            showNotAuthorizedAlert()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let (parameters, imageData) \u003d getGameData() else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// TODO: Remove hardcoded year"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        activityIndicator.startAnimating()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        activityIndicator.isHidden \u003d false"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let state \u003d GameState(baseYear: 1900, level: parameters, players: getWaitingRoom().players)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try roomConnection?.startGame(initialState: state, background: imageData) { [weak self] error in"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self?.activityIndicator.stopAnimating()"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                self?.activityIndicator.isHidden \u003d true"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                guard let error \u003d error else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                print(error)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Failed to start game.\","
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                            withMsg: \"Please try again later.\")"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                self?.present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Failed to start game.\","
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"Error in game level.\")"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            self.activityIndicator.stopAnimating()"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            activityIndicator.isHidden \u003d true"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func getGameData() -\u003e (parameters: GameParameter, imageData: Data)? {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard !getWaitingRoom().players.isEmpty else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"No players are registered.\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"You cannot start a game with no players.\")"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let parameters \u003d getWaitingRoom().parameters else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Missing Level.\","
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"Please choose a level first.\")"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let imageData \u003d LocalStorage().readImageData(parameters.map.map) else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let alert \u003d ControllerUtils.getGenericAlert(titled: \"Missing Image.\","
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        withMsg: \"Please choose a valid level first.\")"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var gmFound \u003d false"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var names \u003d Set\u003cString\u003e()"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for member in getWaitingRoom().players {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if names.contains(member.playerName) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"Duplicate name found\","
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                            withMsg: \"Each player must have a unique name.\")"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            if member.isGameMaster {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                if gmFound {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    let alert \u003d ControllerUtils.getGenericAlert(titled: \"More than one GM found\","
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                        withMsg: \"There can only be at most 1 Game Master.\")"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    return nil"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                gmFound \u003d true"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } else if !member.hasTeam {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                let alert \u003d ControllerUtils.getGenericAlert(titled: \"\\(member.identifier) has no team.\","
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                    withMsg: \"Please make sure everyone has a team.\")"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            names.insert(member.playerName)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return (parameters: parameters, imageData: imageData)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func subscribeToGameStart() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let roomConnection \u003d roomConnection else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            preconditionFailure(\"No connection to room.\")"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        roomConnection.subscribeToStart { [weak self] (state, imageData) in"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                return"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.imageData \u003d imageData"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.initialState \u003d state"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self.performSegue(withIdentifier: \"waitingRoomToGame\", sender: nil)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getWaitingRoom() -\u003e GameRoom {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let waitingRoom \u003d gameRoom else {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            fatalError(\"Waiting room is nil.\")"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return waitingRoom"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func showNotAuthorizedAlert() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let alert \u003d ControllerUtils.getGenericAlert(titled: \"Action not allowed.\","
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                    withMsg: \"You are not the room master.\")"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        present(alert, animated: true, completion: nil)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func dismissWithDisconnect() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.dismiss(animated: true, completion: nil)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        self.gameRoom?.disconnect()"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 35,
      "Jason Chong": 191,
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/Stubs/GenericItemStub.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericItemStub.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class GenericItemStub: GenericItem {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    let name: String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var itemParameter: ItemParameter"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weight: Int {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        return itemParameter.unitWeight * quantity"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var quantity: Int"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isAvailableAtPort \u003d true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var doesItemDecay \u003d true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var buyValue \u003d 100"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var sellValue \u003d 100"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(name: String, itemParameter: ItemParameter, quantity: Int) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.name \u003d name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemParameter \u003d itemParameter"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setItemParameter(_ itemParameter: ItemParameter) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    func combine(with item: inout GenericItem) -\u003e Bool {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    func remove(amount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard quantity \u003e\u003d amount else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "            let deficit \u003d amount - quantity"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "            quantity \u003d 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "            return deficit"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        quantity -\u003d amount"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        return 0"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setQuantity(quantity: Int) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.quantity \u003d quantity"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getBuyValue(at port: Port) -\u003e Int? {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        return buyValue"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(at port: Port) -\u003e Int? {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        return sellValue"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    func copy() -\u003e GenericItemStub {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        let newCopy \u003d GenericItemStub(name: name, itemParameter: itemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.itemParameter \u003d itemParameter"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.isAvailableAtPort \u003d isAvailableAtPort"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.doesItemDecay \u003d doesItemDecay"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.buyValue \u003d buyValue"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        newCopy.sellValue \u003d sellValue"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        return newCopy"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 68,
      "Yang Shuqi": 2
    }
  },
  {
    "path": "SailingThroughHistory/Stubs/GenericPlayerStub.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GenericPlayerStub.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 14/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class GenericPlayerStub: GenericPlayer {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    var isGameMaster \u003d false"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var name: String \u003d \"\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var team: Team?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var money: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var currentCargoWeight: Int \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var weightCapacity: Int \u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var state: GameVariable\u003cPlayerState\u003e \u003d GameVariable(value: PlayerState.endTurn)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node: Node?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodeIdVariable: GameVariable\u003cInt\u003e \u003d GameVariable(value: 0)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    var hasRolled: Bool \u003d false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    var deviceId: String \u003d \"\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var map: Map?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    var gameState: GenericGameState?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    var playerShip: ShipAPI?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    var homeNode: Int \u003d 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let errorMessage \u003d \"Stub cannot perform normal actions\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addShipsToMap(map: Map) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(to amount: Int) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    func updateMoney(by amount: Int) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        money.value +\u003d amount"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canBuyUpgrade() -\u003e Bool {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToItems(with observer: @escaping (GenericPlayer, [GenericItem]) -\u003e Void) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToCargoWeight(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToWeightCapcity(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    func subscribeToMoney(with observer: @escaping (GenericPlayer, Int) -\u003e Void) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "    func startTurn(speedMultiplier: Double, map: Map?) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buyUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    func roll() -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "    func move(nodeId: Int) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPath(to nodeId: Int) -\u003e [Int] {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getNodesInRange(roll: Int) -\u003e [Node] {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canDock() -\u003e Bool {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "    func dock() throws {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPirateEncounterChance(at node: Int) -\u003e Double {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getPurchasableItemParameters() -\u003e [ItemParameter] {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getMaxPurchaseAmount(itemParameter: ItemParameter) -\u003e Int {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemParameter: ItemParameter, quantity: Int) throws {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(item: GenericItem) throws {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemParameter: ItemParameter, quantity: Int) throws {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "    func setTax(port: Port, amount: Int) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "    func endTurn() -\u003e [InfoMessage] {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "    func canTradeAt(port: Port) -\u003e Bool {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(errorMessage)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 139,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Stubs/NodeStub.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  NodeStub.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class NodeStub: Node {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(name: String, identifier: Int) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d identifier"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        let frame \u003d Rect(originX: 0, originY: 0, height: 0, width: 0)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(name: name, frame: frame)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        try super.init(from: decoder)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 22
    }
  },
  {
    "path": "SailingThroughHistory/Stubs/PortStub.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  File.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/16/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class PortStub: Port {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var isAvailabilityHidden \u003d false"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var buyValueOfAllItems \u003d 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var sellValueOfAllItems \u003d 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    convenience init() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.init(team: nil, name: \"\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    required override init(team: Team?, name: String, originX: Double, originY: Double) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.init(team: nil, name: \"\", originX: originX, originY: originY)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        itemBuyValue.removeAll()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        itemSellValue.removeAll()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    convenience init(buyValueOfAllItems: Int, sellValueOfAllItems: Int) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.init(team: nil, name: \"\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        isAvailabilityHidden \u003d true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.buyValueOfAllItems \u003d buyValueOfAllItems"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.sellValueOfAllItems \u003d sellValueOfAllItems"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    convenience init(buyValueOfAllItems: Int, sellValueOfAllItems: Int, itemParameters: [ItemParameter]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.init(team: nil, name: \"\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        for itemParameter in itemParameters {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "            setBuyValue(of: itemParameter, value: buyValueOfAllItems)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "            setSellValue(of: itemParameter, value: sellValueOfAllItems)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getBuyValue(of type: ItemParameter) -\u003e Int? {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard isAvailabilityHidden else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "            return super.getBuyValue(of: type)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        return buyValueOfAllItems"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func getSellValue(of type: ItemParameter) -\u003e Int? {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard isAvailabilityHidden else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "            return super.getSellValue(of: type)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        return sellValueOfAllItems"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 13,
      "henry": 44,
      "Jason Chong": 1
    }
  },
  {
    "path": "SailingThroughHistory/Stubs/WeatherStub.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  WeatherStub.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class WeatherStub: Weather {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var newWindVelocity: Float"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(windVelocity: Float) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        newWindVelocity \u003d windVelocity"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        fatalError(\"init(from:) has not been implemented\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func applyVelocityModifier(to oldVelocity: Float, with modifier: Float) -\u003e Float {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        return oldVelocity + newWindVelocity"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func update(currentMonth: Int) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 29
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Data/GameTime.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "class GameTime: Codable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "    // TODO"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "    let baseYear: Int"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // 1-based index"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var week: Int {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "        return Int(actualWeeks) % GameConstants.weeksInMonth"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var month: Int {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "        return (Int(actualWeeks) / 4) % GameConstants.monthsInYear"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var year: Int {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "        return baseYear + Int(actualWeeks) / GameConstants.monthsInYear * GameConstants.weeksInMonth"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var actualWeeks \u003d 0.0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(baseYear: Int) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.baseYear \u003d baseYear"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    required init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        let values \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        try baseYear \u003d values.decode(Int.self, forKey: .actualWeeks)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        try actualWeeks \u003d values.decode(Double.self, forKey: .actualWeeks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(baseYear, forKey: .baseYear)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        try container.encode(actualWeeks, forKey: .actualWeeks)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    private enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        case baseYear"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        case actualWeeks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    func reset() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        actualWeeks \u003d 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    func addWeeks(_ weeks: Double) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        actualWeeks +\u003d weeks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func before(other: GameTime) -\u003e Bool {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return actualWeeks \u003c\u003d other.actualWeeks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 30,
      "yuhongherald": 19
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Data/Protocols/Printable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Printable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Printable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Data/Protocols/SerializableGameObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SerializableGameObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol SerializableGameObject: ComparableOp, Operatable, Printable, Unique {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var fields: [String] { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getField(field: String) -\u003e Any?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func setField(field: String, object: Any?) -\u003e Bool"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 13
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Data/Protocols/Unique.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Unique.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Unique: class {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var identifier: Int { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/EngineConstants.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameConstants.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum EngineConstants {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let largestTimeStep: Double \u003d 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let forecastDuration: Double \u003d 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let weeksToSeconds: Double \u003d 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let fastestGameSpeed: Double \u003d 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let slowestGameSpeed: Double \u003d 0.5"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let smallestEngineTick: Double \u003d 0.01"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum GameConstants {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let weeksInMonth: Int \u003d 4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let monthsInYear: Int \u003d 12"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let playerTurnDuration: Double \u003d 120"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static let numOfTurn: Int \u003d 20"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let monsoonMultiplier: Double \u003d 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static let britishTeam: String \u003d \"British\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    static let dutchTeam: String \u003d \"Dutch\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum Resources {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Weather {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let monsoon: [String] \u003d [\"sea-node.png\"]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Ships {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let british: [String] \u003d [\"ship\"]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let dutch: [String] \u003d [\"ship\"]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let pirate: [String] \u003d [\"pirate-node\"]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let npc: [String] \u003d [\"ship\"]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Avatars {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let british: String \u003d \"\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let dutch: String \u003d \"\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let pirate: String \u003d \"\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let npc: String \u003d \"\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Items {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let opium: String \u003d \"\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let perfume: String \u003d \"\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let silk: String \u003d \"\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let teaLeaves: String \u003d \"\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Misc {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let currency: String \u003d \"\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let portNode: String \u003d \"port-node\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        static let pirateNode: String \u003d \"pirate-node\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // static let edge: String \u003d \"\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Flag {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let british: String \u003d \"british-flag.png\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let dutch: String \u003d \"dutch-flag.png\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static func of(_ team: Team) -\u003e String {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            switch team.name {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case GameConstants.britishTeam:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Flag.british"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case GameConstants.dutchTeam:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Flag.dutch"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return \"\" // For NPC no flag"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Icon {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let port: String \u003d \"port-node.png\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let sea: String \u003d \"sea-node.png\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let pirate: String \u003d \"pirate-node.png\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let weather: String \u003d \"weather-icon.png\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let ship: String \u003d \"ship.png\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let npc: String \u003d \"npc.png\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static func of(_ object: Any) -\u003e String? {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            switch object {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case is Port:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Icon.port"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case is Sea:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Icon.sea"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case is PirateIsland:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Icon.pirate"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case is Weather:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Icon.weather"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "            case is ShipUI:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Icon.ship"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            case is NPC:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return Resources.Icon.npc"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "enum Default {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Item {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let buyValue: Int \u003d 100"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let sellValue: Int \u003d 100"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Weather {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        static let strengths: [Float] \u003d [0.5, 0, 1.5, 2]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Suffix {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        static let background: String \u003d \"background\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    enum Background {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        static let image: String \u003d \"worldmap1815.jpg\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 62,
      "henry": 1,
      "Jason Chong": 2,
      "yuhongherald": 53
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/BAEEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  BAEEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class BAEEvaluatable\u003cT\u003e: Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let first: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let evaluator: GenericOperator"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let second: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var defaultValue: T"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: T {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return evaluator.evaluate(first: first.value, second: second.value) as? T ?? defaultValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            defaultValue \u003d newValue"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(first: Evaluatable\u003cT\u003e, second: Evaluatable\u003cT\u003e, evaluator: GenericOperator,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         defaultValue: T) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.first \u003d first"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.second \u003d second"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.evaluator \u003d evaluator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.defaultValue \u003d defaultValue"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(defaultValue)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 31
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/ConditionEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ConditionEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class ConditionEvaluatable\u003cT\u003e: Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: T {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for condition in conditions {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard condition.evaluate() else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return falseValue.value"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return trueValue.value"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        set(inputValue) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "            _ \u003d inputValue"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let conditions: [Evaluate]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let trueValue: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let falseValue: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(trueValue: Evaluatable\u003cT\u003e, falseValue: Evaluatable\u003cT\u003e,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         conditions: [Evaluate]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.conditions \u003d conditions"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.trueValue \u003d trueValue"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.falseValue \u003d falseValue"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(trueValue.value)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 2,
      "yuhongherald": 32
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Evaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Evaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 3/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var _value: T"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var value: T {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return _value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            _value \u003d newValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(_ value: T) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self._value \u003d value"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/EventAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EventAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventAction\u003cT\u003e: Printable, Modify {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String \u003d \"action\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let variable: GameVariable\u003cT\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let value: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    init?(variable: GameVariable\u003cT\u003e?, value: Evaluatable\u003cT\u003e?) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let variable \u003d variable, let value \u003d value else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.variable \u003d variable"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.value \u003d value"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func modify() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        variable.value \u003d value.value"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 4,
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/EventCondition.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnCondition.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventCondition\u003cT\u003e: Printable, Evaluate {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String \u003d \"condition\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let firstEvaluatable: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let secondEvaluatable: Evaluatable\u003cT\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let changeOperator: GenericComparator"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(first: Evaluatable\u003cT\u003e, second: Evaluatable\u003cT\u003e, change: GenericComparator) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.firstEvaluatable \u003d first"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.secondEvaluatable \u003d second"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.changeOperator \u003d change"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate() -\u003e Bool {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return changeOperator.compare(first: firstEvaluatable,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                      second: secondEvaluatable)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 26
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/EventTrigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EventTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventTrigger\u003cT\u003e: Printable, Trigger {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String \u003d \"trigger\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let variable: GameVariable\u003cT\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let comparator: GenericComparator"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var triggered: Bool \u003d false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var oldValue: T"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(variable: GameVariable\u003cT\u003e, comparator: GenericComparator) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.variable \u003d variable"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.comparator \u003d comparator"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.oldValue \u003d variable.value"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        variable.subscribe { [weak self] _ in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let self \u003d self else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.triggered \u003d self.triggered ||"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self.comparator.compare(first: self.oldValue,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                        second: self.variable.value)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hasTriggered() -\u003e Bool {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return triggered"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func resetTrigger() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        triggered \u003d false"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 38
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/FlipFlopTrigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  FlipFlopTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// A trigger that only fires once"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class FlipFlopTrigger: Trigger {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var triggered: Bool \u003d true"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hasTriggered() -\u003e Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return triggered"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func resetTrigger() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        triggered \u003d false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 19
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/GameVariableEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameVariableEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class GameVariableEvaluatable\u003cT\u003e: Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let variable: GameVariable\u003cT\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: T {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return variable.value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            variable.value \u003d newValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(variable: GameVariable\u003cT\u003e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.variable \u003d variable"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(variable.value)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 23
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Arithmetic/AddOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  AddOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct AddOperator\u003cT\u003e: GenericOperator where T: Arithmetic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"+\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any? {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT + secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Arithmetic/DivideOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  DivideOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct DivideOperator\u003cT\u003e: GenericOperator where T: Arithmetic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"/\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any? {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT / secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Arithmetic/MultiplyOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  MultiplyOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct MultiplyOperator\u003cT\u003e: GenericOperator where T: Arithmetic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"*\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any? {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT * secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Arithmetic/SubtractOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SubtractOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct SubtractOperator\u003cT\u003e: GenericOperator where T: Arithmetic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"-\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any? {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT - secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/ChangeOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TrueOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// equivalent to a change operator, since conditions check on value change"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class ChangeOperator: GenericComparator {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"changed\" }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 15
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/Extensions/ConditionComparable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ConditionComparable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol ConditionComparable: ComparableOp {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    associatedtype T where T: Comparable"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension ConditionComparable {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var operators: [GenericComparator] {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return ["
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        EqualOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        NotEqualOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        LessThanOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        GreaterThanOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        LessThanOrEqualOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        GreaterThanOrEqualOperator\u003cT\u003e(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        ChangeOperator()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 25
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/Extensions/Int+ConditionComparable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Int+Condition.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Int: ConditionComparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    typealias T \u003d Int"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Int: Arithmetic {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/GreaterThanOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GreaterThanOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class GreaterThanOperator\u003cT\u003e: GenericComparator where T: Comparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003e\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003e secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/GreaterThanOrEqualOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GreaterThanOrEqualOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class GreaterThanOrEqualOperator\u003cT\u003e: GenericComparator where T: Comparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003e\u003d\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003e\u003d secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/LessThanOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  LessThanOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class LessThanOperator\u003cT\u003e: GenericComparator where T: Comparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003c\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003c secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Comparable/LessThanOrEqualOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  LessThanOrEqualOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class LessThanOrEqualOperator\u003cT\u003e: GenericComparator where T: Comparable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003c\u003d\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003c\u003d secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Equatable/EqualOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  IntOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct EqualOperator\u003cT\u003e: GenericComparator where T: Equatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"\u003d\u003d\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT \u003d\u003d secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Equatable/NotEqualOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  NotEqualOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct NotEqualOperator\u003cT\u003e: GenericComparator where T: Equatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String { return \"!\u003d\" }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let firstT \u003d first as? T, let secondT \u003d second as? T else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return firstT !\u003d secondT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Evaluate.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Evaluate.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Evaluate {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate() -\u003e Bool"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Modify.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Modify.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Modify {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func modify()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/Arithmetic.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Arithmetic.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Arithmetic: Operatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func + (lhs: Self, rhs: Self) -\u003e Self"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func - (lhs: Self, rhs: Self) -\u003e Self"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func * (lhs: Self, rhs: Self) -\u003e Self"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func / (lhs: Self, rhs: Self) -\u003e Self"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension Arithmetic {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var evaluators: [GenericOperator] {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return ["
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            AddOperator\u003cSelf\u003e(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SubtractOperator\u003cSelf\u003e(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            MultiplyOperator\u003cSelf\u003e(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            DivideOperator\u003cSelf\u003e()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 25
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/ComparableOp.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Operatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol ComparableOp {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var operators: [GenericComparator] { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/GenericComparator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericComparator: Printable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/GenericEvaluateOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericEvaluateOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// The operator works in the notion of a BAE"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericOperator: Printable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    associatedtype T"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: T?, second: T?) -\u003e T?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 13
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/GenericOperator.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericEvaluateOperator.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// The operator works in the notion of a BAE"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericOperator: Printable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate(first: Any?, second: Any?) -\u003e Any?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Protocols/Operatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  OpEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 29/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Operatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var evaluators: [GenericOperator] { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Operators/Trigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Trigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Trigger {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hasTriggered() -\u003e Bool"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func resetTrigger()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/Activatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Activatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Activatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var active: Bool { get set }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/EventPresets.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EventPresetsFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventPresets {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum Event {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case monsoon(activate: Bool)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case neutralTax(operand: String) // split into add sub mult div"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemPrice(for: ItemParameter, operand: String) // split into item types"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case playerDeath(for: GenericPlayer)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let monsoonEvents: [Bool: PresetEvent]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let neutralTaxEvents: [String: PresetEvent]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let itemPriceEvents: [String: [String: PresetEvent]]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let playerDeathEvents: [String: PresetEvent]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let eventTable: EventTable\u003cPresetEvent\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(gameState: GenericGameState, turnSystem: GenericTurnSystem) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // monsoon []"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // taxes []"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // item price []"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // player death []"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        eventTable \u003d EventTable\u003cPresetEvent\u003e()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var monsoonEvents: [Bool: PresetEvent] \u003d [Bool: PresetEvent]()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var neutralTaxEvents: [String: PresetEvent] \u003d [String: PresetEvent]()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        let itemPriceEvents: [String: [String: PresetEvent]] \u003d [String: [String: PresetEvent]]()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var playerDeathEvents: [String: PresetEvent] \u003d [String: PresetEvent]()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        monsoonEvents[true] \u003d eventTable.pushEvent("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            event: HeavyMonsoonEvent(gameState: gameState,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                     start: PresetConstants.monsoonStart,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                     end: PresetConstants.monsoonEnd)) // call push on table for each construct"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var evaluators \u003d 0.evaluators"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for index in 0..\u003cevaluators.count {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let key \u003d evaluators[index].displayName"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let taxEvent \u003d TaxChangeEvent(gameState: gameState,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                          genericOperator: evaluators[index],"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                          modifier: PresetConstants.taxModifiers[index])"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            taxEvent.active \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            neutralTaxEvents[key] \u003d eventTable.pushEvent("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                event: taxEvent)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            /*itemPriceEvents[key] \u003d [String: PresetEvent]()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for item in ItemType.allCases {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                itemPriceEvents[key]?[item.rawValue] \u003d eventTable.pushEvent("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    event: ItemPriceEvent(gameState: gameState,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                          itemType: item,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                          genericOperator: evaluators[index],"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                          modifier: PresetConstants.priceModifers[index]))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }*/"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /*for player in gameState.getPlayers() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            playerDeathEvents[player.name] \u003d eventTable.pushEvent("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                event: NegativeMoneyEvent(player: player))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "            _ \u003d eventTable.pushEvent(event: PlayerArrivalEvent(player: player))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.monsoonEvents \u003d monsoonEvents"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.neutralTaxEvents \u003d neutralTaxEvents"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.itemPriceEvents \u003d itemPriceEvents"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.playerDeathEvents \u003d playerDeathEvents"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getEvent(event: Event) -\u003e PresetEvent? {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch event {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .monsoon(activate: let activate):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return monsoonEvents[activate]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .neutralTax(operand: let operand):"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return neutralTaxEvents[operand]"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .itemPrice(for: let itemParameter, operand: let operand):"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "            return itemPriceEvents[operand]?[itemParameter.rawValue]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .playerDeath(for: let player):"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return playerDeathEvents[player.name]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getEvent(withId eventId: Int) -\u003e PresetEvent? {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return eventTable.getEvent(identifier: eventId)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getEvents() -\u003e [PresetEvent] {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return eventTable.getAllEvents()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 6,
      "Jason Chong": 15,
      "yuhongherald": 64
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/EventTable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EventTable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventTable\u003cT\u003e where T: TurnSystemEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var table: [Int: T] \u003d [Int: T]()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var nextID: Int \u003d Int.max"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func pushEvent(event: T) -\u003e T {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        event.identifier \u003d nextID"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        table[nextID] \u003d event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        nextID -\u003d 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func getEvent(identifier: Int) -\u003e T? {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return table[identifier]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getAllEvents() -\u003e [T] {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Array(table.values)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getAllFlipFlopEvents() -\u003e [PresetEvent] {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return getAllEvents().filter { event in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            event.triggers.contains { $0 is FlipFlopTrigger }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }.compactMap { $0 as? PresetEvent }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 2,
      "Jason Chong": 6,
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/CountdownCondition.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  CountdownTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class CountdownCondition: EventCondition\u003cGameTime\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(gameTime: GameVariable\u003cGameTime\u003e, to newValue: GameTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(first: GameVariableEvaluatable(variable: gameTime),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                   second: Evaluatable(newValue), change: EqualOperator\u003cGameTime\u003e())"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 2,
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/GameTime+Equatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameTime+Equatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension GameTime: Equatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func \u003d\u003d (lhs: GameTime, rhs: GameTime) -\u003e Bool {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return lhs.week \u003d\u003d rhs.week \u0026\u0026"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "               lhs.month \u003d\u003d rhs.month \u0026\u0026"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "               lhs.year \u003d\u003d rhs.year"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "extension GameTime: ComparableOp {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var operators: [GenericComparator] {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return [EqualOperator\u003cGameTime\u003e(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                NotEqualOperator\u003cGameTime\u003e()]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/MonthWithin.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameTimeWithin.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class MonthWithin: GenericComparator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let start: Int"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let end: Int"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var displayName: String {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return \"between \\(start) and \\(end) month\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(start: Int, end: Int) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.start \u003d max(start, 0) % 12 + 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.end \u003d max(end, 0) % 12 + 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func compare(first: Any?, second: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard first is GameTime,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let secondTime \u003d second as? GameTime else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if start \u003e end \u0026\u0026"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            secondTime.month \u003e\u003d start || secondTime.month \u003c\u003d end {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // wrapped"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if secondTime.month \u003e\u003d start \u0026\u0026 secondTime.month \u003c\u003d end {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "yuhongherald": 33
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/MonthWithinCondition.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  MonthWithinCondition.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class MonthWithinCondition: Evaluate {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let gameTime: GameVariable\u003cGameTime\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let start: Int"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let end: Int"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameTime: GameVariable\u003cGameTime\u003e, start: Int, end: Int) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.gameTime \u003d gameTime"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.start \u003d start"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.end \u003d end"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluate() -\u003e Bool {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return gameTime.value.month \u003e\u003d start \u0026\u0026 gameTime.value.month \u003c\u003d end ||"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        start \u003e end \u0026\u0026 (gameTime.value.month \u003e\u003d start || gameTime.value.month \u003c\u003d end)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 24
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/GameTime/MonthWithinTrigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnRangeTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class MonthWithinTrigger: EventTrigger\u003cGameTime\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameTime: GameVariable\u003cGameTime\u003e, start: Int, end: Int) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(variable: gameTime,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   comparator: MonthWithin(start: start, end: end))"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/ItemPrice/ItemBuyPriceEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ItemPriceEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class ItemBuyPriceEvaluatable: Evaluatable\u003cItemParameter\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let itemParameter: GameVariable\u003cItemParameter\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let genericOperator: GenericOperator"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    //TODO"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let ports \u003d [Port]()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let modifier: Int"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: ItemParameter {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let newValue \u003d genericOperator.evaluate("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "                first: itemParameter.value.getBuyValue(ports: ports), second: modifier) as? Int else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return itemParameter.value"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "            var copy \u003d itemParameter.value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "            //copy.setBuyValue(value: newValue)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return copy"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "            itemParameter.value \u003d newValue"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(itemParameter: GameVariable\u003cItemParameter\u003e, genericOperator: GenericOperator,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         modifier: Int) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.genericOperator \u003d genericOperator"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.modifier \u003d modifier"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.itemParameter \u003d itemParameter"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(itemParameter.value)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 11,
      "yuhongherald": 25
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/ItemPrice/ItemPriceEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  FreeTeaEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class ItemPriceEvent: PresetEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(gameState: GenericGameState, itemParameter: GameVariable\u003cItemParameter\u003e,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         genericOperator: GenericOperator, modifier: Int) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let evaluatable \u003d ItemBuyPriceEvaluatable("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "            itemParameter: itemParameter,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            genericOperator: genericOperator,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            modifier: modifier)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        //TODO"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [FlipFlopTrigger()],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [],"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "                   actions: [EventAction\u003cItemParameter\u003e(variable: itemParameter, value: evaluatable)],"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "                   parsable: { return \"\\(itemParameter.value.rawValue)\u0027s price has been set to \\(itemParameter.value.getBuyValue(ports: [Port]()))\" },"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "                   displayName: \"Set \\(itemParameter.value.rawValue) price \\(genericOperator.displayName) \\(modifier)\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 6,
      "yuhongherald": 19
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/Monsoon/HeavyMonsoonEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  HeavyMonsoonEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class HeavyMonsoonEvent: PresetEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, start: Int, end: Int) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "        var actions: [EventAction\u003cBool\u003e?] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for path in gameState.map.getAllPaths() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for monsoon in path.modifiers {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard let monsoon \u003d monsoon as? VolatileMonsoon else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                actions.append(EventAction\u003cBool\u003e("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    variable: monsoon.isActiveVariable,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    value: ConditionEvaluatable\u003cBool\u003e("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        trueValue: Evaluatable\u003cBool\u003e(true),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        falseValue: Evaluatable\u003cBool\u003e(false),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        conditions: [MonthWithinCondition(gameTime: gameState.gameTime,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                            start: start, end: end)])))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // [MonthWithinTrigger(gameTime: gameState.gameTime,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // start: start, end: end)]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [EventTrigger\u003cGameTime\u003e(variable: gameState.gameTime,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                     comparator: NotEqualOperator\u003cInt\u003e())],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   parsable: { return \"Heavy monsoon!\" },"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   displayName: \"Heavy monsoon!\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "yuhongherald": 34
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/Monsoon/RegularMonsoonEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  RegularMonsoonEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class RegularMonsoonEvent: TurnSystemEvent {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, start: Int, end: Int, speed: Int) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var actions: [EventAction\u003cBool\u003e] \u003d []"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for path in gameState.map.getAllPaths() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for monsoon in path.modifiers {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard let monsoon \u003d monsoon as? VolatileMonsoon else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                actions.append(EventAction(variable: monsoon.isActiveVariable, value: Evaluatable(false)))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [MonthWithinTrigger(gameTime: gameState.gameTime,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                 start: start, end: end)],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   displayName: \"No monsoon!\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 28
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PlayerArrival/HistoryFactAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  HistoryFactAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class HistoryFactAction: Modify {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func modify() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PlayerArrival/PirateAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PirateAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "class PirateAction: Modify {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "    private let player: GenericPlayer"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "    init(player: GenericPlayer, turnSystem: GenericTurnSystem) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.player \u003d player"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    func modify() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 16
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PlayerArrival/PlayerArrivalEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PlayerArrivalEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "class PlayerArrivalEvent: PresetEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(player: GenericPlayer) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(triggers: [EventTrigger\u003cInt\u003e("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "            variable: player.nodeIdVariable,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "            comparator: NotEqualOperator\u003cInt\u003e())],"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "            conditions: [],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            actions: [HistoryFactAction()], parsable: { return \"\" },"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            displayName: \"Arrival History Facts Event\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 15,
      "Jason Chong": 3
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PlayerDeath/NegativeMoneyEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  RandomLoseMoneyEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/// Used to create player death event when money goes below zero."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/// Sets money to 0, player\u0027s position to home node and empties player inventory."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/// Note player gets to keep ship upgrades."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class NegativeMoneyEvent: PresetEvent {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(player: GenericPlayer) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        var actions: [Modify?] \u003d []"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        actions.append(EventAction\u003cInt\u003e(variable: player.money,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                        value: Evaluatable\u003cInt\u003e(0)))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        actions.append(EventAction\u003c[GenericItem]\u003e(variable: player.playerShip?.items,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                  value: Evaluatable\u003c[GenericItem]\u003e([])))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        actions.append(EventAction\u003cInt\u003e(variable: player.playerShip?.nodeIdVariable,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                        value: Evaluatable\u003cInt\u003e(player.homeNode)))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [EventTrigger\u003cInt\u003e(variable: player.money,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                               comparator: GreaterThanOperator\u003cInt\u003e())],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [EventCondition\u003cInt\u003e("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    first: GameVariableEvaluatable\u003cInt\u003e(variable: player.money),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    second: Evaluatable\u003cInt\u003e(0), change: LessThanOperator\u003cInt\u003e())],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "                   parsable: { return \"\\(player.name) has lost their ship\u0027s\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "                    + \"cargo and is sent back to \\(player.homeNode)\" },"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   displayName: \"\\(player.name)\u0027s money below 0\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 5,
      "Jason Chong": 1,
      "yuhongherald": 25
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PresetConstants.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PresetConstants.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 9/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum PresetConstants {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let monsoonStart: Int \u003d 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let monsoonEnd: Int \u003d 9"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // get the operands from 0.operands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let taxModifiers: [Int] \u003d [1000, 1000, 2, 2]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let priceModifers: [Int] \u003d [100, 100, 2, 2]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // modifier array: +100, -100, *2 , /2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 16
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/PresetEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PresetEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class PresetEvent: TurnSystemEvent, Activatable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var activeVariable: GameVariable\u003cBool\u003e \u003d GameVariable\u003cBool\u003e(value: false)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var active: Bool {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return activeVariable.value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            activeVariable.value \u003d newValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for trigger in triggers where trigger is FlipFlopTrigger {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard let trigger \u003d trigger as? FlipFlopTrigger else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                trigger.triggered \u003d newValue"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "    override init(triggers: [Trigger], conditions: [Evaluate],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "                  actions: [Modify?], parsable: @escaping () -\u003e String, displayName: String) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var newConditions: [Evaluate] \u003d conditions"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        newConditions.append(EventCondition\u003cBool\u003e(first: VariableEvaluatable\u003cBool\u003e(activeVariable),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                  second: Evaluatable\u003cBool\u003e(true),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                  change: EqualOperator\u003cBool\u003e()))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.init(triggers: triggers, conditions: conditions,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "                   actions: actions, parsable: parsable, displayName: displayName)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func resetTrigger() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        super.resetTrigger()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        active \u003d false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 4,
      "Jason Chong": 6,
      "yuhongherald": 30
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/Presets/Taxes/TaxChangeEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  NoTaxes.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TaxChangeEvent: PresetEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, genericOperator: GenericOperator, modifier: Int) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let modifier \u003d max(1, modifier)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "        var actions: [EventAction\u003cInt\u003e?] \u003d []"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for port in gameState.map.getNodes() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let port \u003d port as? Port, port.owner \u003d\u003d nil else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            actions.append(EventAction\u003cInt\u003e(variable: port.taxAmount,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                            value: BAEEvaluatable("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                first: VariableEvaluatable(port.taxAmount),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                second: Evaluatable(modifier),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                evaluator: genericOperator,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                defaultValue: 0)))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: [FlipFlopTrigger()],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   conditions: [],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   parsable: { return \"Neutral port taxes have been changed\" },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   displayName: \"Set neutral port taxes by \\(genericOperator.displayName) \\(modifier)\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "yuhongherald": 29
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/TurnSystemEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UniqueTurnSystemEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// The base class for turn system events with manual-generated ids"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemEvent: Unique, Printable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var identifier: Int \u003d -1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let displayName: String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let triggers: [Trigger]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let conditions: [Evaluate]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let actions: [Modify]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let parsable: () -\u003e String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(triggers: [Trigger], conditions: [Evaluate],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "         actions: [Modify?], parsable: @escaping () -\u003e String, displayName: String) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.triggers \u003d triggers"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.conditions \u003d conditions"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        self.actions \u003d actions.compactMap({ $0 })"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.parsable \u003d parsable"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluateEvent() -\u003e GameMessage? {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if !hasTriggered() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        executeWithConditions()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        resetTrigger()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return GameMessage.event(name: displayName, message: parsable())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func hasTriggered() -\u003e Bool {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for trigger in triggers {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if trigger.hasTriggered() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func executeWithConditions() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for condition in conditions {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if !condition.evaluate() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for action in actions {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            action.modify()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func resetTrigger() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for trigger in triggers {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            trigger.resetTrigger()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 2,
      "Jason Chong": 3,
      "yuhongherald": 60
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/UniqueTurnSystemEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UniqueTurnSystemEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UniqueTurnSystemEvent: TurnSystemEvent, Hashable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var identifier: Int {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return _identifier"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        set(value) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "            _ \u003d value"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func \u003d\u003d (lhs: UniqueTurnSystemEvent, rhs: UniqueTurnSystemEvent) -\u003e Bool {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return lhs.identifier \u003d\u003d rhs.identifier"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static func getIdentifier() -\u003e Int {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var identifier: Int \u003d 0 // dummy value"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        queue.sync {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while identifiers.contains(nextID) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                nextID +\u003d 1 // naive implementation"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifiers.insert(nextID)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifier \u003d nextID"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            nextID +\u003d 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return identifier"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var nextID: Int \u003d 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var identifiers \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static let queue \u003d DispatchQueue(label: \"UniqueTurnSystemEventQueue\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                             attributes: .concurrent)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let _identifier: Int"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override init(triggers: [Trigger], conditions: [Evaluate],"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "                  actions: [Modify?], parsable: @escaping () -\u003e String, displayName: String) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self._identifier \u003d UniqueTurnSystemEvent.getIdentifier()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(triggers: triggers, conditions: conditions,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   actions: actions, parsable: parsable, displayName: displayName)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        hasher.combine(identifier)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    deinit {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let identifier \u003d self.identifier"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        UniqueTurnSystemEvent.queue.async(flags: .barrier) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            UniqueTurnSystemEvent.identifiers.remove(identifier)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 3,
      "yuhongherald": 58
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Events/VariableEvaluatable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  VariableEvaluatable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 3/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class VariableEvaluatable\u003cT\u003e: Evaluatable\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var variable: GameVariable\u003cT\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var value: T {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return variable.value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            variable.value \u003d newValue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(_ variable: GameVariable\u003cT\u003e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.variable \u003d variable"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(variable.value) // dummy value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 23
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GameEvent.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameEvent.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// TODO: Implement, do protocol"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GameEvent {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GameMessage/GameMessage.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameMessage.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum GameMessage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case playerAction(name: String, message: String)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case event(name: String, message: String)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GameMessage/GameMessenger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameMessenger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GameMessenger: class {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var messages: [GameMessage] { get set }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GameMessage/Messenger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Messenger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class Messenger: GameMessenger {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var messages: [GameMessage] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GameMessage/Parsable.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Parsable.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 11/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol Parsable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func parse() -\u003e String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 11
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GenericTurnSystem.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericTurnSystem.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericTurnSystem {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "    var eventPresets: EventPresets? { get set }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var messages: [GameMessage] { get set }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // var playerActionAdapter: PlayerActionAdapter ( get )"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPresetEvents() -\u003e [PresetEvent]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func roll(for player: GenericPlayer) throws -\u003e (Int, [Int])"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func selectForMovement(nodeId: Int, by player: GenericPlayer) throws"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setTax(for portId: Int, to amount: Int, by player: GenericPlayer) throws"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemParameter: ItemParameter, quantity: Int, by player: GenericPlayer) throws"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemParameter: ItemParameter, quantity: Int, by player: GenericPlayer) throws"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func toggle(eventId: Int, enabled: Bool, by player: GenericPlayer) throws"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func purchase(upgrade: Upgrade, by player: GenericPlayer) throws -\u003e InfoMessage?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscribeToState(with callback: @escaping (TurnSystemNetwork.State) -\u003e Void)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func endTurn()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func acknowledgeTurnStart()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 3,
      "Jason Chong": 8,
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/GenericTurnSystemState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericTurnSystemState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericTurnSystemState: GameMessenger {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var currentTurn: Int { get }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var events: [Int: TurnSystemEvent] { get }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentPlayerIndex: Int { get set }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var triggeredEvents: [TurnSystemEvent] { get }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func addEvents(events: [TurnSystemEvent]) -\u003e Bool"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func removeEvents(events: [TurnSystemEvent]) -\u003e Bool"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func setEvents(events: [TurnSystemEvent]) -\u003e Bool"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvents() -\u003e [GameMessage]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPresetEvents() -\u003e [PresetEvent]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func turnFinished()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 5,
      "yuhongherald": 18
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/InputController/GenericPlayerInputController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericPlayerInputController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericPlayerInputController {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkInputAllowed(from player: GenericPlayer) throws"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func startPlayerInput(from player: GenericPlayer)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/InputController/GenericPlayerInputControllerFactory.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericPlayerInputControllerFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericPlayerInputControllerFactory {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func create(network: GenericTurnSystemNetwork, data: GenericTurnSystemState)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        -\u003e GenericPlayerInputController"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/InputController/PlayerInputController.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerInputController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class PlayerInputController: GenericPlayerInputController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let network: GenericTurnSystemNetwork"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let data: GenericTurnSystemState"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var duration: Double \u003d GameConstants.playerTurnDuration"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(network: GenericTurnSystemNetwork, data: GenericTurnSystemState) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.network \u003d network"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.data \u003d data"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkInputAllowed(from player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch network.state {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .playerInput(let curPlayer, _):"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if player !\u003d curPlayer {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                throw PlayerActionError.wrongPhase(message: \"Please wait for your turn\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw PlayerActionError.wrongPhase(message: \"Action called on wrong phase\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func startPlayerInput(from player: GenericPlayer) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let duration \u003d self.duration"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let endTime \u003d Date().timeIntervalSince1970 + duration"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let turnNum \u003d data.currentTurn"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        DispatchQueue.global().asyncAfter(deadline: .now() + duration) { [weak self] in"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if player \u003d\u003d self?.network.currentPlayer \u0026\u0026 self?.data.currentTurn \u003d\u003d turnNum {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self?.network.endTurn()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.state \u003d .playerInput(from: player, endTime: endTime)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 44
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/InputController/PlayerInputControllerFactory.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerInputControllerFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class PlayerInputControllerFactory: GenericPlayerInputControllerFactory {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func create(network: GenericTurnSystemNetwork, data: GenericTurnSystemState)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        -\u003e GenericPlayerInputController {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return PlayerInputController(network: network, data: data)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/GenericPlayerActionAdapter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericPlayerActionAdapter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericPlayerActionAdapter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func process(action: PlayerAction, for player: GenericPlayer) throws -\u003e GameMessage?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func handle(tradeAction: PlayerAction, by player: GenericPlayer) throws -\u003e GameMessage?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func register(portTaxAction action: PlayerAction,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                  by player: GenericPlayer) throws -\u003e GameMessage?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func handleSetTax()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func playerMove(_ player: GenericPlayer, _ nodeId: Int, isEnd: Bool) -\u003e GameMessage?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 16
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/GenericPlayerActionAdapterFactory.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericPlayerActionAdapterFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericPlayerActionAdapterFactory {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func create(stateVariable: GameVariable\u003cTurnSystemNetwork.State\u003e,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                networkInfo: NetworkInfo,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                data: GenericTurnSystemState) -\u003e GenericPlayerActionAdapter"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 13
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/GenericTurnSystemNetwork.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GenericTurnSystemNetwork.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "protocol GenericTurnSystemNetwork: class {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var pendingActions: [PlayerAction] { get set }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var stateVariable: GameVariable\u003cTurnSystemNetwork.State\u003e { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var state: TurnSystemNetwork.State { get set }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var data: GenericTurnSystemState { get }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var currentPlayer: GenericPlayer? { get }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getNextPlayer() -\u003e GenericPlayer?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getFirstPlayer() -\u003e GenericPlayer?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func processNetworkTurnActions(forTurnNumber turnNum: Int,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                   playerActionPairs: [(String, [PlayerAction])])"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func waitForTurnFinish()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func endTurn()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/NetworkInfo.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  NetworkInfo.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class NetworkInfo {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var setTaxActions \u003d [Int: (PlayerAction, GenericPlayer, Bool)]()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let deviceId: String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let isMaster: Bool"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(_ deviceId: String, _ isMaster: Bool) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.deviceId \u003d deviceId"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.isMaster \u003d isMaster"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 18
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/PlayerActionAdapter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerActionAdapter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class PlayerActionAdapter: GenericPlayerActionAdapter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    /// Throws if action is invalid"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    /// For server actions only"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let stateVariable: GameVariable\u003cTurnSystemNetwork.State\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let networkInfo: NetworkInfo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let data: GenericTurnSystemState"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var state: TurnSystemNetwork.State {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return stateVariable.value"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            stateVariable.value \u003d newValue"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(stateVariable: GameVariable\u003cTurnSystemNetwork.State\u003e,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         networkInfo: NetworkInfo, data: GenericTurnSystemState) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.stateVariable \u003d stateVariable"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.networkInfo \u003d networkInfo"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.data \u003d data"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func process(action: PlayerAction, for player: GenericPlayer)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        throws -\u003e GameMessage? {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch state {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .evaluateMoves(for: let currentPlayer):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if player !\u003d currentPlayer {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                throw PlayerActionError.wrongPhase(message: \"Evaluate move on wrong player!\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw PlayerActionError.wrongPhase(message: \"Make action called on wrong phase\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch action {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .move(let nodeId, let isEnd):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return playerMove(player, nodeId, isEnd: isEnd)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .forceMove(let nodeId): // quick hack for updating the player\u0027s position remotely"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return playerMove(player, nodeId, isEnd: true)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .setTax:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return try register(portTaxAction: action, by: player)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .buyOrSell:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return try handle(tradeAction: action, by: player)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .purchaseUpgrade(let upgradeType):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if player.deviceId \u003d\u003d networkInfo.deviceId {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return GameMessage.playerAction(name: player.name, message: \"You moved\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            _ \u003d player.buyUpgrade(upgrade: upgradeType.toUpgrade())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return GameMessage.playerAction(name: player.name,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                            message: \" has purchased the \\(upgradeType.toUpgrade().name)!\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .pirate:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            player.playerShip?.startPirateChase()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return GameMessage.playerAction(name: player.name, message: \" is chased by pirates!\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .togglePresetEvent(let eventId, let enabled):"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if player.deviceId \u003d\u003d networkInfo.deviceId {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let event \u003d data.events[eventId] as? PresetEvent else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            event.active \u003d enabled"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func handle(tradeAction: PlayerAction, by player: GenericPlayer) throws -\u003e GameMessage? {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch tradeAction {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .buyOrSell(let itemParameter, let quantity):"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let message \u003d GameMessage.playerAction("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                name: player.name,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                message: \" has \\(quantity \u003e 0 ? \"purchased\": \"sold\") \\(quantity) \\(itemParameter.rawValue)\")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if player.deviceId \u003d\u003d networkInfo.deviceId {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return message"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                if quantity \u003e\u003d 0 {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    try player.buy(itemParameter: itemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    try player.sell(itemParameter: itemParameter, quantity: -quantity)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            } catch let error as TradeItemError {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                throw PlayerActionError.invalidAction(message: error.getMessage())"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func register(portTaxAction action: PlayerAction,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                  by player: GenericPlayer) throws -\u003e GameMessage? {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch action {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .setTax(let portId, _):"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let port \u003d data.gameState.map.nodeIDPair[portId] as? Port else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                throw PlayerActionError.invalidAction(message: \"Port does not exist.\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if networkInfo.setTaxActions[portId] !\u003d nil {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                networkInfo.setTaxActions[portId] \u003d (action, player, false)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                networkInfo.setTaxActions[portId] \u003d (action, player, true)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return .playerAction(name: player.name, message: \"Instructed \\(port.name) to change tax.\")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func handleSetTax() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for (action, player, success) in networkInfo.setTaxActions.values {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            switch action {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            case .setTax(let portId, let taxAmount):"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard let port \u003d data.gameState.map.nodeIDPair[portId] as? Port else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard player.team \u003d\u003d port.owner else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                guard success else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    data.messages.append("
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        GameMessage.playerAction(name: \"\","
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                 message: \"Failed to change tax for \\(port.name) \" +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                            \"due to conflicting instructions.\"))"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                let previous \u003d port.taxAmount.value"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                port.taxAmount.value \u003d taxAmount"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                data.messages.append(GameMessage.playerAction("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    name: player.name,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    message: \" has set the tax for \\(port.name) from \\(previous) to \\(taxAmount)\"))"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        networkInfo.setTaxActions \u003d Dictionary()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func playerMove(_ player: GenericPlayer, _ nodeId: Int, isEnd: Bool) -\u003e GameMessage? {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let ship \u003d player.playerShip else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let previous \u003d ship.node.name"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        player.move(nodeId: nodeId)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if !isEnd {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let current \u003d ship.node.name"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return GameMessage.playerAction(name: player.name,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                        message: \" has moved from \\(previous) to \\(current)\")"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 163
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/PlayerActionAdapterFactory.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerActionAdapterFactory.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class PlayerActionAdapterFactory: GenericPlayerActionAdapterFactory {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func create(stateVariable: GameVariable\u003cTurnSystemNetwork.State\u003e,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                networkInfo: NetworkInfo,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                data: GenericTurnSystemState) -\u003e GenericPlayerActionAdapter {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return PlayerActionAdapter(stateVariable: stateVariable,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                   networkInfo: networkInfo,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                   data: data)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 17
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/TurnSystemActionAdapter.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnSystemActionAdapter.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": " class TurnSystemActionAdapter {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let stateVariable: GameVariable\u003cTurnSystemNetwork.State\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let playerActionAdapter: GenericPlayerActionAdapter"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let networkActionQueue \u003d DispatchQueue(label: \"com.CS3217.networkActionQueue\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let networkInfo: NetworkInfo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let data: GenericTurnSystemState"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var deviceId: String {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return networkInfo.deviceId"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var gameState: GenericGameState {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return data.gameState"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var messages: [GameMessage] {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return data.messages"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            data.messages \u003d newValue"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var state: TurnSystemNetwork.State {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return stateVariable.state"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            stateVariable.state \u003d newValue"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(stateVariable: GameVariable\u003cTurnSystemNetwork.State\u003e,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         playerActionAdapter: GenericPlayerActionAdapter,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         networkInfo: NetworkInfo, data: GenericTurnSystemState) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.stateVariable \u003d stateVariable"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.playerActionAdapter \u003d playerActionAdapter"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.networkInfo \u003d networkInfo"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.data \u003d data"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func evaluateState(player: GenericPlayer, actions: [PlayerAction])"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        -\u003e [GameMessage] {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            var actions \u003d actions"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            state \u003d .evaluateMoves(for: player)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            var result \u003d [GameMessage]()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while !actions.isEmpty {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                do {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    if let message \u003d try playerActionAdapter.process(action: actions.removeFirst(), for: player) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        result.append(message)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                } catch {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    print(\"Invalid action from server, dropping action\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return result"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func processNetworkTurnActions(forTurnNumber turnNum: Int, playerActionPairs: [(String, [PlayerAction])]) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch state {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .waitForTurnFinish:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            break"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if currentTurn !\u003d turnNum {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for player in players where"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            playerActionPairs.first(where: { player.playerName.hasPrefix($0.0) }) \u003d\u003d nil {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func processTurnActions(forTurnNumber turnNum: Int, playerActionPairs: [(String, [PlayerAction])]) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        networkActionQueue.sync { [weak self] in"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self?.processNetworkTurnActions(forTurnNumber: turnNum, playerActionPairs: playerActionPairs)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for playerActionPair in playerActionPairs {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let chosenPlayer \u003d"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self.gameState.getPlayers().first(where: { $0.name \u003d\u003d playerActionPair.0 }) else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let playerActions \u003d self.evaluateState(player: chosenPlayer, actions: playerActionPair.1)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.messages.append(contentsOf: playerActions)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let messages \u003d chosenPlayer.endTurn()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if chosenPlayer.deviceId \u003d\u003d deviceId {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self.messages.append(contentsOf: messages.map { GameMessage.playerAction(name: chosenPlayer.name,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                                                                         message: $0.message)})"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.map.npcs.forEach {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let node \u003d $0.moveToNextNode(map: gameState.map, maxTaxAmount: 2000) else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.messages.append(GameMessage.playerAction(name: \"NPC\", message: \"An npc has moved into \\(node.name)\"))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        playerActionAdapter.handleSetTax()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let eventResults \u003d data.checkForEvents() // events will run here, non-recursive"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.messages.append(contentsOf: eventResults)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.gameTime.value.addWeeks(4)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.map.updateWeather(for: gameState.gameTime.value.month)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.distributeTeamMoney()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        updateStateMaster()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func commitEndTurn(_ currentPlayer: GenericPlayer) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let currentTurn \u003d self.currentTurn"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let pendingActions \u003d self.pendingActions"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            try network.push("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                actions: pendingActions, fromPlayer: currentPlayer,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                forTurnNumbered: currentTurn) { [weak self] error in"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    guard let self \u003d self, error !\u003d nil else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    /// Usually firebase will resend after internet connection is re-established,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    /// but we resend it just in-case"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    try? self.network.push(actions: pendingActions, fromPlayer: currentPlayer,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                           forTurnNumbered: currentTurn) { _ in }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            fatalError(\"Unable to encode actions.\")"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func updateStateMaster() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state \u003d .waitForStateUpdate"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if isMaster {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let gameState \u003d gameState as? GameState else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let currentTurn \u003d self.currentTurn"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                try network.push(currentState: gameState, forTurn: currentTurn) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    guard let error \u003d $0 else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    print(error.localizedDescription)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            } catch let error {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                print(error.localizedDescription)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        /// The game state parameter is ignored for now, validation can be added here"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.subscribeToMasterState(for: currentTurn) { [weak self] networkGameState in"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self?.data.turnFinished()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if let data \u003d self?.data, let gameState \u003d self?.gameState {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                if data.currentTurn \u003e\u003d gameState.numTurns {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    let winner \u003d gameState.getTeamMoney().max { (first, second) -\u003e Bool in"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        return first.value \u003c second.value"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        }?.key"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    self?.state \u003d .finished(winner: winner)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let player \u003d self?.getFirstPlayer() else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self?.state \u003d .waitForTurnFinish"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self?.state \u003d .waitPlayerInput(from: player)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let gameState \u003d self?.gameState else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            //assert(gameState.description \u003d\u003d networkGameState.description)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 183
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Network/TurnSystemNetwork.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnSystemNetwork.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemNetwork: GenericTurnSystemNetwork {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    enum State {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case ready"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case waitPlayerInput(from: GenericPlayer)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case playerInput(from: GenericPlayer, endTime: TimeInterval)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case waitForTurnFinish"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case evaluateMoves(for: GenericPlayer)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case waitForStateUpdate"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case invalid"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case finished(winner: Team?)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var pendingActions \u003d [PlayerAction]()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let playerActionAdapter: GenericPlayerActionAdapter"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let stateVariable: GameVariable\u003cState\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let networkInfo: NetworkInfo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let data: GenericTurnSystemState"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let networkActionQueue \u003d DispatchQueue(label: \"com.CS3217.networkActionQueue\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let network: RoomConnection"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var currentTurn: Int {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return data.currentTurn"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var setTaxActions: [Int: (PlayerAction, GenericPlayer, Bool)] {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return networkInfo.setTaxActions"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            networkInfo.setTaxActions \u003d newValue"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var deviceId: String {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return networkInfo.deviceId"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var isMaster: Bool {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return networkInfo.isMaster"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var gameState: GenericGameState {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return data.gameState"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var players \u003d [RoomMember]() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        didSet {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let turn \u003d currentTurn"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network.getTurnActions(for: turn) { [weak self] (actions, _) in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self?.processNetworkTurnActions(forTurnNumber: turn, playerActionPairs: actions)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for player in oldValue where players.first(where: { $0.playerName \u003d\u003d player.playerName }) \u003d\u003d nil {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self.messages.append(GameMessage.playerAction(name: player.playerName, message: \"has left the game.\"))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var messages: [GameMessage] {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return data.messages"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            data.messages \u003d newValue"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var state: State {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return stateVariable.value"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            stateVariable.value \u003d newValue"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var currentPlayer: GenericPlayer? {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch state {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .playerInput(let player, _):"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return player"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .waitPlayerInput(let player):"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return player"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(roomConnection: RoomConnection,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         playerActionAdapterFactory: GenericPlayerActionAdapterFactory,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         networkInfo: NetworkInfo,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         turnSystemState: GenericTurnSystemState) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.network \u003d roomConnection"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.data \u003d turnSystemState"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.stateVariable \u003d GameVariable\u003cState\u003e(value: .ready)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.networkInfo \u003d networkInfo"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.playerActionAdapter \u003d playerActionAdapterFactory.create("
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            stateVariable: self.stateVariable,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            networkInfo: networkInfo,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            data: turnSystemState)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.subscribeToMembers { [weak self] members in"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self?.players \u003d members"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getNextPlayer() -\u003e GenericPlayer? {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let players \u003d gameState.getPlayers()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            .filter { [weak self] in $0.deviceId \u003d\u003d self?.deviceId }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let currentPlayer \u003d currentPlayer,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let currentIndex \u003d players.firstIndex(where: { $0 \u003d\u003d currentPlayer }) else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return players.first"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let nextIndex \u003d currentIndex + 1"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if !players.indices.contains(nextIndex) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return nil"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return players[nextIndex]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getFirstPlayer() -\u003e GenericPlayer? {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return gameState.getPlayers()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            .filter { [weak self] in $0.deviceId \u003d\u003d self?.deviceId }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            .first"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func processNetworkTurnActions(forTurnNumber turnNum: Int, playerActionPairs: [(String, [PlayerAction])]) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch state {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .waitForTurnFinish:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            break"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if currentTurn !\u003d turnNum {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for player in players where"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            playerActionPairs.first(where: { player.playerName.hasPrefix($0.0) }) \u003d\u003d nil {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func waitForTurnFinish() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state \u003d .waitForTurnFinish"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let currentTurn \u003d self.currentTurn"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.subscribeToActions(for: currentTurn) { [weak self] actionPair, _ in"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self?.processTurnActions(forTurnNumber: currentTurn, playerActionPairs: actionPair)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func endTurn() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if let currentPlayer \u003d currentPlayer {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            commitEndTurn(currentPlayer)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            pendingActions \u003d []"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let player \u003d getNextPlayer() else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            waitForTurnFinish()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state \u003d .waitPlayerInput(from: player)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    /// MARK: Private funcs"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func evaluateState(player: GenericPlayer, actions: [PlayerAction])"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        -\u003e [GameMessage] {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            var actions \u003d actions"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            state \u003d .evaluateMoves(for: player)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            var result \u003d [GameMessage]()"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while !actions.isEmpty {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                do {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    if let message \u003d try playerActionAdapter.process(action: actions.removeFirst(), for: player) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        result.append(message)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                } catch {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    print(\"Invalid action from server, dropping action\")"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return result"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func processTurnActions(forTurnNumber turnNum: Int, playerActionPairs: [(String, [PlayerAction])]) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        networkActionQueue.sync { [weak self] in"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self?.processNetworkTurnActions(forTurnNumber: turnNum, playerActionPairs: playerActionPairs)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for playerActionPair in playerActionPairs {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let chosenPlayer \u003d"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self.gameState.getPlayers().first(where: { $0.name \u003d\u003d playerActionPair.0 }) else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    continue"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let playerActions \u003d self.evaluateState(player: chosenPlayer, actions: playerActionPair.1)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.messages.append(contentsOf: playerActions)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let messages \u003d chosenPlayer.endTurn()"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if chosenPlayer.deviceId \u003d\u003d deviceId {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self.messages.append(contentsOf: messages.map { GameMessage.playerAction(name: chosenPlayer.name,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                                             message: $0.getMessage())})"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.map.npcs.forEach {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let node \u003d $0.moveToNextNode(map: gameState.map) else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.messages.append(GameMessage.playerAction(name: \"NPC\", message: \"An npc has moved into \\(node.name)\"))"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        playerActionAdapter.handleSetTax()"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let eventResults \u003d data.checkForEvents() // events will run here, non-recursive"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.messages.append(contentsOf: eventResults)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.gameTime.value.addWeeks(4)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.map.updateWeather(for: gameState.gameTime.value.month)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        gameState.distributeTeamMoney()"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        updateStateMaster()"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func commitEndTurn(_ currentPlayer: GenericPlayer) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let currentTurn \u003d self.currentTurn"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let pendingActions \u003d self.pendingActions"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            try network.push("
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                actions: pendingActions, fromPlayer: currentPlayer,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                forTurnNumbered: currentTurn) { [weak self] error in"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    guard let self \u003d self, error !\u003d nil else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    /// Usually firebase will resend after internet connection is re-established,"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    /// but we resend it just in-case"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    try? self.network.push(actions: pendingActions, fromPlayer: currentPlayer,"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                           forTurnNumbered: currentTurn) { _ in }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            fatalError(\"Unable to encode actions.\")"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func updateStateMaster() {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state \u003d .waitForStateUpdate"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        if isMaster {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let gameState \u003d gameState as? GameState else {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            let currentTurn \u003d self.currentTurn"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                try network.push(currentState: gameState, forTurn: currentTurn) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    guard let error \u003d $0 else {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        return"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    print(error.localizedDescription)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            } catch let error {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                print(error.localizedDescription)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        /// The game state parameter is ignored for now, validation can be added here"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.subscribeToMasterState(for: currentTurn) { [weak self] networkGameState in"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self?.data.turnFinished()"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if let data \u003d self?.data, let gameState \u003d self?.gameState {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                if data.currentTurn \u003e\u003d gameState.numTurns {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    let winner \u003d gameState.getTeamMoney().max { (first, second) -\u003e Bool in"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        return first.value \u003c second.value"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        }?.key"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    self?.state \u003d .finished(winner: winner)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let player \u003d self?.getFirstPlayer() else {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                self?.state \u003d .waitForTurnFinish"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self?.state \u003d .waitPlayerInput(from: player)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard (self?.gameState) !\u003d nil else {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            //assert(gameState.description \u003d\u003d networkGameState.description)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 1,
      "Jason Chong": 1,
      "yuhongherald": 285
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/BaseGameObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ObservableGameObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// gameobjects should all inherit from this"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "protocol BaseGameObject {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var fields: [String] { get }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getField(field: String) -\u003e Any?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setField(field: String, object: Any?) -\u003e Bool"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 4,
      "yuhongherald": 10
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/DiceData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  DiceData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class DiceData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    enum DiceType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case uniform"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"dice type\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"current roll\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"max roll\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, diceType: DiceType, maxRoll: Int) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: diceType)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[1], object: 0)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[2], object: maxRoll)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        switch field {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[0]:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? DiceType else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[1]:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? Int else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[2]:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? Int else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            return false"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        objects[field] \u003d object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return true"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 54
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/EdgeData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EdgeADT.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class EdgeData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"From\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"To\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, from: NodeData, to: NodeData) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: from)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[1], object: to)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        from.getField(field: from.fields[0]) as? [NodeData]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        switch field {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[0]:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? NodeData else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[1]:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? NodeData else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            return false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        objects[field] \u003d object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 46
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/GameData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class GameData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    \"Players\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    \"Map\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, players: [Player], map: MapData) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        setField(field: fields[0], object: players)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        setField(field: fields[1], object: map)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 27
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/InventoryData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  InventoryData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class InventoryData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Capacity\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Opium\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        // add other item support here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        // TODO: Current items have no weight. Introduce weights using item table"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, capacity: Int) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: capacity)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        switch field {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[0]:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? Int else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[1]:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? Int else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            return false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        objects[field] \u003d object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 46
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/ItemBuySellCache.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ItemBuySellCache.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 3/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "struct ItemBuySellCache {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let buyTable: [ItemType: Int]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let sellTable: [ItemType: Int]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let name: String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let money: Int"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let inventory: [ItemType: Int]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(player: GenericPlayer) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // get port"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        //player."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        name \u003d player.name"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        money \u003d player.money.value"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // get inventory"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        //inventory \u003d player.item"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func buyOrSell(item: ItemType, amount: Int) throws {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 31
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/MapData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  MapData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class MapData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Nodes\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Edges\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        // TODO: Getting from an array seems to be a big problem, performance hit."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        // Enumerate ints"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: [NodeData]())"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[1], object: [EdgeData]())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 30
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/NodeData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  NodeData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class NodeData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Neighbors\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: [NodeData]())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 29
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/PlayerData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class PlayerData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Dice\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Ship\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Money\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        //\"Alignment\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, dice: DiceData, ship: ShipData, money: Int) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 27
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/ShipData.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ShipData.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 31/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//class ShipData: UniqueObject, BaseGameObject {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var operators: [GenericOperator] \u003d []"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var evaluators: [GenericEvaluateOperator] \u003d []"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var displayName: String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var events: [Int : Observer] \u003d [Int: Observer]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var objects: [String : Any?] \u003d [String: Any?]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    var fields: [String] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Inventory\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        \"Location\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    init(displayName: String, inventory: InventoryData, location: NodeData) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        self.displayName \u003d displayName"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        super.init()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[0], object: inventory)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        _ \u003d setField(field: fields[1], object: location)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    func setField(field: String, object: Any?) -\u003e Bool {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        switch field {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[0]:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? InventoryData else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        case fields[1]:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            guard let _ \u003d object as? NodeData else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//                return false"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//            return false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        objects[field] \u003d object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//        return true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 45
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Old/WeakBox.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Weakbox.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "final class WeakBox\u003cA: AnyObject\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    weak var unbox: A?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(_ value: A?) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        unbox \u003d value"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/PlayerActions/ChangeType.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  ChangeType.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum ChangeType: String, Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case remove"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case set"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 1,
      "yuhongherald": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/PlayerActions/PlayerAction.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerAction.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "enum PlayerAction: Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    init(from decoder: Decoder) throws {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let container \u003d try decoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let type \u003d try container.decode(Identifier.self, forKey: .type)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch type {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .move:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let node \u003d try container.decode(Int.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let isEnd \u003d try container.decode(Bool.self, forKey: .isEnd)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .move(toNodeId: node, isEnd: isEnd)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .forceMove:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let node \u003d try container.decode(Int.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .forceMove(toNodeId: node)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .setTax:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let port \u003d try container.decode(Int.self, forKey: .nodeId)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let taxAmount \u003d try container.decode(Int.self, forKey: .taxAmount)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .setTax(forPortId: port, taxAmount: taxAmount)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .buyOrSell:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "            let itemParameter \u003d try container.decode(ItemParameter.self, forKey: .itemParameter)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let quantity \u003d try container.decode(Int.self, forKey: .quantity)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "            self \u003d .buyOrSell(itemParameter: itemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .purchaseUpgrade:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "            let type \u003d try container.decode(UpgradeType.self, forKey: .itemParameter)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .purchaseUpgrade(type: type)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .pirate:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .pirate"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .toggleEvent:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let eventId \u003d try container.decode(Int.self, forKey: .eventId)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            let enabled \u003d try container.decode(Bool.self, forKey: .enabled)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            self \u003d .togglePresetEvent(eventId: eventId, enabled: enabled)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func encode(to encoder: Encoder) throws {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var container \u003d encoder.container(keyedBy: CodingKeys.self)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .move(let node, let isEnd):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.move, forKey: .type)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(node, forKey: .nodeId)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(isEnd, forKey: .isEnd)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .forceMove(let node):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.forceMove, forKey: .type)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(node, forKey: .nodeId)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .setTax(let port, let taxAmount):"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.setTax, forKey: .type)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(port, forKey: .nodeId)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(taxAmount, forKey: .taxAmount)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .buyOrSell(let itemParameter, let quantity):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.buyOrSell, forKey: .type)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "            try container.encode(itemParameter, forKey: .itemParameter)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(quantity, forKey: .quantity)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .purchaseUpgrade(let upgradeType):"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.purchaseUpgrade, forKey: .type)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(upgradeType, forKey: .upgrade)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .pirate:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.pirate, forKey: .type)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .togglePresetEvent(let eventId, let enabled):"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(Identifier.toggleEvent, forKey: .type)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(enabled, forKey: .enabled)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            try container.encode(eventId, forKey: .eventId)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    case buyOrSell(itemParameter: ItemParameter, quantity: Int)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case move(toNodeId: Int, isEnd: Bool)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case forceMove(toNodeId: Int)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case purchaseUpgrade(type: UpgradeType)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case setTax(forPortId: Int, taxAmount: Int)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case pirate"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    case togglePresetEvent(eventId: Int, enabled: Bool)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    //case setEvent(changeType: ChangeType, events: [TurnSystemEvent])"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private enum Identifier: String, Codable {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case buyOrSell"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case move"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case forceMove"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case setTax"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case purchaseUpgrade"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        case pirate"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case toggleEvent"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        //case setEvent"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    enum CodingKeys: String, CodingKey {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case type"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case nodeId"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case isEnd"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "        case itemParameter"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case taxAmount"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case quantity"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case upgrade"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case eventId"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case enabled"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 10,
      "Jason Chong": 82,
      "yuhongherald": 10
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/PlayerActions/PlayerActionBatch.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  PlayerActionBatch.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 4/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "struct PlayerActionBatch: Codable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let playerName: String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let actions: [PlayerAction]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 12
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/PlayerActions/PlayerActionError.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerActionError.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 2/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "enum PlayerActionError: Error {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case invalidAction(message: String)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    case wrongPhase(message: String)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getMessage() -\u003e String {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        switch self {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .invalidAction(message: let message):"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        case .wrongPhase(message: let message):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 21
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Supporting Classes/TurnRangeTrigger.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnRangeTrigger.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 7/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class MonthChangeTrigger: EventTrigger\u003cGameTime\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, monthStart: Int, monthEnd: Int) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        super.init(variable: gameState.gameTime,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                   comparator: GameTimeWithin(start: monthStart, end: monthEnd))"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 14
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Supporting Classes/VolatileMonsoon.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  VolatileMonsoon.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 8/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// extend this class to create various monsoon behaviors, eg blow left/right"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class VolatileMonsoon: Volatile {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var isActiveVariable: GameVariable\u003cBool\u003e \u003d GameVariable(value: false)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    override var isActive: Bool {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return isActiveVariable.value"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            isActiveVariable.value \u003d newValue"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func applyVelocityModifier(to oldVelocity: Float, with modifier: Float) -\u003e Float {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return oldVelocity * modifier * Float(GameConstants.monsoonMultiplier)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 1,
      "yuhongherald": 22
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Tests/TestClasses.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TestClasses.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TestClasses {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let baseYear: Int \u003d 1800"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let team: String \u003d \"British\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let buyPrice: Int \u003d 100"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static let sellPrice: Int \u003d 100"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createMap() -\u003e Map {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        let map \u003d Map(map: \"test map\", bounds: Rect())"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let port \u003d PortStub(buyValueOfAllItems: buyPrice, sellValueOfAllItems: sellPrice)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var nextId \u003d port.identifier + 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let node \u003d NodeStub(name: \"node\", identifier: nextId)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        map.addNode(port)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        map.addNode(node)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        map.add(path: Path(from: port, to: node))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        map.add(path: Path(from: node, to: port))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return map"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createLevel() -\u003e GenericLevel {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return GameParameter(map: createMap(), teams: [team])"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createGame(numPlayers: Int) -\u003e GenericGameState {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return GameState(baseYear: baseYear,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                  level: createLevel(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                  players: createPlayers(numPlayers: numPlayers))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createTurnSystem() -\u003e GenericTurnSystem {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return TestTurnSystem()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createEventPresets() -\u003e EventPresets {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let testSystem \u003d createTurnSystem()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return EventPresets(gameState: testSystem.gameState, turnSystem: testSystem)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createTestState(numPlayers: Int) -\u003e TurnSystemState {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return TurnSystemState("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            gameState: createGame(numPlayers: numPlayers), joinOnTurn: 0)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createNetworkInfo() -\u003e NetworkInfo {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return NetworkInfo(\"testDevice\", false)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createTestSystemNetwork(numPlayers: Int) -\u003e TurnSystemNetwork {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return TurnSystemNetwork(roomConnection: TestRoomConnection(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                 playerActionAdapterFactory:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                    PlayerActionAdapterFactory(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                 networkInfo: createNetworkInfo(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                 turnSystemState: createTestState(numPlayers: numPlayers))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "    static func createTestSystemNetwork(numPlayers: Int, callback: @escaping () -\u003e Void) -\u003e TurnSystemNetwork {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        let connection \u003d TestRoomConnection()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        connection.testCallback \u003d callback"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        return TurnSystemNetwork(roomConnection: connection,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "                                 playerActionAdapterFactory:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "            PlayerActionAdapterFactory(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "                                 networkInfo: createNetworkInfo(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "                                 turnSystemState: createTestState(numPlayers: numPlayers))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createTestSystem(numPlayers: Int) -\u003e TurnSystem {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return TurnSystem(network: createTestSystemNetwork(numPlayers: numPlayers), playerInputControllerFactory: PlayerInputControllerFactory())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createPlayers(numPlayers: Int) -\u003e [RoomMember] {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var result: [RoomMember] \u003d []"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for index in 0..\u003cnumPlayers {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            result.append(RoomMember(identifier: String(index), playerName: String(index),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "                                     teamName: team, deviceId: \"testDevice\"))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "    static func createInputController(timer: Double, callback: @escaping () -\u003e Void)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "        -\u003e PlayerInputController {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        let network \u003d createTestSystemNetwork(numPlayers: 2, callback: callback)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let controller \u003d PlayerInputController("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network: network,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            data: network.data)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        controller.duration \u003d timer"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return controller"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createTestEvent(identifier: Int) -\u003e TurnSystemEvent {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let event \u003d TurnSystemEvent(triggers: [], conditions: [], actions: [],"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        parsable: { \"Test event\" }, displayName: \"Test event\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        event.identifier \u003d identifier"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return event"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func createPresetEvent(identifier: Int) -\u003e PresetEvent {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let result \u003d TaxChangeEvent(gameState: TestClasses.createGame(numPlayers: 1),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                       genericOperator: AddOperator\u003cInt\u003e(), modifier: 1)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        result.identifier \u003d identifier"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 14,
      "yuhongherald": 81
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Tests/TestRoomConnection.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TestRoomConnection.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TestRoomConnection: RoomConnection {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var roomMasterId: String \u003d \"testRoom\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var testCallback: () -\u003e Void \u003d {}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private(set) var hasStarted: Bool \u003d false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private(set) var actions: [(String, [PlayerAction])] \u003d []"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private(set) var turn: Int \u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private(set) var masterUpdated: Bool \u003d false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func addPlayer() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"Should not be called\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func startGame(initialState: GameState, background: Data, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        hasStarted \u003d true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        callback(nil)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func push(currentState: GameState, forTurn turn: Int, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        masterUpdated \u003d true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        callback(nil)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscribeToActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscribeToMembers(with callback: @escaping ([RoomMember]) -\u003e Void) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func push(actions: [PlayerAction], fromPlayer player: GenericPlayer, forTurnNumbered turn: Int, completion callback: @escaping (Error?) -\u003e Void) throws {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.actions.append((player.deviceId, actions))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        testCallback()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        callback(nil)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func set(teams: [Team]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"SHould not call\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscibeToTeamNames(with callback: @escaping ([String]) -\u003e Void) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"SHould not call\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscribeToStart(with callback: @escaping (GameState, Data) -\u003e Void) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"SHould not call\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func changeTeamName(for identifier: String, to teamName: String) throws {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"SHould not call\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func changePlayerName(for identifier: String, to playerName: String) throws {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"SHould not call\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func remove(player: String) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getTurnActions(for turn: Int, callback: @escaping ([(String, [PlayerAction])], Error?) -\u003e Void) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        callback(actions, nil)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func changeRemovalCallback(to callback: @escaping () -\u003e Void) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscribeToMasterState(for turn: Int, callback: @escaping (GameState) -\u003e Void) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func verify(reference: String) throws {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func disconnect() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 2,
      "yuhongherald": 89
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/Tests/TestTurnSystem.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TestTurnSystem.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TestTurnSystem: GenericTurnSystem {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var gameState: GenericGameState \u003d TestClasses.createGame(numPlayers: 1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var eventPresets: EventPresets?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var messages: [GameMessage] \u003d []"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getPresetEvents() -\u003e [PresetEvent] {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func roll(for player: GenericPlayer) throws -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func selectForMovement(nodeId: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func setTax(for portId: Int, to amount: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func buy(itemParameter: ItemParameter, quantity: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func sell(itemParameter: ItemParameter, quantity: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func toggle(eventId: Int, enabled: Bool, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func purchase(upgrade: Upgrade, by player: GenericPlayer) throws -\u003e InfoMessage? {        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscribeToState(with callback: @escaping (TurnSystemNetwork.State) -\u003e Void) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func startGame() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func endTurn() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func acknowledgeTurnStart() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        fatalError(\"This should not be called\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 51
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/TurnSystem.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  File.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class TurnSystem: GenericTurnSystem {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var eventPresets: EventPresets?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var messages: [GameMessage] {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        get {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return data.messages"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        set {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            data.messages \u003d newValue"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var gameState: GenericGameState {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return data.gameState"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let network: GenericTurnSystemNetwork"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let data: GenericTurnSystemState"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    let playerInputController: GenericPlayerInputController"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(network: GenericTurnSystemNetwork,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         playerInputControllerFactory: GenericPlayerInputControllerFactory) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.data \u003d network.data"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.network \u003d network"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.playerInputController \u003d playerInputControllerFactory.create("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network: network, data: self.data)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.eventPresets \u003d EventPresets(gameState: self.data.gameState, turnSystem: self)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if let eventPresets \u003d self.eventPresets {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            _ \u003d self.data.addEvents(events: eventPresets.getEvents())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPresetEvents() -\u003e [PresetEvent] {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return data.getPresetEvents()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func startGame() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let player \u003d network.getFirstPlayer() else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network.state \u003d .waitForTurnFinish"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network.waitForTurnFinish()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.state \u003d .waitPlayerInput(from: player)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    // for testing"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func getState() -\u003e TurnSystemNetwork.State {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return network.state"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    // MARK: - Player actions"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func roll(for player: GenericPlayer) throws -\u003e (Int, [Int]) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try playerInputController.checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if player.hasRolled {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Player has already rolled!\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return player.roll()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func selectForMovement(nodeId: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try playerInputController.checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !player.hasRolled {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Player has not rolled!\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !player.roll().1.contains(nodeId) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Node is out of range!\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if nodeId \u003d\u003d player.node?.identifier {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var path \u003d player.getPath(to: nodeId)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        path.removeFirst()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        for (index, transitNode) in path.enumerated() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network.pendingActions.append(.move(toNodeId: transitNode, isEnd: index \u003d\u003d path.indices.last))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if isSuccess(probability: player.getPirateEncounterChance(at: nodeId)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network.pendingActions.append(.pirate)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func setTax(for portId: Int, to amount: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try playerInputController.checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let port \u003d gameState.map.nodeIDPair[portId] as? Port else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Port does not exist\")"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard player.team \u003d\u003d port.owner else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Player does not own port!\")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.pendingActions.append(.setTax(forPortId: portId, taxAmount: amount))"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "    func buy(itemParameter: ItemParameter, quantity: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try playerInputController.checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard quantity \u003e 0 else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Bought quantity must be more than 0.\")"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if quantity \u003e\u003d 0 {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "            try player.buy(itemParameter: itemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network.pendingActions.append(.buyOrSell(itemParameter: itemParameter, quantity: quantity))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "    func sell(itemParameter: ItemParameter, quantity: Int, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try playerInputController.checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard quantity \u003e 0 else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Sold quantity must be more than 0.\")"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if quantity \u003e\u003d 0 {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "                try player.sell(itemParameter: itemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            } catch let error as TradeItemError {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                throw PlayerActionError.invalidAction(message: error.getMessage())"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network.pendingActions.append(.buyOrSell(itemParameter: itemParameter, quantity: -quantity))"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func toggle(eventId: Int, enabled: Bool, by player: GenericPlayer) throws {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        guard let event \u003d data.events[eventId] as? PresetEvent else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Event does not exist\")"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try playerInputController.checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !player.isGameMaster {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"You are not a game master.\")"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        event.active \u003d enabled"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.pendingActions.append(.togglePresetEvent(eventId: eventId, enabled: enabled))"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func purchase(upgrade: Upgrade, by player: GenericPlayer) throws -\u003e InfoMessage? {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        try playerInputController.checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if !player.canBuyUpgrade() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            throw PlayerActionError.invalidAction(message: \"Not allowed to buy upgrades now.\")"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let (success, msg) \u003d player.buyUpgrade(upgrade: upgrade)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if success {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            network.pendingActions.append(.purchaseUpgrade(type: upgrade.type))"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return msg"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func subscribeToState(with callback: @escaping (TurnSystemNetwork.State) -\u003e Void) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.stateVariable.subscribe(with: callback)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func acknowledgeTurnStart() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let player \u003d network.currentPlayer else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        playerInputController.startPlayerInput(from: player)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func endTurn() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        network.endTurn()"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // unused functionality setevents"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func setEvents(changeType: ChangeType, events: [TurnSystemEvent]) -\u003e Bool {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        switch changeType {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .add:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return data.addEvents(events: events)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .remove:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return data.removeEvents(events: events)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        case .set:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return data.setEvents(events: events)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private func isSuccess(probability: Double) -\u003e Bool {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return Double(arc4random()) / Double(UINT32_MAX) \u003c probability"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 4,
      "Jason Chong": 131,
      "yuhongherald": 53
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/TurnSystemState.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnSystemState.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 27/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "// A class used to hold the state of the turn based game"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemState: GenericTurnSystemState {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private(set) var events: [Int: TurnSystemEvent] \u003d [Int: TurnSystemEvent]()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private var actionHistory \u003d [(player: GenericPlayer, action: PlayerAction)]()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    let gameState: GenericGameState"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    var currentPlayerIndex \u003d 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var currentTurn: Int"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var messages: [GameMessage] \u003d []"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init(gameState: GenericGameState, joinOnTurn: Int) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.gameState \u003d gameState"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self.currentTurn \u003d joinOnTurn"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private var triggeredEventsDict: [Int: TurnSystemEvent] \u003d [Int: TurnSystemEvent]()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var triggeredEvents: [TurnSystemEvent] {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return Array(triggeredEventsDict.values)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func getPresetEvents() -\u003e [PresetEvent] {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        return events.values.compactMap { $0 as? PresetEvent }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func addEvents(events: [TurnSystemEvent]) -\u003e Bool {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var result: Bool \u003d true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for event in events {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if self.events[event.identifier] !\u003d nil {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                result \u003d false"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.events[event.identifier] \u003d event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func removeEvents(events: [TurnSystemEvent]) -\u003e Bool {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var result: Bool \u003d true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for event in events {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if self.events[event.identifier] \u003d\u003d nil {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                result \u003d false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            self.events[event.identifier] \u003d nil"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func setEvents(events: [TurnSystemEvent]) -\u003e Bool {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return removeEvents(events: Array(self.events.values))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            \u0026\u0026 addEvents(events: events)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func checkForEvents() -\u003e [GameMessage] {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var result \u003d [GameMessage]()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for (_, event) in events {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let eventResult \u003d event.evaluateEvent() else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            result.append(eventResult)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func turnFinished() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        currentTurn +\u003d 1"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        //gameState.gameTime.value.addWeeks(4)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 15,
      "yuhongherald": 60
    }
  },
  {
    "path": "SailingThroughHistory/TurnSystem/UniqueObject.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  UniqueObject.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 28/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class UniqueObject: Unique, Hashable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    var identifier: Int {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return _identifier"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    static func \u003d\u003d (lhs: UniqueObject, rhs: UniqueObject) -\u003e Bool {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return lhs.identifier \u003d\u003d rhs.identifier"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static func getIdentifier() -\u003e Int {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var identifier: Int \u003d 0 // dummy value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        queue.sync {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while identifiers.contains(nextID) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                nextID +\u003d 1 // naive implementation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifiers.insert(nextID)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            identifier \u003d nextID"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            nextID +\u003d 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return identifier"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var nextID: Int \u003d 0"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static var identifiers \u003d Set\u003cInt\u003e()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private static let queue \u003d DispatchQueue(label: \"UniqueTurnSystemEventQueue\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                             attributes: .concurrent)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private let _identifier: Int"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    init() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        self._identifier \u003d UniqueObject.getIdentifier()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func hash(into hasher: inout Hasher) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        hasher.combine(identifier)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    deinit {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let identifier \u003d self.identifier"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        UniqueObject.queue.async(flags: .barrier) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            UniqueObject.identifiers.remove(identifier)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 53
    }
  },
  {
    "path": "SailingThroughHistoryTests/EmotionEngineTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  GameLogicTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 18/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "@testable import SailingThroughHistory"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 10
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/GameParameterTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  GameParameterTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/1/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class GameParameterTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdatePlayerParameter() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let originName \u003d \"name\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test update name and money"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let playerParameter \u003d TeamParameter(name: originName, teamName: \"team\", node: nil)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameter.set(money: 158)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(playerParameter.getMoney(), 158, \"Money is not successfully changed\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(playerParameter.getTeam() \u003d\u003d Team(name: \"team\"), \"Team is accidently changed\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodablePlayerParameter() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test without node"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var playerParameter \u003d TeamParameter(name: \"\", teamName: \"\", node: nil)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode1 \u003d try? JSONEncoder().encode(playerParameter) else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var decode \u003d try? JSONDecoder().decode(TeamParameter.self, from: encode1)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(playerParameter: decode, playerParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test with node"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameter \u003d TeamParameter(name: \"\", teamName: \"\", node: Sea(name: \"sea\", originX: 1, originY: 100))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode2 \u003d try? JSONEncoder().encode(playerParameter) else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        decode \u003d try? JSONDecoder().decode(TeamParameter.self, from: encode2)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(playerParameter: decode, playerParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test with port"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameter \u003d TeamParameter(name: \"\", teamName: \"\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                                          node: Port(team: nil, name: \"NPCport\", originX: 0, originY: 0))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode3 \u003d try? JSONEncoder().encode(playerParameter) else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        decode \u003d try? JSONDecoder().decode(TeamParameter.self, from: encode3)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(playerParameter: decode, playerParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        playerParameter \u003d TeamParameter(name: \"\", teamName: \"\", node: nil)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let team \u003d Team(name: \"team\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let port \u003d Port(team: team, name: \"selfport\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        port.assignOwner(team)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode4 \u003d try? JSONEncoder().encode(playerParameter) else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        decode \u003d try? JSONDecoder().decode(TeamParameter.self, from: encode4)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(playerParameter: decode, playerParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableItemParameter() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let itemParameter \u003d ItemParameter.opium"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(itemParameter) else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(ItemParameter.self, from: encode)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(itemParameter: decode, itemParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableGameParameter() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        let gameParameter \u003d GameParameter(map: Map("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "            map: \"map\", bounds: Rect(originX: 0, originY: 0, height: 100, width: 100)), teams: [\"team1\", \"team2\"])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(gameParameter) else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(GameParameter.self, from: encode)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(gameParameter: decode, gameParameter), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(playerParameter: TeamParameter?, _ rhs: TeamParameter) -\u003e Bool {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d playerParameter else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.getName() \u003d\u003d rhs.getName() \u0026\u0026 lhs.getTeam() \u003d\u003d rhs.getTeam()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.getMoney() \u003d\u003d rhs.getMoney()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(node lhsNode: Node?, _ rhsNode: Node?) -\u003e Bool {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d lhsNode, let rhs \u003d rhsNode else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return lhsNode \u003d\u003d nil \u0026\u0026 rhsNode \u003d\u003d nil"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.frame \u003d\u003d rhs.frame \u0026\u0026 lhs.name \u003d\u003d rhs.name"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(itemParameter: ItemParameter?, _ rhs: ItemParameter) -\u003e Bool {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d itemParameter else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // TODO"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.getBuyValue() \u003d\u003d rhs.getBuyValue() \u0026\u0026 lhs.getSellValue() \u003d\u003d rhs.getSellValue()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.displayName \u003d\u003d rhs.displayName"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.isConsumable \u003d\u003d rhs.isConsumable \u0026\u0026 lhs.unitWeight \u003d\u003d rhs.unitWeight \u0026\u0026 lhs.itemType \u003d\u003d rhs.itemType"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "         */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(gameParameter: GameParameter?, _ rhs: GameParameter) -\u003e Bool {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d gameParameter else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard lhs.playerParameters.count \u003d\u003d rhs.playerParameters.count, lhs.upgrades.count \u003d\u003d rhs.upgrades.count else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for parameter in lhs.playerParameters {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let index \u003d rhs.playerParameters.firstIndex(where: { isEqual(playerParameter: $0, parameter) }) else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhs.playerParameters.remove(at: index)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhs.playerParameters.isEmpty {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for upgrade in lhs.upgrades {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            guard let index \u003d rhs.upgrades.firstIndex(where: { isEqual(upgrade: $0, upgrade) }) else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhs.upgrades.remove(at: index)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhs.upgrades.isEmpty {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.itemParameters \u003d\u003d rhs.itemParameters"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "             \u0026\u0026 lhs.numOfTurn \u003d\u003d rhs.numOfTurn \u0026\u0026 lhs.timeLimit \u003d\u003d rhs.timeLimit"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.teams \u003d\u003d rhs.teams \u0026\u0026 isEqual(map: lhs.map, rhs.map)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(upgrade: Upgrade?, _ rhs: Upgrade) -\u003e Bool {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d upgrade else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.name \u003d\u003d rhs.name \u0026\u0026 lhs.cost \u003d\u003d rhs.cost \u0026\u0026 lhs.type \u003d\u003d rhs.type"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(map: Map?, _ rhs: Map) -\u003e Bool {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d map else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // check same nodes"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let lhsNodes \u003d Set\u003cNode\u003e(lhs.getNodes())"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var rhsNodes \u003d Set\u003cNode\u003e(rhs.getNodes())"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in lhsNodes {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhsNodes.remove(node)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhsNodes.isEmpty {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // check same path"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let lhsPaths \u003d Set\u003cPath\u003e(lhs.getAllPaths())"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var rhsPaths \u003d Set\u003cPath\u003e(rhs.getAllPaths())"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in lhsPaths {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhsPaths.remove(path)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhsPaths.isEmpty {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.map \u003d\u003d rhs.map \u0026\u0026 lhs.bounds \u003d\u003d rhs.bounds"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 182,
      "henry": 2,
      "Jason Chong": 2
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/ItemTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  ItemTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/15/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class ItemTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    let cItemParameter \u003d ItemParameter.food"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    let uncItemParameter \u003d ItemParameter.silk"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateItem() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        var item \u003d Item(itemParameter: cItemParameter, quantity: 200)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        item.quantity \u003d -100"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(item.quantity, 0, \"Item quantity should not fall below 0.\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        item.quantity \u003d 100"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(item.quantity, 100, \"Item quantity is not successfully updated.\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCombine() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cItemOneQ \u003d 100"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cItemTwoQ \u003d 200"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let uncItemQ \u003d 300"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cItemSum \u003d cItemOneQ + cItemTwoQ"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cItemOne \u003d Item(itemParameter: cItemParameter, quantity: cItemOneQ)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        var cItemTwo: GenericItem \u003d Item(itemParameter: cItemParameter, quantity: cItemTwoQ)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        var uncItem: GenericItem \u003d Item(itemParameter: uncItemParameter, quantity: uncItemQ)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test combine item - successfully"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        var res \u003d cItemOne.combine(with: \u0026cItemTwo)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(res, \"Item with same ItemParameter should be combined.\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(cItemOne.quantity, cItemSum, \"Item quantity is not successfuly combined.\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(cItemTwo.quantity, 0, \"Item quantity is not successfuly combined.\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test combine item - fail"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        res \u003d cItemOne.combine(with: \u0026uncItem)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertFalse(res, \"Item with different ItemParameter should not be combined.\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(cItemOne.quantity, cItemSum, \"Item quantity should not be combined.\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(uncItem.quantity, uncItemQ, \"Item quantity should not be combined.\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testDecay() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let cItem \u003d Item(itemParameter: cItemParameter, quantity: 100)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // TODO:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testRemove() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let item \u003d Item(itemParameter: uncItemParameter, quantity: 100)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test remove without deficit"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var deficit \u003d item.remove(amount: 50)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(item.quantity, 50, \"Item quantity is not successfully updated with remove.\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(deficit, 0, \"No deficit for removing with enough remaining quantity.\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test remove with deficit"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        deficit \u003d item.remove(amount: 100)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(item.quantity, 0,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                       \"Item quantity is not successfully updated with remove. \" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            \"Quantity should be 0 when there is not enough remaining quantity.\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(deficit, 50, \"Deficit should be returned when removing without enough remaining quantity.\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testBuy() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let price \u003d 100"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let quantity \u003d 100"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let item \u003d Item(itemParameter: uncItemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let port \u003d SailingThroughHistory.Port(team: nil, name: \"port\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        port.setBuyValue(of: uncItemParameter, value: price)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let invPort \u003d SailingThroughHistory.Port(team: nil, name: \"port\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // can buy item at port"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(item.getBuyValue(at: port), price * quantity, \"Get buy value returned false result.\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(item.getBuyValue(at: invPort), ItemParameter.defaultPrice * quantity,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                       \"Get buy value returned false result.\")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testSell() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let price \u003d 100"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let quantity \u003d 100"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let item \u003d Item(itemParameter: uncItemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let port \u003d SailingThroughHistory.Port(team: nil, name: \"port\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        port.setBuyValue(of: uncItemParameter, value: price)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let invPort \u003d SailingThroughHistory.Port(team: nil, name: \"port\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // can sell item at port"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(item.sell(at: port), price * quantity, \"Get sell value returned false result.\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(item.sell(at: invPort), 0, \"Wrong sell value returned.\")"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 79,
      "henry": 11,
      "Jason Chong": 5
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/MapTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  MapTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/13/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class MapTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var map: Map \u003d Map(map: \"\", bounds: Rect(originX: 0, originY: 0, height: 1000, width: 1024))"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sea: Sea \u003d Sea(name: \"sea\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var pirateSea: Sea \u003d {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let sea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea.add(object: PirateIsland(in: sea))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return sea"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var NPCport: SailingThroughHistory.Port \u003d Port(team: nil, name: \"port\", originX: 20, originY: 20)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var selfport: SailingThroughHistory.Port \u003d Port(team: Team(name: \"testTeam\"), originX: 40, originY: 40)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID \u003d []"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map \u003d Map(map: \"\", bounds: Rect(originX: 0, originY: 0, height: 1000, width: 1024))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea \u003d Sea(name: \"sea\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pirateSea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let pirate \u003d PirateIsland(in: pirateSea)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pirateSea.add(object: pirate)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        NPCport \u003d Port(team: nil, name: \"port\", originX: 20, originY: 20)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        selfport \u003d Port(team: Team(name: \"testTeam\"), originX: 40, originY: 40)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateMap() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let map \u003d Map(map: \"worldmap1815\", bounds: Rect(originX: 0, originY: 0, height: 100, width: 100))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test udpate map"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.changeBackground(\"\", with: Rect(originX: 100, originY: 100, height: 100, width: 100))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.map, \"\", \"Map is not successfully updated\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(map.bounds, Rect(originX: 100, originY: 100,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "                                        height: 100, width: 100), \"Bounds is not successfully updated\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateNodePath() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test add node"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let node1 \u003d Sea(name: \"sea1\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(node1)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var nodes \u003d Set\u003cNode\u003e()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodes.insert(node1)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getNodes(), nodes, \"Node is not successfully added\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test add path"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let node2 \u003d Sea(name: \"sea2\", originX: 10, originY: 10)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let pirate \u003d PirateIsland(in: node2)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        node2.add(object: pirate)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(node2)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodes.insert(node2)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let path \u003d Path(from: node1, to: node2)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: path)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var paths \u003d Set\u003cPath\u003e()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths.insert(path)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getAllPaths(), paths, \"Path is not successfully added\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node1), [path], \"Path is not added to node1\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node2), [path], \"Path is not added to node2\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test remove node"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: path)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths.insert(path)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.removeNode(node1)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        nodes.remove(node1)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths.remove(path)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getNodes(), nodes, \"Node is not successfully removed\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getAllPaths(), paths, \"Path is not successfully removed\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node2), [], \"Path is not successfully removed from node2\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test remove path"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.removePath(path)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        paths.remove(path)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getNodes(), nodes, \"Node is not successfully removed\")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getAllPaths(), paths, \"Path is not successfully removed\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node1), [], \"Path is not successfully removed from node1\")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.getPaths(of: node2), [], \"Path is not successfully removed from node2\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateObject() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test add object"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var objects \u003d [GameObject]()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let ship \u003d ShipUI(ship: Ship(node: sea, itemsConsumed: []))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addGameObject(gameObject: ship)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        objects.append(ship)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(map.gameObjects.value, objects, \"Objects are not successfully added\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMap() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapFull() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(sea)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(pirateSea)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(selfport)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(NPCport)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: Path(from: sea, to: pirateSea))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: Path(from: pirateSea, to: NPCport))"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: Path(from: NPCport, to: sea))"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addGameObject(gameObject: PirateIsland(in: pirateSea))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addGameObject(gameObject: ShipUI(ship: Ship(node: selfport, itemsConsumed: [])))"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithSea() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test map with sea"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(sea)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(String(data: encode, encoding: String.Encoding.utf8) ?? \"Data could not be printed\")"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithPirate() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(pirateSea)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(String(data: encode, encoding: String.Encoding.utf8) ?? \"Data could not be printed\")"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithNPCPort() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(NPCport)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(String(data: encode, encoding: String.Encoding.utf8) ?? \"Data could not be printed\")"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithPlayerPort() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test map with player owned port added"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(selfport)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableMapWithPath() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test map with path added"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(sea)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.addNode(pirateSea)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let path \u003d Path(from: sea, to: pirateSea)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        path.modifiers.append(Weather())"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        map.add(path: path)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(map) else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Map.self, from: encode)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(String(data: encode, encoding: String.Encoding.utf8) ?? \"Data could not be printed\")"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(map: decode, map), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(map: Map?, _ rhs: Map) -\u003e Bool {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d map else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // check same nodes"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let lhsNodes \u003d Set\u003cNode\u003e(lhs.getNodes())"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var rhsNodes \u003d Set\u003cNode\u003e(rhs.getNodes())"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for node in lhsNodes {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhsNodes.remove(node)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhsNodes.isEmpty {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // check same path"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let lhsPaths \u003d Set\u003cPath\u003e(lhs.getAllPaths())"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        var rhsPaths \u003d Set\u003cPath\u003e(rhs.getAllPaths())"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        for path in lhsPaths {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            rhsPaths.remove(path)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        if !rhsPaths.isEmpty {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.map \u003d\u003d rhs.map \u0026\u0026 lhs.bounds \u003d\u003d rhs.bounds"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 214,
      "henry": 2
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/NodeTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  NodeTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/13/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class NodeTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sea: Sea \u003d Sea(name: \"sea\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var pirateSea: Sea \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let sea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea.add(object: PirateIsland(in: sea))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return sea"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var NPCport: SailingThroughHistory.Port \u003d Port(team: nil, name: \"port\", originX: 20, originY: 20)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var selfport: SailingThroughHistory.Port \u003d Port(team: Team(name: \"testTeam\"), originX: 40, originY: 40)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID \u003d []"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea \u003d Sea(name: \"sea\", originX: 0, originY: 0)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pirateSea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let pirate \u003d PirateIsland(in: pirateSea)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        pirateSea.add(object: pirate)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        NPCport \u003d Port(team: nil, name: \"port\", originX: 20, originY: 20)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        selfport \u003d Port(team: Team(name: \"testTeam\"), originX: 40, originY: 40)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateNode() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let sea \u003d Sea(name: \"pirateSea\", originX: 100, originY: 100)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let objects \u003d [PirateIsland(in: sea), PirateIsland(in: sea)]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        objects.forEach { sea.add(object: $0) }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(sea.objects, objects, \"Objects update failed.\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableSea() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(sea) else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Sea.self, from: encode)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(sea, decode, \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableSeaWithObjects() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(pirateSea) else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Sea.self, from: encode)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(pirateSea, decode, \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableNPCPort() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(NPCport) else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Port.self, from: encode)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(NPCport, decode, \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableSelfPort() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(selfport) else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Port.self, from: encode)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(selfport, decode, \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 79
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameParameter/TeamTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  TeamTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Created by ysq on 4/13/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "class TeamTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var team \u003d Team(name: \"testTeam\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var sea \u003d Sea(name: \"sea\", originX: 0, originY: 100)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var npcPort \u003d SailingThroughHistory.Port(team: nil, name: \"NPCport\", originX: 0, originY: 100)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var selfPort \u003d SailingThroughHistory.Port(team: Team(name: \"testTeam\"), originX: 100, originY: 100)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        Node.reuseID \u003d []"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team \u003d Team(name: \"testTeam\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea \u003d Sea(name: \"sea\", originX: 0, originY: 100)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testUpdateTeam() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let team \u003d Team(name: \"testTeam\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let originMoney \u003d team.money.value"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.updateMoney(by: 100)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(team.money.value, originMoney + 100, \"Money is not successfully updated.\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.updateMoney(by: -100)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(team.money.value, originMoney, \"Money is not successfully updated.\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let sea \u003d Sea(name: \"sea\", originX: 0, originY: 100)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: sea)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(team.startingNode, sea, \"StartingNode is not successfully updated.\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let port \u003d SailingThroughHistory.Port(team: nil, name: \"port\", originX: 100, originY: 10)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: port)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertEqual(team.startingNode, port, \"StartingNode is not successfully updated.\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableTeamWithoutNode() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.updateMoney(by: 100)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableTeamWithSea() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test sea without objects"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: sea)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        // test sea with objects"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        sea.add(object: PirateIsland(in: sea))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    func testCodableTeamWithPort() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: npcPort)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        team.start(from: selfPort)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        check(team)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func check(_ team: Team) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let encode \u003d try? JSONEncoder().encode(team) else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTFail(\"Encode Failed\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let decode \u003d try? JSONDecoder().decode(Team.self, from: encode)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertNotNil(decode, \"Decode Failed\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        print(String(data: encode, encoding: String.Encoding.utf8) ?? \"Data could not be printed\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(isEqual(team: decode, team), \"Decode result is different from original one\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    private func isEqual(team: Team?, _ rhs: Team) -\u003e Bool {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        guard let lhs \u003d team else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        return lhs.name \u003d\u003d rhs.name"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            \u0026\u0026 lhs.startId \u003d\u003d rhs.startId \u0026\u0026 lhs.money.value \u003d\u003d rhs.money.value"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yang Shuqi": 82
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/GameStateUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  GameStateUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class GameStateUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGameStateConstructor() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testEncodeDecode() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetPlayers() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testStartNextTurn() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetNextPlayer() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    func getTeamMoney() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testDistributeTeamMoney() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 41
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/NPCUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  NPCUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class NPCUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    let maxTaxAmount \u003d 2000"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node \u003d NodeStub(name: \"testNode\", identifier: 99)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var port1 \u003d PortStub()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var port2 \u003d PortStub()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var port3 \u003d PortStub()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var map \u003d Map(map: \"testMap\", bounds: Rect(originX: 0, originY: 0, height: 0, width: 0))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.setUp()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        map \u003d Map(map: \"testMap\", bounds: Rect(originX: 0, originY: 0, height: 0, width: 0))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addNode(port1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addNode(port2)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addNode(port3)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        port1.taxAmount.value \u003d 0"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        port2.taxAmount.value \u003d 500"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        port3.taxAmount.value \u003d 1000"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.add(path: Path(from: port1, to: port2))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.add(path: Path(from: port2, to: port1))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.add(path: Path(from: port1, to: port3))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.add(path: Path(from: port3, to: port1))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.add(path: Path(from: port2, to: port3))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.add(path: Path(from: port3, to: port2))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "    override class func tearDown() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        NPC.nextId \u003d 0"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        for node in map.nodes.value {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.removeNode(node)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testNPCConstructor() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        NPC.nextId \u003d 0"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        let npc \u003d NPC(node: node, maxTaxAmount: 1)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npc.nodeId, node.identifier)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npc.identifier, 0)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npc.maxTaxAmount, 1)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npc.nextSeed, npc.identifier)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npc.nextDestinationId, node.identifier)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testNPCEncodeDecode() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        NPC.nextId \u003d 0"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        let npc \u003d NPC(node: node, maxTaxAmount: 1)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let npcEncoded \u003d try? JSONEncoder().encode(npc) else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Encode failed\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let npcDecoded \u003d try? JSONDecoder().decode(NPC.self, from: npcEncoded) else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Decode failed\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npcDecoded.nodeId, node.identifier)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npcDecoded.identifier, 0)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npc.maxTaxAmount, 1)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npcDecoded.nextSeed, npc.identifier)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(npcDecoded.nextDestinationId, node.identifier)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testNPCMoveToNextNode() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "        let npc \u003d NPC(node: port1, maxTaxAmount: 1000)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        func moveToNextNode(map: Map, maxTaxAmount: Int) -\u003e Node? {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "            let nextNodeId \u003d getNextNode(map: map, maxTaxAmount: maxTaxAmount)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let currentNode \u003d map.nodeIDPair[nodeId], let nextNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "                return nil"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "            nodeId \u003d nextNodeId"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "            let path \u003d currentNode.getCompleteShortestPath(to: nextNode, with: self, map: map)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "            for node in path {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "                frame.value \u003d node.frame"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "            frame.value \u003d nextNode.frame"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "            if let port \u003d nextNode as? Port {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "                port.collectTax(from: self)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "            return nextNode"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetNextNode() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        /*func getNextNode(map: Map, maxTaxAmount: Int) -\u003e Int {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "         var generator \u003d GKMersenneTwisterRandomSource()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "         generator.seed \u003d UInt64(nextSeed)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "         if nextDestinationId \u003d\u003d nodeId {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "         nextDestinationId \u003d getNewDestinationPortId(generator: \u0026generator, map: map)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "         }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "         guard let currentNode \u003d map.nodeIDPair[nodeId] else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "         fatalError(\"NPC ship is in invalid node\")"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "         }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "         guard let destinationNode \u003d map.nodeIDPair[nextDestinationId] else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "         fatalError(\"NPC ship has invalid destination node\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "         }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "         let path \u003d currentNode.getCompleteShortestPath(to: destinationNode, with: self, map: map)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "         let movementRoll \u003d 1 + generator.nextInt(upperBound: numDieSides)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "         if movementRoll \u003e\u003d path.count - 1 {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "         nextSeed \u003d UInt(generator.nextInt(upperBound: Int.max))"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "         return nextDestinationId"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "         }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "         let selectedPorts \u003d Array(path[0..\u003cmovementRoll]).map({ $0 as? Port }).compactMap({ $0 })"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "         var lowestTax \u003d maxTaxAmount"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "         var lowestTaxPort \u003d selectedPorts.first"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "         for port in selectedPorts {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "         lowestTax \u003d min(lowestTax, port.taxAmount.value)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "         lowestTaxPort \u003d port"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "         }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "         let decidingRoll \u003d generator.nextUniform()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "         nextSeed \u003d UInt(generator.nextInt(upperBound: Int.max))"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "         if decidingRoll \u003e Float(lowestTax) / Float(maxTaxAmount),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "         let lowestTaxPortId \u003d lowestTaxPort?.identifier {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "         return lowestTaxPortId"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "         }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "         return path[movementRoll - 1].identifier"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "         }*/"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 141
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/PlayerUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  PlayerUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 19/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "class PlayerUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testPlayerConstructor() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testPlayerEncodeDecode() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testUpdateMoney() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "/* func updateMoney(to amount: Int)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": " func updateMoney(by amount: Int)*/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testCanBuyUpgrade() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testStartTurn() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testBuyUpgrade() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testRoll() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testMove() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetPath() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetNodesInRange() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testCanDock() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testDock() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetPirateEncounterChange() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetPurchasableItemParameters() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetMaxPurchaseAmount() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testBuy() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testSell() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": " func sell(item: GenericItem) throws"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": " func sell(itemParameter: ItemParameter, quantity: Int) throws"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "*/"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testSetTax() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testEndTurn() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testCanTradeAt() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testMoneyBelowZero() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 89
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipItemStorageUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipItemStorageUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipItemStorageUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    static let itemParameters \u003d [ItemParameter.opium, ItemParameter.food]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node \u003d NodeStub(name: \"testNode\", identifier: 0)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var items \u003d ShipItemStorageUnitTests.itemParameters.map {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        GenericItemStub(name: $0.rawValue, itemParameter: $0, quantity: 1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    let portWithItems \u003d PortStub(buyValueOfAllItems: 100, sellValueOfAllItems: 100, itemParameters: ShipItemStorageUnitTests.itemParameters)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    let portWithoutItems \u003d PortStub(buyValueOfAllItems: 100, sellValueOfAllItems: 100, itemParameters: [])"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "    let itemStorage \u003d ShipItemManager()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "    var map \u003d Map(map: \"testMap\", bounds: Rect(originX: 0, originY: 0, height: 0, width: 0))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.setUp()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        node \u003d NodeStub(name: \"testNode\", identifier: 0)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        map \u003d Map(map: \"testMap\", bounds: Rect(originX: 0, originY: 0, height: 0, width: 0))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addNode(node)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addNode(portWithItems)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addNode(portWithoutItems)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "    override class func tearDown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        for node in map.nodes.value {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.removeNode(node)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetPurchasableItemTypes() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.isDocked \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.map \u003d map"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        let itemParameters1 \u003d itemStorage.getPurchasableItemParameters(ship: ship1)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(Set(itemParameters1), Set(ShipItemStorageUnitTests.itemParameters))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship2 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.isDocked \u003d true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.map \u003d map"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        let itemParameters2 \u003d itemStorage.getPurchasableItemParameters(ship: ship2)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(itemParameters2, [ItemParameter]())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetMaxPurchaseAmount() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemParameter \u003d ShipItemStorageUnitTests.itemParameters.first else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"No item parameters defined for ItemStorage tests\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.map \u003d map"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.isDocked \u003d true"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner1 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner1.money.value \u003d 1000"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.owner \u003d owner1"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        let amount1 \u003d itemStorage.getMaxPurchaseAmount(ship: ship1, itemParameter: itemParameter)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let portValue1 \u003d portWithItems.getBuyValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Item not sold at port!\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(amount1, owner1.money.value / portValue1)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship2 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.map \u003d map"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.isDocked \u003d true"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.weightCapacity \u003d 1000"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner2 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner2.money.value \u003d 100000"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.owner \u003d owner2"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "        let amount2 \u003d itemStorage.getMaxPurchaseAmount(ship: ship2, itemParameter: itemParameter)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(amount2, ship2.weightCapacity / itemParameter.unitWeight)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship3 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.map \u003d map"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.isDocked \u003d true"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner3 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner3.money.value \u003d 100000"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.owner \u003d owner3"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "        let amount3 \u003d itemStorage.getMaxPurchaseAmount(ship: ship3, itemParameter: itemParameter)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(amount3, 0)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship4 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.map \u003d map"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.isDocked \u003d true"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "        let amount4 \u003d itemStorage.getMaxPurchaseAmount(ship: ship4, itemParameter: itemParameter)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(amount4, 0)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testBuyItem() throws {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemParameter \u003d ShipItemStorageUnitTests.itemParameters.first else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"No item parameters defined for ItemStorage tests\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemValue \u003d portWithItems.getBuyValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Item not available at port!\")"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "        for quantity in 1...3 {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "            let ship1 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship1.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship1.map \u003d map"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship1.isDocked \u003d true"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "            let owner1 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner1.money.value \u003d 100000"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship1.owner \u003d owner1"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertThrowsError(try itemStorage.buyItem(ship: ship1,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "                     itemParameter: itemParameter, quantity: quantity)) { error in"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let notDockedError \u003d error as? TradeItemError else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(notDockedError.getMessage(), TradeItemError.notDocked.getMessage())"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship1.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "            let ship2 \u003d Ship(node: portWithoutItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship2.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship2.map \u003d map"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship2.isDocked \u003d true"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": "            let owner2 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner2.money.value \u003d 100000"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship2.owner \u003d owner2"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertThrowsError(try itemStorage.buyItem(ship: ship2,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "henry"
        },
        "content": "                         itemParameter: itemParameter, quantity: quantity)) { error in"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let itemNotAvailableError \u003d error as? TradeItemError else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(itemNotAvailableError.getMessage(), TradeItemError.itemNotAvailable.getMessage())"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship2.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "henry"
        },
        "content": "            let ship3 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship3.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship3.map \u003d map"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship3.isDocked \u003d true"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "henry"
        },
        "content": "            let owner3 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner3.money.value \u003d 0"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship3.owner \u003d owner3"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertThrowsError(try itemStorage.buyItem(ship: ship3,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "henry"
        },
        "content": "                     itemParameter: itemParameter, quantity: quantity)) { error in"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let insufficientFunds \u003d error as? TradeItemError else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(insufficientFunds.getMessage(),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "henry"
        },
        "content": "                   TradeItemError.insufficientFunds(shortOf: itemValue * quantity - owner3.money.value).getMessage())"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship3.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testBuyItem2() throws {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemParameter \u003d ShipItemStorageUnitTests.itemParameters.first else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"No item parameters defined for ItemStorage tests\")"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemValue \u003d portWithItems.getBuyValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Item not available at port!\")"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "henry"
        },
        "content": "        let item \u003d Item(itemParameter: itemParameter, quantity: 1)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": "        for quantity in 1...3 {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "henry"
        },
        "content": "            let ship4 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship4.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship4.isDocked \u003d true"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship4.map \u003d map"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertThrowsError(try itemStorage.buyItem(ship: ship4,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "henry"
        },
        "content": "                 itemParameter: itemParameter, quantity: quantity)) { error in"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let insufficientFunds \u003d error as? TradeItemError else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(insufficientFunds.getMessage(),"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "henry"
        },
        "content": "                   TradeItemError.insufficientFunds(shortOf: itemValue * quantity).getMessage())"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship4.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "henry"
        },
        "content": "            let ship5 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship5.weightCapacity \u003d itemParameter.unitWeight * quantity - 1"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship5.isDocked \u003d true"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship5.map \u003d map"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "henry"
        },
        "content": "            let owner5 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner5.money.value \u003d 100000"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship5.owner \u003d owner5"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertThrowsError(try itemStorage.buyItem(ship: ship5,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "henry"
        },
        "content": "                     itemParameter: itemParameter, quantity: quantity)) { error in"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let insufficientCapacity \u003d error as? TradeItemError else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(insufficientCapacity.getMessage(),"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "henry"
        },
        "content": "                   TradeItemError.insufficientCapacity(shortOf: itemParameter.unitWeight * quantity - ship5.weightCapacity).getMessage())"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship5.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "henry"
        },
        "content": "            let ship6 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship6.weightCapacity \u003d itemParameter.unitWeight * quantity"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship6.isDocked \u003d true"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship6.map \u003d map"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship6.items.value \u003d [item.copy()]"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "henry"
        },
        "content": "            let owner6 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner6.money.value \u003d 100000"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship6.owner \u003d owner6"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertThrowsError(try itemStorage.buyItem(ship: ship6,"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "henry"
        },
        "content": "                     itemParameter: itemParameter, quantity: quantity)) { error in"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let insufficientCapacity \u003d error as? TradeItemError else {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(insufficientCapacity.getMessage(),"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "henry"
        },
        "content": "                   TradeItemError.insufficientCapacity(shortOf: -itemParameter.unitWeight * quantity + ship6.weightCapacity + item.weight).getMessage())"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship6.items.value, [item]))"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "henry"
        },
        "content": "            let ship7 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship7.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship7.isDocked \u003d true"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship7.map \u003d map"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship7.items.value \u003d [item.copy()]"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "henry"
        },
        "content": "            let owner7 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner7.money.value \u003d 100000"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship7.owner \u003d owner7"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "henry"
        },
        "content": "            try itemStorage.buyItem(ship: ship7, itemParameter: itemParameter, quantity: quantity)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "henry"
        },
        "content": "            let combinedItem \u003d Item(itemParameter: itemParameter, quantity: quantity + item.quantity)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship7.items.value, [combinedItem]))"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(owner7.money.value, 100000 - quantity * itemValue)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testSellItem() throws {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemParameter \u003d ShipItemStorageUnitTests.itemParameters.first else {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"No item parameters defined for ItemStorage tests\")"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemValue \u003d portWithItems.getBuyValue(of: itemParameter) else {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Item not available at port!\")"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "henry"
        },
        "content": "        let item \u003d Item(itemParameter: itemParameter, quantity: 1)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "henry"
        },
        "content": "        let quantity \u003d item.quantity + 1"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func sellItem(item: GenericItem) throws"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.map \u003d map"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.items.value \u003d [item.copy()]"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.isDocked \u003d true"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner1 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner1.money.value \u003d 0"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.owner \u003d owner1"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertThrowsError(try itemStorage.sell(ship: ship1,"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "henry"
        },
        "content": "             itemParameter: itemParameter, quantity: item.quantity)) { error in"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let notDockedError \u003d error as? TradeItemError else {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(notDockedError.getMessage(), TradeItemError.notDocked.getMessage())"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship1.items.value, [item]))"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship2 \u003d Ship(node: portWithoutItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.map \u003d map"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.items.value \u003d [item.copy()]"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.isDocked \u003d true"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner2 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner2.money.value \u003d 0"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.owner \u003d owner2"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertThrowsError(try itemStorage.sell(ship: ship2,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "henry"
        },
        "content": "              itemParameter: itemParameter, quantity: item.quantity)) { error in"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let itemNotAvailable \u003d error as? TradeItemError else {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(itemNotAvailable.getMessage(), TradeItemError.itemNotAvailable.getMessage())"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship2.items.value, [item]))"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship3 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.map \u003d map"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.items.value \u003d [item.copy()]"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.isDocked \u003d true"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner3 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner3.money.value \u003d 0"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.owner \u003d owner3"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "henry"
        },
        "content": "        try itemStorage.sell(ship: ship3, itemParameter: itemParameter, quantity: item.quantity)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship3.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(owner3.money.value, item.quantity * itemValue)"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship4 \u003d Ship(node: portWithItems, itemsConsumed: [])"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.weightCapacity \u003d 100000"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.map \u003d map"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.items.value \u003d [item.copy()]"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.isDocked \u003d true"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner4 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner4.money.value \u003d 0"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.owner \u003d owner4"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertThrowsError(try itemStorage.sell(ship: ship4,"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "henry"
        },
        "content": "              itemParameter: itemParameter, quantity: quantity)) { error in"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let insufficientItems \u003d error as? TradeItemError else {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(insufficientItems.getMessage(), TradeItemError.insufficientItems(shortOf: quantity - item.quantity, sold: item.quantity).getMessage())"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship4.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(owner4.money.value, item.quantity * itemValue)"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testRemoveItem() {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let itemParameter1 \u003d ShipItemStorageUnitTests.itemParameters.first,"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "henry"
        },
        "content": "            let itemParameter2 \u003d ShipItemStorageUnitTests.itemParameters.last,"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "henry"
        },
        "content": "            itemParameter1 !\u003d itemParameter2 else {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"One or less item parameters defined for ItemStorage tests\")"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "henry"
        },
        "content": "        let item1 \u003d Item(itemParameter: itemParameter1, quantity: 1)"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "henry"
        },
        "content": "        let item2 \u003d Item(itemParameter: itemParameter2, quantity: 1)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "henry"
        },
        "content": "        let item1More \u003d Item(itemParameter: itemParameter1, quantity: 2)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func removeItem(by itemType: ItemType, with quantity: Int) -\u003e Int"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.items.value \u003d [item1.copy()]"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(itemStorage.removeItem(ship: ship1, by: itemParameter2, with: 1), 1)"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship1.items.value, [item1]))"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship2 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.items.value \u003d [item1.copy()]"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(itemStorage.removeItem(ship: ship2, by: itemParameter1, with: 1), 0)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship2.items.value, [GenericItemStub]()))"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship3 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.items.value \u003d [item1More.copy()]"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(itemStorage.removeItem(ship: ship3, by: itemParameter1, with: 1), 0)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship3.items.value, [item1]))"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship4 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.items.value \u003d [item1.copy()]"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(itemStorage.removeItem(ship: ship4, by: itemParameter1, with: 2), 1)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship4.items.value, [GenericItemStub]()))"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship5 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship5.items.value \u003d [item1.copy(), item1.copy()]"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(itemStorage.removeItem(ship: ship5, by: itemParameter1, with: 2), 0)"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship5.items.value, [GenericItemStub]()))"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func testTwoGenericItemArray(_ array1: [GenericItem], _ array2: [GenericItem]) -\u003e Bool {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard array1.count \u003d\u003d array2.count else {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "henry"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "henry"
        },
        "content": "        for (item1, item2) in zip(array1, array2) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard item1 \u003d\u003d item2 else {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "henry"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "henry"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 389
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipNavigatableUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipNavigatableUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipNavigatableUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    let centralNode \u003d NodeStub(name: \"centralTestNode\", identifier: 99)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    let weatherStub \u003d WeatherStub(windVelocity: 1.0)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    let navigationManager \u003d ShipNavigationManager()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodes1 \u003d [NodeStub]()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var nodes2 \u003d [NodeStub]()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    var map \u003d Map(map: \"testMap\", bounds: Rect(originX: 0, originY: 0, height: 0, width: 0))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.setUp()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        map \u003d Map(map: \"testMap\", bounds: Rect(originX: 0, originY: 0, height: 0, width: 0))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        for ind in 0..\u003c5 {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "            let node1 \u003d NodeStub(name: \"testNode1 \\(ind)\", identifier: ind * 2)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "            let node2 \u003d NodeStub(name: \"testNode2 \\(ind)\", identifier: ind * 2 + 1)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "            nodes1.append(node1)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "            nodes2.append(node2)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.addNode(node1)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.addNode(node2)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        for ind in 0..\u003c4 {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.add(path: Path(from: nodes1[ind], to: nodes1[ind + 1]))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.add(path: Path(from: nodes1[ind + 1], to: nodes1[ind]))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.add(path: Path(from: nodes2[ind], to: nodes2[ind + 1]))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.add(path: Path(from: nodes2[ind + 1], to: nodes2[ind]))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addNode(centralNode)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        var centralPaths \u003d [Path]()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        centralPaths.append(Path(from: nodes1[0], to: centralNode))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        centralPaths.append(Path(from: centralNode, to: nodes1[0]))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        centralPaths.append(Path(from: nodes2[0], to: centralNode))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        centralPaths.append(Path(from: centralNode, to: nodes2[0]))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        for ind in 0..\u003ccentralPaths.count {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.add(path: centralPaths[ind])"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "            centralPaths[ind].modifiers.append(weatherStub)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "    override class func tearDown() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        for node in map.nodes.value {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.removeNode(node)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetNodesInRange() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: centralNode, itemsConsumed: [])"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.map \u003d map"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(navigationManager.getNodesInRange(ship: ship1, roll: 1, speedMultiplier: 1.0), [centralNode])"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        for roll in 2...6 {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "            var nodesInRange \u003d [centralNode]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "            for ind in 0..\u003c(roll - 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "                nodesInRange.append(nodes1[ind])"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "                nodesInRange.append(nodes2[ind])"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(Set(navigationManager.getNodesInRange(ship: ship1, roll: roll, speedMultiplier: 1.0)), Set(nodesInRange))"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "        for roll in 1...3 {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "            let bound \u003d roll * 2 - 2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "            var nodesInRange \u003d [centralNode]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "            for ind in 0...bound {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "                nodesInRange.append(nodes1[ind])"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "                nodesInRange.append(nodes2[ind])"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(Set(navigationManager.getNodesInRange(ship: ship1, roll: roll, speedMultiplier: 2.0)), Set(nodesInRange))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship2 \u003d Ship(node: centralNode, itemsConsumed: [])"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.auxiliaryUpgrade \u003d BiggerSailsUpgrade()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.map \u003d map"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(navigationManager.getNodesInRange(ship: ship2, roll: 1, speedMultiplier: 1.0), [centralNode])"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "        for roll in 2...6 {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "            var nodesInRange \u003d [centralNode]"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "            for ind in 0..\u003c(roll - 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "                nodesInRange.append(nodes1[ind])"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "                nodesInRange.append(nodes2[ind])"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(Set(navigationManager.getNodesInRange(ship: ship2, roll: roll, speedMultiplier: 1.0)), Set(nodesInRange))"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship3 \u003d Ship(node: centralNode, itemsConsumed: [])"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.shipChassis \u003d FasterShipUpgrade()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.map \u003d map"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "        for roll in 1...3 {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "            let bound \u003d Int(Double(roll) * FasterShipUpgrade().getMovementModifier() - 2)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": "            var nodesInRange \u003d [centralNode]"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "            for ind in 0...bound {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "                nodesInRange.append(nodes1[ind])"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "                nodesInRange.append(nodes2[ind])"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(Set(navigationManager.getNodesInRange(ship: ship3, roll: roll, speedMultiplier: 1.0)), Set(nodesInRange))"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testMove() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let endNode \u003d nodes1.last else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"No nodes in Navigation test\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship1: ShipAPI \u003d Ship(node: centralNode, itemsConsumed: [])"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.map \u003d map"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.shipObject \u003d nil"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.isDocked \u003d true"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "        navigationManager.move(ship: \u0026ship1, node: endNode)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.isDocked, true)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.nodeId, centralNode.identifier)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship2: ShipAPI \u003d Ship(node: centralNode, itemsConsumed: [])"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.map \u003d map"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.isDocked \u003d true"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "        navigationManager.move(ship: \u0026ship2, node: endNode)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.isDocked, true)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.nodeId, endNode.identifier)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testCanDock() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 1000"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "        let port \u003d PortStub()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addNode(port)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1: ShipAPI \u003d Ship(node: centralNode, itemsConsumed: [])"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(navigationManager.canDock(ship: ship1), false)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship2: ShipAPI \u003d Ship(node: centralNode, itemsConsumed: [])"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.map \u003d map"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(navigationManager.canDock(ship: ship2), false)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship3: ShipAPI \u003d Ship(node: port, itemsConsumed: [])"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.map \u003d map"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(navigationManager.canDock(ship: ship3), true)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.removeNode(port)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testDock() throws {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 1000"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "henry"
        },
        "content": "        let port \u003d PortStub()"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.addNode(port)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func dock() throws -\u003e Port"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship1: ShipAPI \u003d Ship(node: centralNode, itemsConsumed: [])"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.isDocked \u003d false"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.isChasedByPirates \u003d true"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.turnsToBeingCaught \u003d 1"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(navigationManager.canDock(ship: ship1), false)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertThrowsError(try navigationManager.dock(ship: \u0026ship1)) { error in"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "henry"
        },
        "content": "                guard let unableToDock \u003d error as? MovementError else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "henry"
        },
        "content": "                    XCTFail(\"Error was not correct type\")"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "henry"
        },
        "content": "                    return"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "henry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTAssertEqual(unableToDock.getMessage(), MovementError.unableToDock.getMessage())"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.isDocked, false)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.isChasedByPirates, true)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.turnsToBeingCaught, 1)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship2: ShipAPI \u003d Ship(node: port, itemsConsumed: [])"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.map \u003d map"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.isDocked \u003d false"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.isChasedByPirates \u003d true"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.turnsToBeingCaught \u003d 1"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(navigationManager.canDock(ship: ship2), true)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(try navigationManager.dock(ship: \u0026ship2), port)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.isDocked, true)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.isChasedByPirates, false)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.turnsToBeingCaught, 0)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "henry"
        },
        "content": "        map.removeNode(port)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 190
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipPirateWeatherUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipPirateWeatherUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipPirateWeatherUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node \u003d NodeStub(name: \"testNode\", identifier: 0)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testStartPirateChase() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.isChasedByPirates \u003d true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.turnsToBeingCaught \u003d 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.startPirateChase()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.isChasedByPirates, true)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.turnsToBeingCaught, 1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship2 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.isChasedByPirates \u003d false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.turnsToBeingCaught \u003d 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.startPirateChase()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.isChasedByPirates, true)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.turnsToBeingCaught, 4)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testGetWeatherModifier() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1.getWeatherModifier(), 1.0)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship2 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.auxiliaryUpgrade \u003d BiggerSailsUpgrade()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship2.getWeatherModifier(), BiggerSailsUpgrade().getWeatherModifier())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 39
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    var node \u003d NodeStub(name: \"testNode\", identifier: 0)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    var encodableItems \u003d [Item]()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "    var items \u003d [GenericItemStub]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "    var itemsConsumed \u003d [GenericItemStub]()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "    var ports \u003d [PortStub]()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "    let map \u003d Map(map: \"testMap\", bounds: Rect(originX: 0, originY: 0, height: 0, width: 0))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "    private var wasItemSubscribeCalled \u003d false"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "        super.setUp()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        wasItemSubscribeCalled \u003d false"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        node \u003d NodeStub(name: \"testNode\", identifier: 0)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": "        encodableItems \u003d [Item]()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        let encodableItem1 \u003d Item(itemParameter: .opium, quantity: 1)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        encodableItems.append(encodableItem1)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        items \u003d [GenericItemStub]()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        let item1 \u003d GenericItemStub(name: \"TestItem1\", itemParameter: .opium, quantity: 1)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        items.append(item1)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemsConsumed \u003d [GenericItemStub]()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        let consumed1 \u003d GenericItemStub(name: \"TestConsume1\", itemParameter: .food, quantity: 1)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        itemsConsumed.append(consumed1)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "        ports \u003d [PortStub]()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        let port1 \u003d PortStub(buyValueOfAllItems: 100, sellValueOfAllItems: 100)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        ports.append(port1)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        for port in ports {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.addNode(port)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "    override class func tearDown() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.nextID \u003d 0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        Node.reuseID.removeAll()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        for node in map.nodes.value {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "            map.removeNode(node)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testConstructor() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        let ship \u003d Ship(node: node, itemsConsumed: itemsConsumed)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship.nodeId, node.identifier)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship.itemsConsumed, itemsConsumed))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship.isChasedByPirates, false)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship.turnsToBeingCaught, 0)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.subscribeToItems(with: testSubscribeToItem)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship.items.value \u003d []"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(wasItemSubscribeCalled)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let embeddedShip \u003d ship.shipObject?.ship else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Ship object was not initialized correctly!\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(embeddedShip \u003d\u003d\u003d ship)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testEncodeDecode() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        let ship1 \u003d Ship(node: node, itemsConsumed: encodableItems)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.items.value \u003d encodableItems"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        let shipChassis \u003d BiggerShipUpgrade()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "        let auxiliaryUpgrade \u003d MercernaryUpgrade()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.shipChassis \u003d shipChassis"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship1.auxiliaryUpgrade \u003d auxiliaryUpgrade"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let ship1Encoded \u003d try? JSONEncoder().encode(ship1) else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            XCTFail(\"Encode failed\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let ship1Decoded \u003d try? JSONDecoder().decode(Ship.self, from: ship1Encoded) else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            XCTFail(\"Decode failed\")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            return"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship1Decoded.items.value, ship1.items.value))"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1Decoded.nodeId, ship1.nodeId)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "        XCTAssertTrue(testTwoGenericItemArray(ship1Decoded.itemsConsumed, ship1.itemsConsumed))"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1Decoded.shipChassis?.name,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "henry"
        },
        "content": "                       ship1.shipChassis?.name)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(ship1Decoded.auxiliaryUpgrade?.name,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "henry"
        },
        "content": "                       ship1.auxiliaryUpgrade?.name)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testStartTurn() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testEndTurn() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        for num in 1...3 {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "            let speedMultiplier \u003d Double(num)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let ship1 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "            let pirateTimer1 \u003d 10"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship1.items.value \u003d items"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship1.isChasedByPirates \u003d true"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship1.turnsToBeingCaught \u003d pirateTimer1"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "henry"
        },
        "content": "            let messages1 \u003d ship1.endTurn(speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship1.items.value, items))"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(ship1.isChasedByPirates, true)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(ship1.turnsToBeingCaught, pirateTimer1 - 1)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(infoMessagesToStrings(msgs: messages1), infoMessagesToStrings(msgs: [InfoMessage.pirates(turnsToBeingCaught: pirateTimer1 - 1)]))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let ship2 \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship2.items.value \u003d items"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship2.isChasedByPirates \u003d true"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship2.turnsToBeingCaught \u003d 1"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "henry"
        },
        "content": "            let messages2 \u003d ship2.endTurn(speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship2.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(ship2.isChasedByPirates, false)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(ship2.turnsToBeingCaught, 0)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(infoMessagesToStrings(msgs: messages2), infoMessagesToStrings(msgs: [InfoMessage.caughtByPirates]))"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yang Shuqi"
        },
        "content": "            let ship3 \u003d Ship(node: node, itemsConsumed: itemsConsumed)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "henry"
        },
        "content": "            let money3 \u003d 1000"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "henry"
        },
        "content": "            let owner3 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship3.owner \u003d owner3"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner3.money.value \u003d money3"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship3.items.value \u003d itemsConsumed.map {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "henry"
        },
        "content": "                let item \u003d $0.copy()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "henry"
        },
        "content": "                item.quantity *\u003d Int(speedMultiplier)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "henry"
        },
        "content": "                return item"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "henry"
        },
        "content": "            let messages3 \u003d ship3.endTurn(speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship3.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(ship3.owner?.money.value, money3)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(infoMessagesToStrings(msgs: messages3), infoMessagesToStrings(msgs: [InfoMessage]()))"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "henry"
        },
        "content": "            let ship4 \u003d Ship(node: node, itemsConsumed: itemsConsumed)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "henry"
        },
        "content": "            let money4 \u003d 1000"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "henry"
        },
        "content": "            let owner4 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "henry"
        },
        "content": "            ship4.owner \u003d owner4"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner4.money.value \u003d money4"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "henry"
        },
        "content": "            owner4.map \u003d map"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "henry"
        },
        "content": "            let messages4 \u003d ship4.endTurn(speedMultiplier: speedMultiplier)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertTrue(testTwoGenericItemArray(ship4.items.value, [GenericItem]()))"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(ship4.owner?.money.value, money4 - getTotalCostOfItemStubs(items: itemsConsumed) * Int(speedMultiplier) * 2)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(infoMessagesToStrings(msgs: messages4), infoMessagesToStrings(msgs: itemsConsumed.map {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "henry"
        },
        "content": "                InfoMessage.deficit(itemName: $0.itemParameter.rawValue, deficit: $0.quantity * Int(speedMultiplier))"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "henry"
        },
        "content": "                }))"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func testTwoGenericItemArray(_ array1: [GenericItem], _ array2: [GenericItem]) -\u003e Bool {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard array1.count \u003d\u003d array2.count else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "henry"
        },
        "content": "            return false"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "henry"
        },
        "content": "        for (item1, item2) in zip(array1, array2) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard item1 \u003d\u003d item2 else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "henry"
        },
        "content": "                return false"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "henry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "henry"
        },
        "content": "        return true"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func testSubscribeToItem(items: [GenericItem]) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "henry"
        },
        "content": "        wasItemSubscribeCalled \u003d true"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func infoMessagesToStrings(msgs: [InfoMessage]) -\u003e [String] {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "henry"
        },
        "content": "        var result \u003d [String]()"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "henry"
        },
        "content": "        for msg in msgs {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "henry"
        },
        "content": "            result.append(msg.getMessage())"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "henry"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "henry"
        },
        "content": "    private func getTotalCostOfItemStubs(items: [GenericItemStub]) -\u003e Int {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "henry"
        },
        "content": "        var total \u003d 0"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "henry"
        },
        "content": "        for item in items {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "henry"
        },
        "content": "            total +\u003d item.itemParameter.getBuyValue(ports: ports)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "henry"
        },
        "content": "        return total"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 179,
      "Yang Shuqi": 9,
      "Jason Chong": 4
    }
  },
  {
    "path": "SailingThroughHistoryTests/GameState/ShipUpgradableUnitTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "henry"
        },
        "content": "//  ShipUpgradableUnitTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "henry"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Created by henry on 13/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "henry"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "henry"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "henry"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "henry"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class ShipUpgradableUnitTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "    let node \u003d NodeStub(name: \"testNode\", identifier: 0)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "henry"
        },
        "content": "    let upgradeManager \u003d ShipUpgradeManager()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "    func testInstallUpgrade() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        //func installUpgrade(upgrade: Upgrade) -\u003e (Bool, InfoMessage?)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship1: ShipAPI \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "henry"
        },
        "content": "        let (bool1, msg1) \u003d upgradeManager.installUpgrade(ship: \u0026ship1, upgrade: BiggerShipUpgrade())"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let message1 \u003d msg1 else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"msg1 is nil\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(bool1, false)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(message1.getMessage(), InfoMessage.noOwner.getMessage())"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship2: ShipAPI \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner2 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner2.money.value \u003d 0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship2.owner \u003d owner2"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        let (bool2, msg2) \u003d upgradeManager.installUpgrade(ship: \u0026ship2, upgrade: BiggerShipUpgrade())"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let message2 \u003d msg2 else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"msg2 is nil\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(bool2, false)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(message2.getMessage(), InfoMessage.cannotAfford(upgrade: BiggerShipUpgrade()).getMessage())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship3: ShipAPI \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.shipChassis \u003d BiggerShipUpgrade()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner3 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner3.money.value \u003d 100000"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship3.owner \u003d owner3"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        let (bool3, msg3) \u003d upgradeManager.installUpgrade(ship: \u0026ship3, upgrade: BiggerShipUpgrade())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let message3 \u003d msg3 else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"msg3 is nil\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(bool3, false)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(message3.getMessage(), InfoMessage.duplicateUpgrade(type: \"Ship Upgrade\").getMessage())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(owner3.money.value, 100000)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship4: ShipAPI \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.auxiliaryUpgrade \u003d BiggerSailsUpgrade()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner4 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner4.money.value \u003d 100000"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship4.owner \u003d owner4"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        let (bool4, msg4) \u003d upgradeManager.installUpgrade(ship: \u0026ship4, upgrade: BiggerSailsUpgrade())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let message4 \u003d msg4 else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"msg4 is nil\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(bool4, false)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(message4.getMessage(), InfoMessage.duplicateUpgrade(type: \"Auxiliary Upgrade\").getMessage())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(owner4.money.value, 100000)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "        var ship5: ShipAPI \u003d Ship(node: node, itemsConsumed: [])"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "        let owner5 \u003d GenericPlayerStub()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        owner5.money.value \u003d 100000"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "henry"
        },
        "content": "        ship5.owner \u003d owner5"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "henry"
        },
        "content": "        let (bool5, msg5) \u003d upgradeManager.installUpgrade(ship: \u0026ship5, upgrade: BiggerSailsUpgrade())"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "henry"
        },
        "content": "        guard let message5 \u003d msg5 else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"msg5 is nil\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "henry"
        },
        "content": "            return"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(bool5, true)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(message5.getMessage(), InfoMessage.upgradePurchased(upgrade: BiggerSailsUpgrade()).getMessage())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(owner5.money.value, 100000 - BiggerSailsUpgrade().cost)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertNotNil(ship5.auxiliaryUpgrade)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "henry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "henry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 81
    }
  },
  {
    "path": "SailingThroughHistoryTests/Interface/ADT/NodePathsTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ObjectPathTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class NodePathsTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let testNode1 \u003d Node(name: \"testnode1\", frame: Rect())"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let testNode2 \u003d Node(name: \"testnode2\", frame: Rect())"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let testNode3 \u003d Node(name: \"testnode3\", frame: Rect())"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var testPath1 \u003d Path(from: testNode1, to: testNode2)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var testPath2 \u003d Path(from: testNode2, to: testNode3)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var testPathReflexive \u003d Path(from: testNode1, to: testNode1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testInit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        _ \u003d NodePaths()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testAdd() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var paths \u003d NodePaths()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPath1)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPath1), \"Path not added properly\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(paths.allPaths.count, 1, \"Path was added more or less than once\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPath2)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPath2), \"Path not added properly\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPath1), \"Previously added path was removed.\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(paths.allPaths.count, 2, \"Path was not added properly\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPathReflexive)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPathReflexive), \"Path not added properly\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPath1), \"Previously added path was removed.\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPath2), \"Previously added path was removed.\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(paths.allPaths.count, 3, \"Path was not added properly\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPath1)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPath1), \"Path not added properly\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPathReflexive), \"Previously added path was removed.\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPath2), \"Previously added path was removed.\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(paths.allPaths.count, 3, \"Duplicate path was not handled properly\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testRemove() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var paths \u003d NodePaths()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPath1)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPath2)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPathReflexive)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.remove(path: testPathReflexive)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertFalse(paths.contains(path: testPathReflexive), \"Reflexive path not removed properly\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(paths.allPaths.count, 2, \"Path was not removed properly\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.remove(path: testPath2)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertFalse(paths.contains(path: testPath2), \"Reflexive path not removed properly\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(paths.allPaths.count, 1, \"Path was not removed properly\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.remove(path: testPath1)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertFalse(paths.contains(path: testPath1), \"Reflexive path not removed properly\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(paths.allPaths.count, 0, \"Path was not removed properly\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testAddRemove() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var paths \u003d NodePaths()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPath1)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPath2)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPathReflexive)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.remove(path: testPathReflexive)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        paths.add(path: testPathReflexive)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(paths.contains(path: testPathReflexive), \"Reflexive path not added properly\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(paths.allPaths.count, 3, \"Path was not added properly\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    /// contains and allPaths were implicitly tested in the above cases."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 73
    }
  },
  {
    "path": "SailingThroughHistoryTests/Interface/ADT/RectTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  RectTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class RectTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testValueType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// This is needed as let keyword is used later to check if the rect has been modified."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        /// If rect is changed to a reference type, then the tests need to be changed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertNil(Rect() as? AnyClass,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                     \"Reference type detected, code has to be changed to be compatible\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testInit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let rect \u003d Rect()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect.height, 0, \"Default initializer not working properly\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect.width, 0, \"Default initializer not working properly\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect.originX, 0, \"Default initializer not working properly\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect.originY, 0, \"Default initializer not working properly\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let rect2 \u003d Rect(originX: 1, originY: 2, height: 3, width: 4)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect2.height, 3, \"Initialized with wrong values\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect2.width, 4, \"Initialized with wrong values\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect2.originX, 1, \"Initialized with wrong values\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect2.originY, 2, \"Initialized with wrong values\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testMid() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let rect \u003d Rect()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect.midX, 0, \"Mid X is wrong with default rect\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect.midY, 0, \"Mid Y is wrong with default rect\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let rect2 \u003d Rect(originX: 1, originY: 2, height: 3, width: 4)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect2.midX, 3, \"Mid X is wrong\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(rect2.midY, 3.5, \"Mid Y is wrong\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testMove() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let rect \u003d Rect() // Using let constant ensures that original rect is unchanged."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let moved \u003d rect.movedTo(originX: 5, originY: 1)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(moved.height, 0, \"Move changed height\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(moved.width, 0, \"Move changed width\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(moved.originX, 5, \"Moved to wrong location\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(moved.originY, 1, \"Moved to wrong location\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let rect2 \u003d Rect(originX: 1, originY: 2, height: 3, width: 4)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let moved2 \u003d rect2.movedTo(originX: 1, originY: 1)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(moved2.height, 3, \"Move changed height\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(moved2.width, 4, \"Move changed width\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(moved2.originX, 1, \"Moved to wrong location\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(moved2.originY, 1, \"Moved to wrong location\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 57
    }
  },
  {
    "path": "SailingThroughHistoryTests/Interface/AlertWindowControllerTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  AlertWindowControllerTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class AlertWindowControllerTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let wrapper \u003d UIView()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let message \u003d UILabel()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let button \u003d UIButton()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let delegate \u003d DelegateStub() /// Strong reference needed to keep delegate in memory."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var controller \u003d AlertWindowController(delegate: delegate, wrapperView: wrapper,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "                                                        messageView: message, buttonView: button)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testShow() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        wrapper.isHidden \u003d true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        controller.show(withMessage: \"test\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertFalse(wrapper.isHidden, \"Wrapper is not visible\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(message.text, \"test\", \"Message is not correct\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        wrapper.isHidden \u003d false"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        controller.show(withMessage: \"test\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertFalse(wrapper.isHidden, \"Wrapper is not visible\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func funcButtonAction() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        controller.buttonAction(sender: button)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(wrapper.isHidden, \"Wrapper is visible after acknoledgement\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(delegate.acknowledged, \"Not acknowledged\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testHide() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        wrapper.isHidden \u003d true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        controller.hide()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(wrapper.isHidden, \"Wrapper is not visible\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        wrapper.isHidden \u003d false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        controller.hide()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(wrapper.isHidden, \"Wrapper is not visible\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private class DelegateStub: AlertWindowDelegate {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var acknowledged \u003d false"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        func acknoledgePressed() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            acknowledged \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 52
    }
  },
  {
    "path": "SailingThroughHistoryTests/Interface/ObjectsViewControllerTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  ObjectsViewControllerTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class ObjectsViewControllerTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let map \u003d Map(map: \"test\", bounds: Rect(originX: 0, originY: 0, height: 1000, width: 1000))"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let bounds \u003d CGRect(fromRect: Rect(originX: 0, originY: 0, height: 100, width: 100))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let delegate \u003d DelegateStub()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var controller \u003d ObjectsViewController(view: view, modelBounds: map.bounds, delegate: delegate)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private lazy var view \u003d UIView(frame: bounds)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let port \u003d PortStub(team: nil, name: \"port1\", originX: 10, originY: 10)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testSubscribeNodes() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        controller.subscribeToNodes(in: map)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(view.subviews.isEmpty, \"Views added on subscription to empty map\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.addNode(port)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(view.subviews.count, 1, \"Node not added properly\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let height \u003d port.frame.height"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let width \u003d port.frame.width"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(view.subviews[0].frame, CGRect(x: 1, y: 1, width: width / 10, height: height / 10))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.removeNode(port)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(view.subviews.isEmpty, \"Node not removed properly\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testSubscribeObjects() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        controller.subscribeToObjects(in: map)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(view.subviews.isEmpty, \"Views added on subscription to empty map\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let object \u003d GameObject(frame: Rect(originX: 10, originY: 10, height: 100, width: 100))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        map.addGameObject(gameObject: object)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(view.subviews.count, 1, \"Object not added properly\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(view.subviews[0].frame, CGRect(x: 1, y: 1, width: 10, height: 10))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testTap() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let view \u003d NodeView(node: port)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(controller.onTap(nodeView: view), port.identifier, \"Wrong identifier returned\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(delegate.shownPort, port, \"Information not shown for port tapped.\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private class DelegateStub: ObjectsViewControllerDelegate {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var shownPort: SailingThroughHistory.Port?"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        init() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            shownPort \u003d nil"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        func showInformation(of port: SailingThroughHistory.Port) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            shownPort \u003d port"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 58
    }
  },
  {
    "path": "SailingThroughHistoryTests/Network/Local/LocalRoomConnectionTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  LocalRoomConnectionTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class LocalRoomConnectionTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    private let deviceId \u003d \"aa\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testInit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let connection \u003d LocalRoomConnection(deviceId: deviceId)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(connection.roomMasterId, deviceId, \"Room master id is incorrect.\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testAddPlayerAndMemberSubsciption() throws {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let connection \u003d LocalRoomConnection(deviceId: deviceId)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var members \u003d [RoomMember]()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        members.append(RoomMember(identifier: \"aaaa\", playerName: \"aaa\", teamName: nil, deviceId: deviceId))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.subscribeToMembers {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            members \u003d $0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(members.isEmpty, \"callback not called on subsciption\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.addPlayer()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(members.count, 1, \"Player not added properly\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(members[0].deviceId, deviceId)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.addPlayer()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(members.count, 2, \"Player not added properly\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertNotEqual(members[0].identifier, members[1].identifier)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(members[1].deviceId, deviceId)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try connection.changeTeamName(for: members[0].identifier, to: \"team1\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(members[0].teamName, \"team1\", \"Team name not changed properly\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertNil(members[1].teamName, \"Team name not changed properly\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try connection.changePlayerName(for: members[1].identifier, to: \"aaaa\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(members[1].playerName, \"aaaa\", \"Player name not changed properly\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertNotEqual(members[0].playerName, \"aaaa\", \"Player name not changed properly\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.remove(player: members[1].identifier)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(members.count, 1, \"Player not removed properly\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertNotEqual(members[0].playerName, \"aaaa\", \"Player name not changed properly\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testActionsAndSubscription() throws {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let connection \u003d LocalRoomConnection(deviceId: deviceId)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let player1 \u003d GameMaster(name: \"a\", deviceId: deviceId)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let player2 \u003d GameMaster(name: \"x\", deviceId: deviceId)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var actions1 \u003d [(String, [PlayerAction])]()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actions1.append((\"x\", [.pirate]))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var actions2 \u003d [(String, [PlayerAction])]()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        actions2.append((\"a\", [.pirate]))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.subscribeToActions(for: 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            actions1 \u003d $0"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            XCTAssertNil($1, \"Error is not nil\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.subscribeToActions(for: 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            actions2 \u003d $0"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            XCTAssertNil($1, \"Error is not nil\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(actions1.isEmpty, \"callback not called on subsciption\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(actions2.isEmpty, \"callback not called on subsciption\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try connection.push(actions: [.pirate], fromPlayer: player1, forTurnNumbered: 1) { _ in }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        try connection.push(actions: [.pirate], fromPlayer: player2, forTurnNumbered: 2) { _ in }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(actions1.count, 1, \"Action not added properly\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(actions2.count, 1, \"Action not added properly\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(actions1[0].0, player1.name, \"Action not added properly\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if case PlayerAction.pirate \u003d actions1[0].1[0] {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            XCTFail(\"Action not added properly\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        if case PlayerAction.pirate \u003d actions2[0].1[0] {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            XCTFail(\"Action not added properly\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(actions2[0].0, player2.name, \"Action not added properly\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testSetTeamNameAndSubscribe() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        let connection \u003d LocalRoomConnection(deviceId: deviceId)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        var teams \u003d [String]()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        teams.append(\"aaa\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.subscibeToTeamNames {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            teams \u003d $0"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertTrue(teams.isEmpty, \"Callback not called on subscription\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        connection.set(teams: [Team(name: \"team1\"), Team(name: \"team2\")])"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCTAssertEqual(teams, [\"team1\", \"team2\"])"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 91
    }
  },
  {
    "path": "SailingThroughHistoryTests/SailingThroughHistoryTests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class SailingThroughHistoryTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testExample() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // This is an example of a functional test case."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testPerformanceExample() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // This is an example of a performance test case."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        self.measure {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "            // Put the code you want to measure the time of here."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 34
    }
  },
  {
    "path": "SailingThroughHistoryTests/TurnSystem/EventPresetsTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  EventPresetsTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class EventPresetsTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testUniqueIdentifier() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let presets \u003d TestClasses.createEventPresets()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        var set \u003d [Int: PresetEvent]()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "henry"
        },
        "content": "        for preset in presets.getEvents() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if set.contains(where: { $0.0 \u003d\u003d preset.identifier }) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTFail(\"Non-unique keys\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            set[preset.identifier] \u003d preset"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 3,
      "yuhongherald": 20
    }
  },
  {
    "path": "SailingThroughHistoryTests/TurnSystem/PlayerActionAdapterTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerActionAdapterTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "henry"
        },
        "content": "class PlayerActionAdapterTests: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testProcess() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let state \u003d GameVariable\u003cTurnSystemNetwork.State\u003e("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            value: TurnSystemNetwork.State.invalid)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let networkInfo \u003d TestClasses.createNetworkInfo()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "henry"
        },
        "content": "        let data \u003d TestClasses.createTestState(numPlayers: 2)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let adapter \u003d PlayerActionAdapter("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            stateVariable: state,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            networkInfo: networkInfo,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            data: data)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let player \u003d data.gameState.getPlayers()[0]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let otherPlayer \u003d data.gameState.getPlayers()[1]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let location \u003d data.gameState.map.getNodes().filter({"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            $0.identifier !\u003d player.node?.identifier }).first else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                XCTFail(\"There should be 2 connected nodes on the test map\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let playerAction \u003d PlayerAction.move(toNodeId: location.identifier, isEnd: false)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state.value \u003d .invalid"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        moveFail(adapter: adapter, playerAction: playerAction, player: player)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state.value \u003d .evaluateMoves(for: player)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        moveFail(adapter: adapter, playerAction: playerAction, player: otherPlayer)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // not checking result"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            _ \u003d try adapter.process(action: playerAction, for: player)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            XCTFail(\"Player\u0027s move unable to be evaluated, wrong phase\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func moveFail(adapter: PlayerActionAdapter, playerAction: PlayerAction,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                          player: GenericPlayer) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            _ \u003d try adapter.process(action: playerAction, for: player)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTFail(\"Player 2 should not be able to move!\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // not testing the other functionality"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 2,
      "yuhongherald": 51
    }
  },
  {
    "path": "SailingThroughHistoryTests/TurnSystem/PlayerInputControllerTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  PlayerInputController.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import Foundation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class PlayerInputControllerTest: XCTestCase {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testCheckInputAllowed() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "henry"
        },
        "content": "        let inputController \u003d TestClasses.createInputController(timer: 2) { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let player \u003d inputController.data.gameState.getPlayers()[0]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let otherPlayer \u003d inputController.data.gameState.getPlayers()[1]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        inputController.network.state \u003d TurnSystemNetwork.State.playerInput("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            from: player, endTime: TimeInterval(2))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            try inputController.checkInputAllowed(from: player)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            XCTFail(\"Should allow player 1 to go\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            try inputController.checkInputAllowed(from: otherPlayer)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTFail(\"Should not allow player 2 to go\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testStartPlayerInput() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "        let expectation \u003d XCTestExpectation(description: \"End p1\u0027s turn\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        let inputController \u003d TestClasses.createInputController(timer: 2) { expectation.fulfill() }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let player \u003d inputController.data.gameState.getPlayers()[0]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let otherPlayer \u003d inputController.data.gameState.getPlayers()[1]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        inputController.startPlayerInput(from: player)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "henry"
        },
        "content": "        wait(for: [expectation], timeout: 3)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch inputController.network.state {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .waitPlayerInput(from: let player):"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(player.deviceId, otherPlayer.deviceId,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                           \"Player 1\u0027s turn should be over!\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Wrong state!\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 10,
      "yuhongherald": 38
    }
  },
  {
    "path": "SailingThroughHistoryTests/TurnSystem/TurnSystemEventsTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnSystemEventsTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "henry"
        },
        "content": "import SailingThroughHistory"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "henry"
        },
        "content": "/*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemEventsTest: XCTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testTaxChangeEvent() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let state \u003d TestClasses.createTestState(numPlayers: 1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let gameState \u003d state.gameState"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let event \u003d TaxChangeEvent(gameState: gameState,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                                   genericOperator: AddOperator\u003cInt\u003e(), modifier: 1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // get all the ports not owned by any player"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let neutralPorts \u003d getAllNeutralPorts(gameState: gameState)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        var taxes: [Int: Int] \u003d [Int: Int]()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // check the tax"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for port in neutralPorts {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            taxes[port.identifier] \u003d port.taxAmount.value"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        event.active \u003d true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // run event check"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        _ \u003d state.checkForEvents()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // check the tax again"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        for port in neutralPorts {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // assume no change in ownership"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            guard let tax \u003d taxes[port.identifier] else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "henry"
        },
        "content": "                XCTFail(\"Port tax value is missing\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                break"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            XCTAssertEqual(tax + 1, port.taxAmount.value, \"Port tax value reflected wrongly!\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func getAllNeutralPorts(gameState: GenericGameState) -\u003e [Port] {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        var result: [Port] \u003d []"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "henry"
        },
        "content": "        for rawPort in gameState.map.getNodes() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "            guard let port \u003d rawPort as? Port, port.owner \u003d\u003d nil else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                continue"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            result.append(port)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        return result"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "henry"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "henry": 8,
      "yuhongherald": 45
    }
  },
  {
    "path": "SailingThroughHistoryTests/TurnSystem/TurnSystemStateTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnSystemStateTests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 20/4/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemStateTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testEvents() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let state \u003d TestClasses.createTestState(numPlayers: 1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let first \u003d TestClasses.createTestEvent(identifier: 0)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let second \u003d TestClasses.createPresetEvent(identifier: 1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let third \u003d TestClasses.createTestEvent(identifier: 2)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(state.events.isEmpty, \"Should be empty by default\") // 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(state.addEvents(events: [first]), \"Should have no conflict\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(Set\u003cInt\u003e([0]), Set(Array(state.events.keys)), \"SHould be the same\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertFalse(state.addEvents(events: [first, second]), \"SHould have conflict\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(Set\u003cInt\u003e([0, 1]), Set(Array(state.events.keys)), \"SHould be the same\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(state.removeEvents(events: [second]), \"Should have no conflict\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(Set\u003cInt\u003e([0]), Set(Array(state.events.keys)), \"SHould be the same\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertFalse(state.removeEvents(events: [third]), \"SHould have conflict\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(Set\u003cInt\u003e([0]), Set(Array(state.events.keys)), \"SHould be the same\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(state.setEvents(events: [second, third]), \"Should have no conflict\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(Set\u003cInt\u003e([1, 2]), Set(Array(state.events.keys)), \"SHould be the same\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(state.setEvents(events: []), \"Should have no conflict\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(Set\u003cInt\u003e([]), Set(Array(state.events.keys)), \"SHould be the same\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertTrue(state.setEvents(events: [first]), \"Should have no conflict\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(Set\u003cInt\u003e([0]), Set(Array(state.events.keys)), \"SHould be the same\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testTurnFinished() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let state \u003d TestClasses.createTestState(numPlayers: 1)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let currentTurn \u003d state.currentTurn"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state.turnFinished()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertEqual(currentTurn + 1, state.currentTurn, \"Turn should have incremented\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testGetPresetEvents() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let state \u003d TestClasses.createTestState(numPlayers: 1)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let first \u003d TestClasses.createTestEvent(identifier: 0)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let second \u003d TestClasses.createPresetEvent(identifier: 1)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let third \u003d TestClasses.createPresetEvent(identifier: 2)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(state.getPresetEvents().isEmpty, \"Should be empty by default\") // 0"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state.addEvents(events: [first])"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(state.getPresetEvents().isEmpty, \"Should be empty without presets\") // 0"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state.addEvents(events: [second, third])"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertEqual(Set([1, 2]),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        Set(state.getPresetEvents().map { $0.identifier }),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        \"List should have both presets\") // 2"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let presets \u003d TestClasses.createEventPresets().getEvents()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state.setEvents(events: presets)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertEqual(Set(presets.map{ $0.identifier }),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        Set(state.getPresetEvents().map { $0.identifier }),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        \"List should be complete with from table\") // all"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testCheckForEvents() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let state \u003d TestClasses.createTestState(numPlayers: 1)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        // simplified"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let first \u003d TestClasses.createPresetEvent(identifier: 0)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        first.active \u003d true"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        state.addEvents(events: [first])"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertEqual(state.checkForEvents().count, 1,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                       \"Active preset should have triggered\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertFalse(first.active, \"Active preset should have deactivated\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(state.checkForEvents().isEmpty, \"Active preset should have deactivated\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 9,
      "yuhongherald": 65
    }
  },
  {
    "path": "SailingThroughHistoryTests/TurnSystem/TurnSystemTest.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  TurnSystemTest.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  SailingThroughHistoryTests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Created by Herald on 30/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "@testable import SailingThroughHistory"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "class TurnSystemTest: XCTestCase {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testGetPresetEvents() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let turnSystem \u003d TestClasses.createTestSystem(numPlayers: 0)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        guard let events \u003d turnSystem.eventPresets?.getEvents() else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            XCTFail(\"Turn system initialized without event presets\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let otherEvents \u003d turnSystem.getPresetEvents()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertEqual(events.map { $0.displayName }, otherEvents.map { $0.displayName }, \"Events not same!\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testStartGame() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let turnSystem0 \u003d TestClasses.createTestSystem(numPlayers: 0)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let turnSystem1 \u003d TestClasses.createTestSystem(numPlayers: 1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let turnSystem2 \u003d TestClasses.createTestSystem(numPlayers: 2)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        turnSystem0.startGame()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch turnSystem0.network.state {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .waitForTurnFinish: break"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "henry"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Wrong state for 0 players\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        turnSystem1.startGame()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch turnSystem1.network.state {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .waitPlayerInput(from: let player):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTAssertEqual(player.deviceId,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "henry"
        },
        "content": "                           turnSystem1.gameState.getPlayers()[0].deviceId,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                           \"Wrong state for 1 player\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "henry"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Wrong state for 1 player\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "         turnSystem2.startGame()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch turnSystem2.network.state {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .waitPlayerInput(from: let player):"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "henry"
        },
        "content": "        XCTAssertEqual(player.deviceId,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "henry"
        },
        "content": "                       turnSystem2.gameState.getPlayers()[0].deviceId,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "henry"
        },
        "content": "        \"Wrong state for 1 player\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "henry"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Wrong state for 2 players\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    // to represent all the actions"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testRoll() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let turnSystem \u003d TestClasses.createTestSystem(numPlayers: 2)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "henry"
        },
        "content": "        rollOnWrongState(turnSystem: turnSystem)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "henry"
        },
        "content": "        turnSystem.network.state \u003d .playerInput("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "henry"
        },
        "content": "            from: turnSystem.gameState.getPlayers()[0],"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "henry"
        },
        "content": "            endTime: TimeInterval(2))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            _ \u003d try turnSystem.roll(for: turnSystem.gameState.getPlayers()[0])"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            XCTFail(\"Failed to roll the dice, wrong state\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "henry"
        },
        "content": "        turnSystem.network.state \u003d .playerInput("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "henry"
        },
        "content": "            from: turnSystem.gameState.getPlayers()[1],"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "henry"
        },
        "content": "            endTime: TimeInterval(2))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "henry"
        },
        "content": "        rollOnWrongState(turnSystem: turnSystem)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    private func rollOnWrongState(turnSystem: TurnSystem) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            _ \u003d try turnSystem.roll(for: turnSystem.gameState.getPlayers()[0])"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTFail(\"Managed to roll the dice, on wrong state\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testSubscribeToState() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let result \u003d GameVariable\u003cBool\u003e(value: false)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "henry"
        },
        "content": "        let turnSystem \u003d TestClasses.createTestSystem(numPlayers: 2)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        turnSystem.subscribeToState {_ in"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            result.value \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "henry"
        },
        "content": "        turnSystem.network.state \u003d .playerInput("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "henry"
        },
        "content": "            from: turnSystem.gameState.getPlayers()[0],"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "henry"
        },
        "content": "            endTime: TimeInterval(2))"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertTrue(result.value, \"Not notified on subscription!\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        result.value \u003d false"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            _ \u003d try turnSystem.roll(for: turnSystem.gameState.getPlayers()[0])"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        } catch {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            XCTFail(\"Failed to roll the dice, wrong state\")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        XCTAssertFalse(result.value, \"Notified when there is no change!\")"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    func testEndTurn() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        let turnSystem \u003d TestClasses.createTestSystem(numPlayers: 1)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        turnSystem.startGame()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        turnSystem.endTurn()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "henry"
        },
        "content": "        switch turnSystem.network.state {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "henry"
        },
        "content": "        case .waitForTurnFinish: break"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "henry"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "henry"
        },
        "content": "            XCTFail(\"Should be waiting for turn to finish!\")"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "henry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "henry": 37,
      "yuhongherald": 73
    }
  },
  {
    "path": "SailingThroughHistoryUITests/SailingThroughHistoryUITests.swift",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryUITests.swift"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  SailingThroughHistoryUITests"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Created by Jason Chong on 14/3/19."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//  Copyright © 2019 Sailing Through History Team. All rights reserved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "import XCTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "class SailingThroughHistoryUITests: XCTestCase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Put setup code here. This method is called before the invocation of each test method in the class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // In UI tests it is usually best to stop immediately when a failure occurs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        continueAfterFailure \u003d false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        XCUIApplication().launch()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    override func tearDown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Put teardown code here. This method is called after the invocation of each test method in the class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    func testExample() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Use recording to get started writing UI tests."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "        // Use XCTAssert and related functions to verify your tests produce the correct results."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jason Chong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jason Chong": 32
    }
  }
]
